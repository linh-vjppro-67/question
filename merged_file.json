[
    {
        "id": "1",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the correct syntax to create a functional component in React?",
        "options": [
            {
                "description": "function MyComponent() {}",
                "isAnswerKey": true
            },
            {
                "description": "component MyComponent() {}",
                "isAnswerKey": false
            },
            {
                "description": "createComponent MyComponent() {}",
                "isAnswerKey": false
            },
            {
                "description": "React.Component MyComponent() {}",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "2",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is true about JSX?",
        "options": [
            {
                "description": "JSX is a syntax extension for JavaScript.",
                "isAnswerKey": true
            },
            {
                "description": "JSX is a framework for building user interfaces.",
                "isAnswerKey": false
            },
            {
                "description": "JSX is a replacement for JavaScript.",
                "isAnswerKey": false
            },
            {
                "description": "JSX is used only for styling components.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "3",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the purpose of the 'key' prop in React?",
        "options": [
            {
                "description": "To uniquely identify elements in a list.",
                "isAnswerKey": true
            },
            {
                "description": "To style elements differently.",
                "isAnswerKey": false
            },
            {
                "description": "To bind events to elements.",
                "isAnswerKey": false
            },
            {
                "description": "To pass data between components.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "4",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which method is used to update state in a React class component?",
        "options": [
            {
                "description": "this.setState()",
                "isAnswerKey": true
            },
            {
                "description": "this.updateState()",
                "isAnswerKey": false
            },
            {
                "description": "this.changeState()",
                "isAnswerKey": false
            },
            {
                "description": "this.state()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "5",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the virtual DOM in React?",
        "options": [
            {
                "description": "A lightweight copy of the actual DOM.",
                "isAnswerKey": true
            },
            {
                "description": "A database used by React to store data.",
                "isAnswerKey": false
            },
            {
                "description": "A server-side rendering tool.",
                "isAnswerKey": false
            },
            {
                "description": "A browser API used by React.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "6",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which hook is used to manage state in a functional component?",
        "options": [
            {
                "description": "useState",
                "isAnswerKey": true
            },
            {
                "description": "useEffect",
                "isAnswerKey": false
            },
            {
                "description": "useContext",
                "isAnswerKey": false
            },
            {
                "description": "useReducer",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "7",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What does React.Fragment do?",
        "options": [
            {
                "description": "Allows grouping multiple elements without adding extra nodes to the DOM.",
                "isAnswerKey": true
            },
            {
                "description": "Creates a new component.",
                "isAnswerKey": false
            },
            {
                "description": "Manages component state.",
                "isAnswerKey": false
            },
            {
                "description": "Provides styling capabilities.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "8",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What does the 'useEffect' hook do in React?",
        "options": [
            {
                "description": "Performs side effects in a function component.",
                "isAnswerKey": true
            },
            {
                "description": "Manages component state.",
                "isAnswerKey": false
            },
            {
                "description": "Creates a new context.",
                "isAnswerKey": false
            },
            {
                "description": "Adds event listeners to the component.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "9",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which lifecycle method is used to fetch data after a component mounts?",
        "options": [
            {
                "description": "componentDidMount",
                "isAnswerKey": true
            },
            {
                "description": "componentWillMount",
                "isAnswerKey": false
            },
            {
                "description": "componentWillUpdate",
                "isAnswerKey": false
            },
            {
                "description": "componentDidUpdate",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "10",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which syntax is used to render a React component?",
        "options": [
            {
                "description": "<Component />",
                "isAnswerKey": true
            },
            {
                "description": "{Component}",
                "isAnswerKey": false
            },
            {
                "description": "[Component]",
                "isAnswerKey": false
            },
            {
                "description": "(Component)",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "11",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Consider the following code snippet. What will be the output?\n\n```jsx\nfunction MyComponent() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setCount(10);\n  }, []);\n  return <div>{count}</div>;\n}\n```\n",
        "options": [
            {
                "description": "10",
                "isAnswerKey": true
            },
            {
                "description": "0",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "null",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "12",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of using 'return null' in a React component?",
        "options": [
            {
                "description": "To render nothing and prevent any HTML output.",
                "isAnswerKey": true
            },
            {
                "description": "To clear out the component's state.",
                "isAnswerKey": false
            },
            {
                "description": "To reset the component.",
                "isAnswerKey": false
            },
            {
                "description": "To trigger a component rerender.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "13",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the following code, what will be logged when the button is clicked?\n\n```jsx\nfunction App() {\n  const [count, setCount] = useState(0);\n  const handleClick = () => {\n    setCount(count + 1);\n    console.log(count);\n  };\n  return <button onClick={handleClick}>Click me</button>;\n}\n```\n",
        "options": [
            {
                "description": "0",
                "isAnswerKey": true
            },
            {
                "description": "1",
                "isAnswerKey": false
            },
            {
                "description": "2",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "14",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the correct way to pass props to a component in React?",
        "options": [
            {
                "description": "<MyComponent propName='value' />",
                "isAnswerKey": true
            },
            {
                "description": "<MyComponent propName>value</MyComponent>",
                "isAnswerKey": false
            },
            {
                "description": "<MyComponent propName={value} />",
                "isAnswerKey": false
            },
            {
                "description": "<MyComponent:value />",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "15",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the output of the component below?\n\n```jsx\nfunction Example() {\n  const [text, setText] = useState('Hello');\n  return <div>{text}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Hello",
                "isAnswerKey": true
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "null",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "16",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which React hook can be used to perform an action when the component is first rendered?",
        "options": [
            {
                "description": "useEffect(() => {}, [])",
                "isAnswerKey": true
            },
            {
                "description": "useLayoutEffect(() => {}, [])",
                "isAnswerKey": false
            },
            {
                "description": "useState(() => {}, [])",
                "isAnswerKey": false
            },
            {
                "description": "useReducer(() => {}, [])",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "17",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What does the following component return?\n\n```jsx\nfunction Display() {\n  return (\n    <>\n      <h1>Title</h1>\n      <p>Paragraph</p>\n    </>\n  );\n}\n```\n",
        "options": [
            {
                "description": "A fragment containing an h1 and a p element.",
                "isAnswerKey": true
            },
            {
                "description": "An error because fragments cannot contain multiple elements.",
                "isAnswerKey": false
            },
            {
                "description": "Only the h1 element.",
                "isAnswerKey": false
            },
            {
                "description": "An empty div.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "18",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the correct way to conditionally render a component in React?",
        "options": [
            {
                "description": "{show && <Component />}",
                "isAnswerKey": true
            },
            {
                "description": "{show ? <Component />}",
                "isAnswerKey": false
            },
            {
                "description": "{show | <Component />}",
                "isAnswerKey": false
            },
            {
                "description": "{show || <Component />}",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "19",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following statements about state in React is true?",
        "options": [
            {
                "description": "State is used to store data that can change over time.",
                "isAnswerKey": true
            },
            {
                "description": "State is used to pass data between components.",
                "isAnswerKey": false
            },
            {
                "description": "State is immutable and cannot be changed.",
                "isAnswerKey": false
            },
            {
                "description": "State is only available in class components.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "20",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the output of the following component?\n\n```jsx\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  setCount(5);\n  return <div>{count}</div>;\n}\n```\n",
        "options": [
            {
                "description": "5",
                "isAnswerKey": true
            },
            {
                "description": "0",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "21",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "How do you create a context in React?",
        "options": [
            {
                "description": "React.createContext()",
                "isAnswerKey": true
            },
            {
                "description": "React.Context()",
                "isAnswerKey": false
            },
            {
                "description": "createReactContext()",
                "isAnswerKey": false
            },
            {
                "description": "React.useContext()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "22",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the purpose of the 'useReducer' hook in React?",
        "options": [
            {
                "description": "To manage state using reducers.",
                "isAnswerKey": true
            },
            {
                "description": "To replace useState for simple state management.",
                "isAnswerKey": false
            },
            {
                "description": "To perform side effects.",
                "isAnswerKey": false
            },
            {
                "description": "To manage lifecycle events.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "23",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Consider the following code snippet. How do you access the context value?\n\n```jsx\nconst MyContext = React.createContext('default');\nfunction Component() {\n  // Access context value here\n}\n```\n",
        "options": [
            {
                "description": "const value = useContext(MyContext);",
                "isAnswerKey": true
            },
            {
                "description": "const value = React.useContext();",
                "isAnswerKey": false
            },
            {
                "description": "const value = MyContext.useContext();",
                "isAnswerKey": false
            },
            {
                "description": "const value = MyContext();",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "24",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the correct way to update a React state with an array of items?",
        "options": [
            {
                "description": "setItems([...items, newItem])",
                "isAnswerKey": true
            },
            {
                "description": "setItems([newItem])",
                "isAnswerKey": false
            },
            {
                "description": "setItems(items.push(newItem))",
                "isAnswerKey": false
            },
            {
                "description": "setItems({newItem})",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "25",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will be the result of calling 'setState' in a React component?",
        "options": [
            {
                "description": "A re-render of the component.",
                "isAnswerKey": true
            },
            {
                "description": "Removal of the component from the DOM.",
                "isAnswerKey": false
            },
            {
                "description": "An error if the state is unchanged.",
                "isAnswerKey": false
            },
            {
                "description": "A warning in the console.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "26",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you optimize a React component to prevent unnecessary renders?",
        "options": [
            {
                "description": "Use React.memo()",
                "isAnswerKey": true
            },
            {
                "description": "Use React.render()",
                "isAnswerKey": false
            },
            {
                "description": "Use React.optimize()",
                "isAnswerKey": false
            },
            {
                "description": "Use React.lazy()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "27",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "How do you handle form input changes in a React component?",
        "options": [
            {
                "description": "Using onChange event handler",
                "isAnswerKey": true
            },
            {
                "description": "Using onInputChange event handler",
                "isAnswerKey": false
            },
            {
                "description": "Using onSubmit event handler",
                "isAnswerKey": false
            },
            {
                "description": "Using onClick event handler",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "28",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the purpose of a 'ref' in React?",
        "options": [
            {
                "description": "To access DOM nodes directly.",
                "isAnswerKey": true
            },
            {
                "description": "To pass data between components.",
                "isAnswerKey": false
            },
            {
                "description": "To manage component state.",
                "isAnswerKey": false
            },
            {
                "description": "To trigger component lifecycle events.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "29",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "How do you perform a cleanup operation in a React component?",
        "options": [
            {
                "description": "Return a function in useEffect",
                "isAnswerKey": true
            },
            {
                "description": "Use componentDidUnmount",
                "isAnswerKey": false
            },
            {
                "description": "Use useCleanup hook",
                "isAnswerKey": false
            },
            {
                "description": "Call cleanup() in useState",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "30",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the purpose of 'React.StrictMode'?",
        "options": [
            {
                "description": "To highlight potential problems in an application.",
                "isAnswerKey": true
            },
            {
                "description": "To prevent component rendering.",
                "isAnswerKey": false
            },
            {
                "description": "To enable experimental features.",
                "isAnswerKey": false
            },
            {
                "description": "To ensure components are updated synchronously.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "31",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the error in the following code snippet:\n\n```jsx\nfunction App() {\n  const [count, setCount] = useState();\n  return <div>{count}</div>;\n}\n```\n",
        "options": [
            {
                "description": "useState requires an initial value.",
                "isAnswerKey": true
            },
            {
                "description": "useState is not a valid hook.",
                "isAnswerKey": false
            },
            {
                "description": "setCount is used incorrectly.",
                "isAnswerKey": false
            },
            {
                "description": "React components cannot return JSX.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "32",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is wrong with this code snippet?\n\n```jsx\nfunction MyComponent() {\n  useEffect(() => {\n    console.log('Mounted');\n  }, [count]);\n  const [count, setCount] = useState(0);\n  return <div>{count}</div>;\n}\n```\n",
        "options": [
            {
                "description": "useEffect dependency array should not reference 'count' before initialization.",
                "isAnswerKey": true
            },
            {
                "description": "useEffect cannot be used in a functional component.",
                "isAnswerKey": false
            },
            {
                "description": "useState should be called before useEffect.",
                "isAnswerKey": false
            },
            {
                "description": "The return statement is incorrect.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "33",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```jsx\nfunction App() {\n  const [value, setValue] = useState('Hello');\n  setValue('World');\n  return <div>{value}</div>;\n}\n```\n",
        "options": [
            {
                "description": "World",
                "isAnswerKey": true
            },
            {
                "description": "Hello",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "34",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you fix the error in this component?\n\n```jsx\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setCount(count + 1);\n  }, []);\n  return <div>{count}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Remove the setCount call from useEffect.",
                "isAnswerKey": true
            },
            {
                "description": "Add count to the dependency array in useEffect.",
                "isAnswerKey": false
            },
            {
                "description": "Move useEffect outside the component.",
                "isAnswerKey": false
            },
            {
                "description": "Use a class component instead.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "35",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the issue with the following component?\n\n```jsx\nfunction Timer() {\n  const [seconds, setSeconds] = useState(0);\n  setInterval(() => {\n    setSeconds(seconds + 1);\n  }, 1000);\n  return <div>{seconds}</div>;\n}\n```\n",
        "options": [
            {
                "description": "setInterval creates a new interval on every render.",
                "isAnswerKey": true
            },
            {
                "description": "useState cannot be used with numbers.",
                "isAnswerKey": false
            },
            {
                "description": "setSeconds is not a function.",
                "isAnswerKey": false
            },
            {
                "description": "React cannot update numbers.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "36",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the error in the following code snippet?\n\n```jsx\nfunction App() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    document.title = `Count: ${count}`;\n  });\n  return <div>{count}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Missing dependency array in useEffect.",
                "isAnswerKey": true
            },
            {
                "description": "useEffect cannot modify document.title.",
                "isAnswerKey": false
            },
            {
                "description": "setCount is used incorrectly.",
                "isAnswerKey": false
            },
            {
                "description": "The return statement is incorrect.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "37",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```jsx\nfunction App() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setCount(count + 2);\n  }, [count]);\n  return <div>{count}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Infinite loop",
                "isAnswerKey": true
            },
            {
                "description": "2",
                "isAnswerKey": false
            },
            {
                "description": "0",
                "isAnswerKey": false
            },
            {
                "description": "4",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "38",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the problem with the following component?\n\n```jsx\nfunction App() {\n  const [name, setName] = useState('React');\n  useEffect(() => {\n    if (name === 'React') {\n      setName('ReactJS');\n    }\n  }, []);\n  return <div>{name}</div>;\n}\n```\n",
        "options": [
            {
                "description": "useEffect will not run again after the initial render.",
                "isAnswerKey": true
            },
            {
                "description": "setName is used incorrectly.",
                "isAnswerKey": false
            },
            {
                "description": "The condition in useEffect is incorrect.",
                "isAnswerKey": false
            },
            {
                "description": "useState cannot be used with strings.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "39",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you fix the error in this component?\n\n```jsx\nfunction App() {\n  const [data, setData] = useState(null);\n  fetch('/api/data')\n    .then(response => response.json())\n    .then(data => setData(data));\n  return <div>{data}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Move fetch call inside useEffect.",
                "isAnswerKey": true
            },
            {
                "description": "Add a dependency array to useState.",
                "isAnswerKey": false
            },
            {
                "description": "Use async/await instead of promises.",
                "isAnswerKey": false
            },
            {
                "description": "Replace fetch with axios.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "40",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is wrong with this code snippet?\n\n```jsx\nfunction App() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    setIsLoaded(true);\n  }, []);\n  useEffect(() => {\n    setIsLoaded(false);\n  }, [isLoaded]);\n  return <div>{isLoaded ? 'Loaded' : 'Loading'}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Infinite loop due to second useEffect.",
                "isAnswerKey": true
            },
            {
                "description": "Incorrect use of useState and useEffect.",
                "isAnswerKey": false
            },
            {
                "description": "setIsLoaded is used incorrectly.",
                "isAnswerKey": false
            },
            {
                "description": "useEffect cannot update state.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "41",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Predict the output of the following code snippet:\n\n```jsx\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setCount(count + 1);\n  }, [count]);\n  return <div>{count}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Infinite loop",
                "isAnswerKey": true
            },
            {
                "description": "1",
                "isAnswerKey": false
            },
            {
                "description": "2",
                "isAnswerKey": false
            },
            {
                "description": "0",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "42",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be rendered by the following component?\n\n```jsx\nfunction App() {\n  const [state, setState] = useState('initial');\n  useEffect(() => {\n    setState('updated');\n  }, []);\n  return <div>{state}</div>;\n}\n```\n",
        "options": [
            {
                "description": "updated",
                "isAnswerKey": true
            },
            {
                "description": "initial",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "43",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Given the component below, what will be the content of the div?\n\n```jsx\nfunction Example() {\n  const [message, setMessage] = useState('Hello');\n  setMessage('World');\n  return <div>{message}</div>;\n}\n```\n",
        "options": [
            {
                "description": "World",
                "isAnswerKey": true
            },
            {
                "description": "Hello",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "44",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will the following code output?\n\n```jsx\nfunction App() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setCount(5);\n  });\n  return <div>{count}</div>;\n}\n```\n",
        "options": [
            {
                "description": "5",
                "isAnswerKey": true
            },
            {
                "description": "0",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "45",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Predict the output of the following code:\n\n```jsx\nfunction Timer() {\n  const [seconds, setSeconds] = useState(0);\n  setInterval(() => {\n    setSeconds(seconds + 1);\n  }, 1000);\n  return <div>{seconds}</div>;\n}\n```\n",
        "options": [
            {
                "description": "0",
                "isAnswerKey": true
            },
            {
                "description": "1",
                "isAnswerKey": false
            },
            {
                "description": "2",
                "isAnswerKey": false
            },
            {
                "description": "Infinite loop",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "46",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```jsx\nfunction App() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setCount(count + 1);\n  }, []);\n  return <div>{count}</div>;\n}\n```\n",
        "options": [
            {
                "description": "1",
                "isAnswerKey": true
            },
            {
                "description": "0",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            },
            {
                "description": "2",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "47",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be displayed by the following component?\n\n```jsx\nfunction Display() {\n  const [text, setText] = useState('Start');\n  useEffect(() => {\n    setText('End');\n  });\n  return <div>{text}</div>;\n}\n```\n",
        "options": [
            {
                "description": "End",
                "isAnswerKey": true
            },
            {
                "description": "Start",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "48",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the result of the following code execution?\n\n```jsx\nfunction Example() {\n  const [value, setValue] = useState('Initial');\n  setValue('Final');\n  return <div>{value}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Final",
                "isAnswerKey": true
            },
            {
                "description": "Initial",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "49",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output when the component mounts?\n\n```jsx\nfunction App() {\n  const [message, setMessage] = useState('Welcome');\n  setMessage('Goodbye');\n  return <div>{message}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Goodbye",
                "isAnswerKey": true
            },
            {
                "description": "Welcome",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "50",
        "skill": "react",
        "category": "framework",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Predict the output of the following component:\n\n```jsx\nfunction App() {\n  const [status, setStatus] = useState('Active');\n  useEffect(() => {\n    setStatus('Inactive');\n  }, []);\n  return <div>{status}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Inactive",
                "isAnswerKey": true
            },
            {
                "description": "Active",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "51",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is the correct way to import React in a JavaScript file?",
        "options": [
            {
                "description": "import React from 'react';",
                "isAnswerKey": true
            },
            {
                "description": "include React from 'react';",
                "isAnswerKey": false
            },
            {
                "description": "require('React')",
                "isAnswerKey": false
            },
            {
                "description": "import 'react';",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "52",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the correct way to define a functional component in React?",
        "options": [
            {
                "description": "function MyComponent() { return <div>Hello</div>; }",
                "isAnswerKey": true
            },
            {
                "description": "const MyComponent = () => <div>Hello</div>;",
                "isAnswerKey": false
            },
            {
                "description": "class MyComponent extends React.Component { render() { return <div>Hello</div>; } }",
                "isAnswerKey": false
            },
            {
                "description": "MyComponent() => { return <div>Hello</div>; }",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "53",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In React, what is the use of the 'key' prop?",
        "options": [
            {
                "description": "To uniquely identify elements in a list",
                "isAnswerKey": true
            },
            {
                "description": "To define the component's state",
                "isAnswerKey": false
            },
            {
                "description": "To pass data between components",
                "isAnswerKey": false
            },
            {
                "description": "To render a component conditionally",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "54",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which method in a class component is used to update the component's state?",
        "options": [
            {
                "description": "setState",
                "isAnswerKey": true
            },
            {
                "description": "updateState",
                "isAnswerKey": false
            },
            {
                "description": "changeState",
                "isAnswerKey": false
            },
            {
                "description": "modifyState",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "55",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which hook would you use to manage side effects in a functional component?",
        "options": [
            {
                "description": "useEffect",
                "isAnswerKey": true
            },
            {
                "description": "useState",
                "isAnswerKey": false
            },
            {
                "description": "useContext",
                "isAnswerKey": false
            },
            {
                "description": "useReducer",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "56",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is NOT a lifecycle method in React class components?",
        "options": [
            {
                "description": "componentDidMount",
                "isAnswerKey": false
            },
            {
                "description": "componentWillUnmount",
                "isAnswerKey": false
            },
            {
                "description": "componentDidUpdate",
                "isAnswerKey": false
            },
            {
                "description": "componentWillRender",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "57",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the purpose of the 'render' method in a React class component?",
        "options": [
            {
                "description": "To return the JSX that makes up the component UI",
                "isAnswerKey": true
            },
            {
                "description": "To initialize the component state",
                "isAnswerKey": false
            },
            {
                "description": "To update the component's props",
                "isAnswerKey": false
            },
            {
                "description": "To bind event handlers",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "58",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is an example of a controlled component in React?",
        "options": [
            {
                "description": "A form input where the value is managed by React state",
                "isAnswerKey": true
            },
            {
                "description": "A component with a fixed value",
                "isAnswerKey": false
            },
            {
                "description": "A component that only uses props",
                "isAnswerKey": false
            },
            {
                "description": "An input element without a value attribute",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "59",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which hook is used to access the context value in a functional component?",
        "options": [
            {
                "description": "useContext",
                "isAnswerKey": true
            },
            {
                "description": "useState",
                "isAnswerKey": false
            },
            {
                "description": "useEffect",
                "isAnswerKey": false
            },
            {
                "description": "useReducer",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "60",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In React, what does JSX stand for?",
        "options": [
            {
                "description": "JavaScript XML",
                "isAnswerKey": true
            },
            {
                "description": "JavaScript Extension",
                "isAnswerKey": false
            },
            {
                "description": "JavaScript Syntax",
                "isAnswerKey": false
            },
            {
                "description": "JavaScript Express",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "61",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the following code snippet, what will be the output?\n\n```jsx\nfunction App() {\n  const [count, setCount] = React.useState(0);\n  return (\n    <button onClick={() => setCount(count + 1)}>\n      Count: {count}\n    </button>\n  );\n}\n```\n\nWhat happens when the button is clicked?",
        "options": [
            {
                "description": "The count is incremented by 1 each time the button is clicked.",
                "isAnswerKey": true
            },
            {
                "description": "The count is reset to 0 each time the button is clicked.",
                "isAnswerKey": false
            },
            {
                "description": "The count does not change when the button is clicked.",
                "isAnswerKey": false
            },
            {
                "description": "An error occurs because setCount is not defined.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "62",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What does the following code snippet illustrate in React?\n\n```jsx\nconst MyComponent = React.memo(function MyComponent(props) {\n  return <div>{props.name}</div>;\n});\n```\n",
        "options": [
            {
                "description": "It prevents unnecessary re-renders by memoizing the component.",
                "isAnswerKey": true
            },
            {
                "description": "It defines a lazy-loaded component.",
                "isAnswerKey": false
            },
            {
                "description": "It triggers an error because 'React.memo' is not a valid React API.",
                "isAnswerKey": false
            },
            {
                "description": "It creates a context-bound component.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "63",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "In the following code snippet, identify the error:\n\n```jsx\nfunction App() {\n  const [name, setName] = useState('');\n  return (\n    <input value={name} onchange={(e) => setName(e.target.value)} />\n  );\n}\n```\n",
        "options": [
            {
                "description": "The 'onchange' attribute should be 'onChange'.",
                "isAnswerKey": true
            },
            {
                "description": "The 'setName' function should not be called in the input.",
                "isAnswerKey": false
            },
            {
                "description": "The 'useState' hook is used incorrectly.",
                "isAnswerKey": false
            },
            {
                "description": "The 'value' attribute should be removed from the input.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "64",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which React hook can be used to manage a boolean state toggle?",
        "options": [
            {
                "description": "useState",
                "isAnswerKey": true
            },
            {
                "description": "useEffect",
                "isAnswerKey": false
            },
            {
                "description": "useContext",
                "isAnswerKey": false
            },
            {
                "description": "useReducer",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "65",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of using 'useEffect' with an empty dependency array in React?",
        "options": [
            {
                "description": "To execute the effect only once after the initial render.",
                "isAnswerKey": true
            },
            {
                "description": "To execute the effect after every render.",
                "isAnswerKey": false
            },
            {
                "description": "To execute the effect whenever the component is unmounted.",
                "isAnswerKey": false
            },
            {
                "description": "To prevent the effect from executing at all.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "66",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the following code snippet, what is the purpose of 'useCallback'?\n\n```jsx\nconst memoizedCallback = useCallback(\n  () => {\n    doSomething(a, b);\n  },\n  [a, b]\n);\n```\n",
        "options": [
            {
                "description": "To memoize the callback function to avoid unnecessary re-creations.",
                "isAnswerKey": true
            },
            {
                "description": "To run the callback function after every render.",
                "isAnswerKey": false
            },
            {
                "description": "To bind the callback function to the component's context.",
                "isAnswerKey": false
            },
            {
                "description": "To optimize the callback function for asynchronous execution.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "67",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following describes the purpose of 'useRef' in React?",
        "options": [
            {
                "description": "To access a DOM element directly.",
                "isAnswerKey": true
            },
            {
                "description": "To manage component state.",
                "isAnswerKey": false
            },
            {
                "description": "To trigger side effects in components.",
                "isAnswerKey": false
            },
            {
                "description": "To pass data between parent and child components.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "68",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Identify the error in the following code snippet:\n\n```jsx\nfunction MyComponent() {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetchData().then(response => setData(response));\n  }, [data]);\n  return <div>{data}</div>;\n}\n```\n",
        "options": [
            {
                "description": "The 'data' dependency causes an infinite loop of fetch calls.",
                "isAnswerKey": true
            },
            {
                "description": "The 'fetchData' function should be called with 'data' as a parameter.",
                "isAnswerKey": false
            },
            {
                "description": "The 'useEffect' hook is missing its dependency array.",
                "isAnswerKey": false
            },
            {
                "description": "The 'setData' function is used incorrectly.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "69",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```jsx\nfunction App() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setCount(count + 1);\n  }, []);\n  return <div>{count}</div>;\n}\n```\n",
        "options": [
            {
                "description": "The count will be 1 after the component mounts.",
                "isAnswerKey": true
            },
            {
                "description": "The count will continuously increment indefinitely.",
                "isAnswerKey": false
            },
            {
                "description": "The count will be 0 initially and never change.",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to incorrect use of 'setCount'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "70",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following describes the 'useReducer' hook?",
        "options": [
            {
                "description": "A hook used to manage complex state logic.",
                "isAnswerKey": true
            },
            {
                "description": "A hook used to perform DOM operations.",
                "isAnswerKey": false
            },
            {
                "description": "A hook used for handling side effects.",
                "isAnswerKey": false
            },
            {
                "description": "A hook used to access context values.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "71",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following code snippets demonstrates the correct way to handle form submissions in a controlled component?",
        "options": [
            {
                "description": "```jsx\nfunction MyForm() {\n  const [input, setInput] = useState('');\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(input);\n  };\n  return <form onSubmit={handleSubmit}><input value={input} onChange={(e) => setInput(e.target.value)} /></form>;\n}\n```",
                "isAnswerKey": true
            },
            {
                "description": "```jsx\nfunction MyForm() {\n  const [input, setInput] = useState('');\n  const handleSubmit = () => {\n    console.log(input);\n  };\n  return <form onSubmit={handleSubmit}><input value={input} onChange={(e) => setInput(e.target.value)} /></form>;\n}\n```",
                "isAnswerKey": false
            },
            {
                "description": "```jsx\nfunction MyForm() {\n  const [input, setInput] = useState('');\n  const handleSubmit = (e) => {\n    console.log(input);\n  };\n  return <form onSubmit={handleSubmit}><input value={input} onChange={(e) => setInput(e.target.value)} /></form>;\n}\n```",
                "isAnswerKey": false
            },
            {
                "description": "```jsx\nfunction MyForm() {\n  const [input, setInput] = useState('');\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n  return <form onSubmit={handleSubmit}><input value={input} /></form>;\n}\n```",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "72",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How would you refactor the following code to optimize performance?\n\n```jsx\nconst MyComponent = ({ items }) => {\n  return items.map(item => <div key={item.id}>{item.name}</div>);\n};\n```\n",
        "options": [
            {
                "description": "Wrap the component with React.memo to prevent unnecessary re-renders.",
                "isAnswerKey": true
            },
            {
                "description": "Use 'componentDidUpdate' to manually check for changes in 'items'.",
                "isAnswerKey": false
            },
            {
                "description": "Remove the 'key' prop from the mapped elements.",
                "isAnswerKey": false
            },
            {
                "description": "Convert the component to a class component to use lifecycle methods.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "73",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "You want to fetch data using Axios when a component mounts. Where should you place the fetch call?",
        "options": [
            {
                "description": "Inside a useEffect hook with an empty dependency array.",
                "isAnswerKey": true
            },
            {
                "description": "Directly in the component body outside of any hook.",
                "isAnswerKey": false
            },
            {
                "description": "Inside a useEffect hook with the data state as a dependency.",
                "isAnswerKey": false
            },
            {
                "description": "Inside a useState hook.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "74",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which code snippet correctly demonstrates the use of 'useReducer' for managing state in React?",
        "options": [
            {
                "description": "```jsx\nconst initialState = { count: 0 };\nfunction reducer(state, action) {\n  switch(action.type) {\n    case 'increment':\n      return { count: state.count + 1 };\n    default:\n      return state;\n  }\n}\nconst [state, dispatch] = useReducer(reducer, initialState);\n```",
                "isAnswerKey": true
            },
            {
                "description": "```jsx\nconst initialState = { count: 0 };\nfunction reducer(state, action) {\n  if (action.type === 'increment') {\n    return { count: state.count + 1 };\n  }\n  return state;\n}\nconst [state, setState] = useReducer(reducer, initialState);\n```",
                "isAnswerKey": false
            },
            {
                "description": "```jsx\nconst initialState = { count: 0 };\nfunction reducer(state, action) {\n  switch(action.type) {\n    case 'increment':\n      return { count: state.count + 1 };\n    default:\n      return state;\n  }\n}\nconst [state, dispatch] = useReducer(initialState);\n```",
                "isAnswerKey": false
            },
            {
                "description": "```jsx\nconst initialState = { count: 0 };\nfunction reducer(state, action) {\n  switch(action.type) {\n    case 'increment':\n      return { count: state.count + 1 };\n    default:\n      return state;\n  }\n}\nconst [state, dispatch] = useReducer(reducer);\n```",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "75",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following is a correct way to use 'useRef' to access a DOM element?",
        "options": [
            {
                "description": "```jsx\nconst MyComponent = () => {\n  const inputRef = useRef();\n  return <input ref={inputRef} />;\n};\n```",
                "isAnswerKey": true
            },
            {
                "description": "```jsx\nconst MyComponent = () => {\n  const inputRef = useRef();\n  return <input reference={inputRef} />;\n};\n```",
                "isAnswerKey": false
            },
            {
                "description": "```jsx\nconst MyComponent = () => {\n  const inputRef = useRef();\n  return <input useRef={inputRef} />;\n};\n```",
                "isAnswerKey": false
            },
            {
                "description": "```jsx\nconst MyComponent = () => {\n  const inputRef = useRef();\n  return <input ref={inputRef.current} />;\n};\n```",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "76",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you ensure a component re-renders only when specific props change?",
        "options": [
            {
                "description": "Use React.memo and specify a custom comparison function.",
                "isAnswerKey": true
            },
            {
                "description": "Use useEffect with the prop values as dependencies.",
                "isAnswerKey": false
            },
            {
                "description": "Use a class component with shouldComponentUpdate method.",
                "isAnswerKey": false
            },
            {
                "description": "Use useRef to store the previous prop values.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "77",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which method allows you to avoid unnecessary re-renders in class components?",
        "options": [
            {
                "description": "shouldComponentUpdate",
                "isAnswerKey": true
            },
            {
                "description": "componentWillMount",
                "isAnswerKey": false
            },
            {
                "description": "componentDidMount",
                "isAnswerKey": false
            },
            {
                "description": "componentWillUnmount",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "78",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the primary purpose of 'useMemo' in React?",
        "options": [
            {
                "description": "To memoize values to prevent unnecessary calculations.",
                "isAnswerKey": true
            },
            {
                "description": "To memoize functions to avoid re-creations.",
                "isAnswerKey": false
            },
            {
                "description": "To optimize asynchronous operations.",
                "isAnswerKey": false
            },
            {
                "description": "To store state persistently between renders.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "79",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following best describes the concept of 'lifting state up' in React?",
        "options": [
            {
                "description": "Moving state to the nearest common ancestor of components that need it.",
                "isAnswerKey": true
            },
            {
                "description": "Sharing state between components using context.",
                "isAnswerKey": false
            },
            {
                "description": "Using Redux to manage global state.",
                "isAnswerKey": false
            },
            {
                "description": "Using hooks like useState in child components.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "80",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How would you implement conditional rendering in React?",
        "options": [
            {
                "description": "Using JavaScript logical operators within JSX.",
                "isAnswerKey": true
            },
            {
                "description": "Using CSS to hide components conditionally.",
                "isAnswerKey": false
            },
            {
                "description": "Using HTML conditionals within JSX.",
                "isAnswerKey": false
            },
            {
                "description": "Using the 'render' method of class components.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "81",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the problem with the following code snippet?\n\n```jsx\nfunction App() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(count + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n}\n```",
        "options": [
            {
                "description": "The 'count' variable won't update correctly inside the setInterval callback.",
                "isAnswerKey": true
            },
            {
                "description": "The code will cause a memory leak due to missing cleanup.",
                "isAnswerKey": false
            },
            {
                "description": "The interval will not start until after the component mounts.",
                "isAnswerKey": false
            },
            {
                "description": "The interval is set to 1000 milliseconds which is too long.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "82",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you refactor the following component to avoid re-fetching data unnecessarily?\n\n```jsx\nfunction DataFetcher({ url }) {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch(url)\n      .then(response => response.json())\n      .then(json => setData(json));\n  }, [url]);\n}\n```",
        "options": [
            {
                "description": "Use useMemo to memoize the fetch call.",
                "isAnswerKey": false
            },
            {
                "description": "Add a condition inside useEffect to check if data is null before fetching.",
                "isAnswerKey": false
            },
            {
                "description": "Ensure the fetch call is only made when the 'url' changes.",
                "isAnswerKey": true
            },
            {
                "description": "Move the fetch call to a separate function.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "83",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What might be the reason for the following code causing a memory leak?\n\n```jsx\nfunction Timer() {\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      console.log('Tick');\n    }, 1000);\n  }, []);\n}\n```",
        "options": [
            {
                "description": "The interval is not cleared when the component unmounts.",
                "isAnswerKey": true
            },
            {
                "description": "The console.log inside the interval is causing a memory leak.",
                "isAnswerKey": false
            },
            {
                "description": "The interval timing is too short and causes performance issues.",
                "isAnswerKey": false
            },
            {
                "description": "The useEffect hook is missing a dependency array.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "84",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which approach would you use to prevent a component from re-rendering unnecessarily when its parent re-renders?",
        "options": [
            {
                "description": "Wrap the component with React.memo.",
                "isAnswerKey": true
            },
            {
                "description": "Use useEffect with an empty dependency array.",
                "isAnswerKey": false
            },
            {
                "description": "Implement shouldComponentUpdate in the component.",
                "isAnswerKey": false
            },
            {
                "description": "Remove the component from the parent.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "85",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "You have a form component with multiple inputs. How can you refactor this component to make it more manageable?",
        "options": [
            {
                "description": "Use a single state object to manage all input values.",
                "isAnswerKey": true
            },
            {
                "description": "Use a separate state for each input.",
                "isAnswerKey": false
            },
            {
                "description": "Use a class component instead of a functional component.",
                "isAnswerKey": false
            },
            {
                "description": "Use multiple useEffect hooks for each input change.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "86",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the issue with the following code snippet?\n\n```jsx\nfunction App() {\n  const [count, setCount] = useState(0);\n  const increment = () => setCount(count + 1);\n  return <button onClick={increment}>Increment</button>;\n}\n```",
        "options": [
            {
                "description": "The 'increment' function will always add 1 to the initial 'count' value.",
                "isAnswerKey": false
            },
            {
                "description": "The 'increment' function should be wrapped in useCallback to prevent re-creation.",
                "isAnswerKey": true
            },
            {
                "description": "The button does not display the count value.",
                "isAnswerKey": false
            },
            {
                "description": "There is a missing dependency array in the component body.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "87",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which technique would you use to optimize a component that frequently updates state and causes performance issues?",
        "options": [
            {
                "description": "Debounce the state updates.",
                "isAnswerKey": true
            },
            {
                "description": "Use a separate useEffect for each state update.",
                "isAnswerKey": false
            },
            {
                "description": "Move state updates to the parent component.",
                "isAnswerKey": false
            },
            {
                "description": "Switch to a class component.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "88",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How would you refactor a component to ensure it cleans up side effects when unmounted?",
        "options": [
            {
                "description": "Return a cleanup function from useEffect.",
                "isAnswerKey": true
            },
            {
                "description": "Use useCallback to manage side effects.",
                "isAnswerKey": false
            },
            {
                "description": "Use useMemo to memoize the side effects.",
                "isAnswerKey": false
            },
            {
                "description": "Define a cleanup method in the component body.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "89",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What would be a reason to use 'useEffect' with a dependency array that includes a prop value?",
        "options": [
            {
                "description": "To ensure the effect runs whenever the prop value changes.",
                "isAnswerKey": true
            },
            {
                "description": "To prevent the effect from running at all.",
                "isAnswerKey": false
            },
            {
                "description": "To optimize the component for asynchronous operations.",
                "isAnswerKey": false
            },
            {
                "description": "To store the prop value persistently between renders.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "90",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you avoid prop drilling in a deeply nested component structure?",
        "options": [
            {
                "description": "Use React Context to provide data to nested components.",
                "isAnswerKey": true
            },
            {
                "description": "Use Redux to manage global state.",
                "isAnswerKey": false
            },
            {
                "description": "Use higher-order components to pass data.",
                "isAnswerKey": false
            },
            {
                "description": "Use the DOM to store component data.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "91",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Predict the output of the following code:\n\n```jsx\nfunction App() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(prevCount => prevCount + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return <div>{count}</div>;\n}\n```",
        "options": [
            {
                "description": "The count will increment by 1 every second.",
                "isAnswerKey": true
            },
            {
                "description": "The count will increment by 2 every second.",
                "isAnswerKey": false
            },
            {
                "description": "The count will remain static and never change.",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to incorrect use of 'setCount'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "92",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```jsx\nfunction App() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setCount(5);\n  }, []);\n  return <div>{count}</div>;\n}\n```",
        "options": [
            {
                "description": "The count will be 5 after the component mounts.",
                "isAnswerKey": true
            },
            {
                "description": "The count will continuously increment indefinitely.",
                "isAnswerKey": false
            },
            {
                "description": "The count will be 0 initially and never change.",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to incorrect use of 'setCount'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "93",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Given the following code, what will be the output?\n\n```jsx\nfunction Timer() {\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTime(time + 1);\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [time]);\n  return <div>{time}</div>;\n}\n```",
        "options": [
            {
                "description": "The time will increment by 1 every 5 seconds.",
                "isAnswerKey": true
            },
            {
                "description": "The time will increment by 5 every 1 second.",
                "isAnswerKey": false
            },
            {
                "description": "The time will remain static and never change.",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to incorrect use of 'setTimeout'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "94",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the result of clicking the button in the following code?\n\n```jsx\nfunction App() {\n  const [text, setText] = useState('Hello');\n  const handleClick = () => setText('World');\n  return <button onClick={handleClick}>{text}</button>;\n}\n```",
        "options": [
            {
                "description": "The button text will change to 'World'.",
                "isAnswerKey": true
            },
            {
                "description": "The button text will remain 'Hello'.",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to incorrect use of 'setText'.",
                "isAnswerKey": false
            },
            {
                "description": "The button text will change to 'Hello World'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "95",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will happen when the following component is rendered?\n\n```jsx\nfunction App() {\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    setVisible(true);\n  }, []);\n  return <div>{visible ? 'Visible' : 'Hidden'}</div>;\n}\n```",
        "options": [
            {
                "description": "The text 'Visible' will be displayed.",
                "isAnswerKey": true
            },
            {
                "description": "The text 'Hidden' will be displayed.",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to incorrect use of 'setVisible'.",
                "isAnswerKey": false
            },
            {
                "description": "Nothing will be displayed.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "96",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Predict the output of the following code:\n\n```jsx\nfunction App() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setCount(prevCount => prevCount + 1);\n  }, []);\n  return <div>{count}</div>;\n}\n```",
        "options": [
            {
                "description": "The count will be 1 after the component mounts.",
                "isAnswerKey": true
            },
            {
                "description": "The count will be 0 initially and never change.",
                "isAnswerKey": false
            },
            {
                "description": "The count will continuously increment indefinitely.",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to incorrect use of 'setCount'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "97",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```jsx\nfunction App() {\n  const [message, setMessage] = useState('Hello');\n  useEffect(() => {\n    setMessage('Goodbye');\n  }, []);\n  return <div>{message}</div>;\n}\n```",
        "options": [
            {
                "description": "The message will be 'Goodbye' after the component mounts.",
                "isAnswerKey": true
            },
            {
                "description": "The message will be 'Hello' initially and never change.",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to incorrect use of 'setMessage'.",
                "isAnswerKey": false
            },
            {
                "description": "The message will be 'Hello Goodbye'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "98",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be displayed when the following component is rendered?\n\n```jsx\nfunction App() {\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  return <div>{isLoading ? 'Loading...' : 'Loaded'}</div>;\n}\n```",
        "options": [
            {
                "description": "The text 'Loaded' will be displayed.",
                "isAnswerKey": true
            },
            {
                "description": "The text 'Loading...' will be displayed.",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to incorrect use of 'setLoading'.",
                "isAnswerKey": false
            },
            {
                "description": "Nothing will be displayed.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "99",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the initial output of the following code?\n\n```jsx\nfunction App() {\n  const [status, setStatus] = useState('Inactive');\n  useEffect(() => {\n    setStatus('Active');\n  }, []);\n  return <div>{status}</div>;\n}\n```",
        "options": [
            {
                "description": "The status will be 'Active' after the component mounts.",
                "isAnswerKey": true
            },
            {
                "description": "The status will be 'Inactive' initially and never change.",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to incorrect use of 'setStatus'.",
                "isAnswerKey": false
            },
            {
                "description": "The status will be 'Inactive' 'Active'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "100",
        "skill": "react",
        "category": "framework",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the final state of the following component?\n\n```jsx\nfunction App() {\n  const [value, setValue] = useState('A');\n  useEffect(() => {\n    setValue('B');\n  }, []);\n  return <div>{value}</div>;\n}\n```",
        "options": [
            {
                "description": "The value will be 'B' after the component mounts.",
                "isAnswerKey": true
            },
            {
                "description": "The value will be 'A' initially and never change.",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to incorrect use of 'setValue'.",
                "isAnswerKey": false
            },
            {
                "description": "The value will be 'A' 'B'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "101",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the primary purpose of the useEffect hook in React?",
        "options": [
            {
                "description": "To manage component state",
                "isAnswerKey": false
            },
            {
                "description": "To perform side effects in function components",
                "isAnswerKey": true
            },
            {
                "description": "To define component styles",
                "isAnswerKey": false
            },
            {
                "description": "To handle routing in a React application",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "102",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "In React, what does the 'key' prop primarily help with?",
        "options": [
            {
                "description": "Defining component styles",
                "isAnswerKey": false
            },
            {
                "description": "Identifying elements uniquely to optimize rendering",
                "isAnswerKey": true
            },
            {
                "description": "Handling form submissions",
                "isAnswerKey": false
            },
            {
                "description": "Managing component state",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "103",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the difference between a controlled and an uncontrolled component in React?",
        "options": [
            {
                "description": "Controlled components store their state internally, while uncontrolled components use props.",
                "isAnswerKey": false
            },
            {
                "description": "Controlled components are managed by React state, while uncontrolled components rely on the DOM.",
                "isAnswerKey": true
            },
            {
                "description": "Controlled components use Redux, while uncontrolled components do not.",
                "isAnswerKey": false
            },
            {
                "description": "Controlled components manage routes, while uncontrolled components manage UI elements.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "104",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "How can you pass data from a parent component to a child component in React?",
        "options": [
            {
                "description": "Using a global variable",
                "isAnswerKey": false
            },
            {
                "description": "Using props",
                "isAnswerKey": true
            },
            {
                "description": "Using context API",
                "isAnswerKey": false
            },
            {
                "description": "Using Redux",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "105",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is a lifecycle method in React class components?",
        "options": [
            {
                "description": "useEffect",
                "isAnswerKey": false
            },
            {
                "description": "componentDidMount",
                "isAnswerKey": true
            },
            {
                "description": "useState",
                "isAnswerKey": false
            },
            {
                "description": "useContext",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "106",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which hook is used for managing state in a React function component?",
        "options": [
            {
                "description": "useEffect",
                "isAnswerKey": false
            },
            {
                "description": "useState",
                "isAnswerKey": true
            },
            {
                "description": "useReducer",
                "isAnswerKey": false
            },
            {
                "description": "useContext",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "107",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is JSX in the context of React?",
        "options": [
            {
                "description": "A type of JavaScript",
                "isAnswerKey": false
            },
            {
                "description": "A syntax extension for JavaScript that allows you to write HTML inside JavaScript",
                "isAnswerKey": true
            },
            {
                "description": "A CSS preprocessor",
                "isAnswerKey": false
            },
            {
                "description": "A JavaScript framework",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "108",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the main purpose of the React Router library?",
        "options": [
            {
                "description": "To manage global state",
                "isAnswerKey": false
            },
            {
                "description": "To handle navigation and routing in React applications",
                "isAnswerKey": true
            },
            {
                "description": "To perform asynchronous operations",
                "isAnswerKey": false
            },
            {
                "description": "To define component styles",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "109",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which hook would you use to mimic componentDidMount in a functional component?",
        "options": [
            {
                "description": "useState",
                "isAnswerKey": false
            },
            {
                "description": "useEffect",
                "isAnswerKey": true
            },
            {
                "description": "useReducer",
                "isAnswerKey": false
            },
            {
                "description": "useContext",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "110",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which statement is true about React keys?",
        "options": [
            {
                "description": "Keys are used to define CSS styles for elements.",
                "isAnswerKey": false
            },
            {
                "description": "Keys help React identify which items have changed, been added, or removed.",
                "isAnswerKey": true
            },
            {
                "description": "Keys are required for every React component.",
                "isAnswerKey": false
            },
            {
                "description": "Keys are used to manage component state.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "111",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the following code snippet, what is the expected behavior?\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <button onClick={() => setCount(count + 1)}>\n      {count}\n    </button>\n  );\n}\n```\n",
        "options": [
            {
                "description": "The button will not increment the count when clicked.",
                "isAnswerKey": false
            },
            {
                "description": "The count will increment by 1 each time the button is clicked.",
                "isAnswerKey": true
            },
            {
                "description": "The count will reset to 0 each time the button is clicked.",
                "isAnswerKey": false
            },
            {
                "description": "The count will increment by 2 each time the button is clicked.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "112",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "How can you ensure side effects in a useEffect hook only run once after the component mounts?",
        "options": [
            {
                "description": "Pass a boolean flag as the second argument to useEffect.",
                "isAnswerKey": false
            },
            {
                "description": "Pass an empty array as the second argument to useEffect.",
                "isAnswerKey": true
            },
            {
                "description": "Use a setTimeout inside useEffect.",
                "isAnswerKey": false
            },
            {
                "description": "Use a return statement inside useEffect.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "113",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Considering the following code snippet, which option best describes its behavior?\n\n```jsx\nimport React, { useEffect, useState } from 'react';\n\nfunction DataFetcher() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch('https://api.example.com/data')\n      .then(response => response.json())\n      .then(data => setData(data));\n  }, []);\n\n  return <div>{data ? JSON.stringify(data) : 'Loading...'}</div>;\n}\n```\n",
        "options": [
            {
                "description": "The component will fetch data every time it re-renders.",
                "isAnswerKey": false
            },
            {
                "description": "The component will fetch data only once when it mounts.",
                "isAnswerKey": true
            },
            {
                "description": "The component will not fetch any data.",
                "isAnswerKey": false
            },
            {
                "description": "The component will fetch data every second.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "114",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which React hook is primarily used for accessing context in a functional component?",
        "options": [
            {
                "description": "useState",
                "isAnswerKey": false
            },
            {
                "description": "useEffect",
                "isAnswerKey": false
            },
            {
                "description": "useContext",
                "isAnswerKey": true
            },
            {
                "description": "useReducer",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "115",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the useMemo hook in React?",
        "options": [
            {
                "description": "To perform side effects",
                "isAnswerKey": false
            },
            {
                "description": "To optimize performance by memoizing expensive calculations",
                "isAnswerKey": true
            },
            {
                "description": "To manage local component state",
                "isAnswerKey": false
            },
            {
                "description": "To fetch data from an API",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "116",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which technique is used to prevent unnecessary re-renders in a React component?",
        "options": [
            {
                "description": "Using a global variable",
                "isAnswerKey": false
            },
            {
                "description": "Using React.memo",
                "isAnswerKey": true
            },
            {
                "description": "Using a higher-order component",
                "isAnswerKey": false
            },
            {
                "description": "Using a context API",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "117",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the main advantage of using useReducer over useState in React?",
        "options": [
            {
                "description": "useReducer is faster than useState.",
                "isAnswerKey": false
            },
            {
                "description": "useReducer is better for managing complex state logic.",
                "isAnswerKey": true
            },
            {
                "description": "useReducer automatically fetches data.",
                "isAnswerKey": false
            },
            {
                "description": "useReducer simplifies CSS styling.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "118",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following best describes the useRef hook?",
        "options": [
            {
                "description": "useRef is used to manage component state.",
                "isAnswerKey": false
            },
            {
                "description": "useRef provides a way to access DOM nodes or persist values across renders without causing re-renders.",
                "isAnswerKey": true
            },
            {
                "description": "useRef is used for fetching data from APIs.",
                "isAnswerKey": false
            },
            {
                "description": "useRef is used to define routes.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "119",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which option correctly describes the role of PropTypes in React?",
        "options": [
            {
                "description": "PropTypes are used for styling components.",
                "isAnswerKey": false
            },
            {
                "description": "PropTypes are used for type-checking props passed to components.",
                "isAnswerKey": true
            },
            {
                "description": "PropTypes are used for managing component state.",
                "isAnswerKey": false
            },
            {
                "description": "PropTypes are used for routing.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "120",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the Fragment component in React?",
        "options": [
            {
                "description": "To fetch data from APIs.",
                "isAnswerKey": false
            },
            {
                "description": "To group a list of children without adding extra nodes to the DOM.",
                "isAnswerKey": true
            },
            {
                "description": "To manage component state.",
                "isAnswerKey": false
            },
            {
                "description": "To handle routing.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "121",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following code snippet, identify the bug that might occur.\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [value, setValue] = useState(0);\n\n  const increment = () => {\n    setValue(value + 1);\n    setValue(value + 1);\n  };\n\n  return (\n    <button onClick={increment}>Increment</button>\n  );\n}\n```\n",
        "options": [
            {
                "description": "The button will increment the value by 2 each click.",
                "isAnswerKey": false
            },
            {
                "description": "The button will increment the value by 1 each click due to batching in React state updates.",
                "isAnswerKey": true
            },
            {
                "description": "The button will cause a syntax error.",
                "isAnswerKey": false
            },
            {
                "description": "The button will not change the value at all.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "122",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you optimize the following component to prevent unnecessary re-renders?\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction List({ items }) {\n  const [selected, setSelected] = useState(null);\n\n  return (\n    <ul>\n      {items.map(item => (\n        <li key={item.id} onClick={() => setSelected(item.id)}>\n          {item.name}\n        </li>\n      ))}\n    </ul>\n  );\n}\n```\n",
        "options": [
            {
                "description": "Convert the component to class-based.",
                "isAnswerKey": false
            },
            {
                "description": "Use React.memo to wrap the List component.",
                "isAnswerKey": true
            },
            {
                "description": "Use a global variable for selected state.",
                "isAnswerKey": false
            },
            {
                "description": "Use setTimeout to debounce state updates.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "123",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which pattern can be used to manage complex state in larger React applications?",
        "options": [
            {
                "description": "Singleton pattern",
                "isAnswerKey": false
            },
            {
                "description": "Container-presentational pattern",
                "isAnswerKey": true
            },
            {
                "description": "Observer pattern",
                "isAnswerKey": false
            },
            {
                "description": "Builder pattern",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "124",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you implement a debounced search input in React?",
        "options": [
            {
                "description": "Use a useState hook to update the input value immediately.",
                "isAnswerKey": false
            },
            {
                "description": "Use a useEffect hook with a setTimeout to delay state updates.",
                "isAnswerKey": true
            },
            {
                "description": "Use a global variable to store the input value.",
                "isAnswerKey": false
            },
            {
                "description": "Use a context to manage the input state.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "125",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which hook would you use to manage a complex form state in a React component?",
        "options": [
            {
                "description": "useState",
                "isAnswerKey": false
            },
            {
                "description": "useReducer",
                "isAnswerKey": true
            },
            {
                "description": "useEffect",
                "isAnswerKey": false
            },
            {
                "description": "useContext",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "126",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you implement a lazy-loaded component in React?",
        "options": [
            {
                "description": "Use the regular import statement for the component.",
                "isAnswerKey": false
            },
            {
                "description": "Use React.lazy and Suspense to dynamically import the component.",
                "isAnswerKey": true
            },
            {
                "description": "Use a setTimeout to delay component rendering.",
                "isAnswerKey": false
            },
            {
                "description": "Use a higher-order component for lazy loading.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "127",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the main advantage of using React Context API over prop drilling?",
        "options": [
            {
                "description": "Context API improves server-side performance.",
                "isAnswerKey": false
            },
            {
                "description": "Context API allows you to share data without passing props through every level of the component tree.",
                "isAnswerKey": true
            },
            {
                "description": "Context API automatically fetches data.",
                "isAnswerKey": false
            },
            {
                "description": "Context API simplifies CSS styling.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "128",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which method can you use to ensure a component is only rendered once after mounting in React?",
        "options": [
            {
                "description": "Using a global variable",
                "isAnswerKey": false
            },
            {
                "description": "Using useEffect with an empty dependency array",
                "isAnswerKey": true
            },
            {
                "description": "Using a higher-order component",
                "isAnswerKey": false
            },
            {
                "description": "Using a context API",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "129",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the purpose of the Error Boundary in React?",
        "options": [
            {
                "description": "To fetch data from APIs.",
                "isAnswerKey": false
            },
            {
                "description": "To catch JavaScript errors anywhere in the component tree and display a fallback UI.",
                "isAnswerKey": true
            },
            {
                "description": "To manage component state.",
                "isAnswerKey": false
            },
            {
                "description": "To handle routing.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "130",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which hook can you use to create a custom hook in React?",
        "options": [
            {
                "description": "useState",
                "isAnswerKey": false
            },
            {
                "description": "useEffect",
                "isAnswerKey": true
            },
            {
                "description": "useReducer",
                "isAnswerKey": false
            },
            {
                "description": "useContext",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "131",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you refactor the following component to improve performance and readability?\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction LargeList({ items }) {\n  const [selected, setSelected] = useState(null);\n\n  const handleClick = (id) => {\n    setSelected(id);\n  };\n\n  return (\n    <ul>\n      {items.map(item => (\n        <li key={item.id} onClick={() => handleClick(item.id)}>\n          {item.name}\n        </li>\n      ))}\n    </ul>\n  );\n}\n```\n",
        "options": [
            {
                "description": "Use a setTimeout to debounce handleClick function.",
                "isAnswerKey": false
            },
            {
                "description": "Wrap the LargeList component with React.memo.",
                "isAnswerKey": true
            },
            {
                "description": "Convert the component to class-based.",
                "isAnswerKey": false
            },
            {
                "description": "Use a global variable for selected state.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "132",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you refactor a React component to better handle and display loading states during data fetching?",
        "options": [
            {
                "description": "Use a global variable to track loading state.",
                "isAnswerKey": false
            },
            {
                "description": "Implement a custom hook for data fetching which returns data and loading state.",
                "isAnswerKey": true
            },
            {
                "description": "Use setTimeout to simulate loading.",
                "isAnswerKey": false
            },
            {
                "description": "Use a class-based component with componentDidMount.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "133",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Given a component with complex conditional rendering, how can you refactor it for better readability?",
        "options": [
            {
                "description": "Use inline styles to manage conditions.",
                "isAnswerKey": false
            },
            {
                "description": "Break down complex conditions into smaller functions or components.",
                "isAnswerKey": true
            },
            {
                "description": "Use a global variable for conditional state.",
                "isAnswerKey": false
            },
            {
                "description": "Use a class-based component.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "134",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which design pattern is suitable for separating concerns in a React application?",
        "options": [
            {
                "description": "Builder pattern",
                "isAnswerKey": false
            },
            {
                "description": "Container-presentational pattern",
                "isAnswerKey": true
            },
            {
                "description": "Singleton pattern",
                "isAnswerKey": false
            },
            {
                "description": "Factory pattern",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "135",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is a common approach to refactor a component that has become too large and complex?",
        "options": [
            {
                "description": "Convert the component to class-based.",
                "isAnswerKey": false
            },
            {
                "description": "Break the component into smaller, reusable components.",
                "isAnswerKey": true
            },
            {
                "description": "Use a global variable for state management.",
                "isAnswerKey": false
            },
            {
                "description": "Use inline styles for all elements.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "136",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you refactor a React component to ensure it handles asynchronous operations more reliably?",
        "options": [
            {
                "description": "Use a setTimeout to manage async operations.",
                "isAnswerKey": false
            },
            {
                "description": "Implement async logic within useEffect with proper cleanup.",
                "isAnswerKey": true
            },
            {
                "description": "Use a higher-order component for async logic.",
                "isAnswerKey": false
            },
            {
                "description": "Use a global variable for async state management.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "137",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which method is best for handling complex state updates in a React component?",
        "options": [
            {
                "description": "Using useState for all state updates.",
                "isAnswerKey": false
            },
            {
                "description": "Using useReducer for managing complex state updates.",
                "isAnswerKey": true
            },
            {
                "description": "Using a global variable for state updates.",
                "isAnswerKey": false
            },
            {
                "description": "Using setTimeout to delay state updates.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "138",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you refactor a component to improve its testability?",
        "options": [
            {
                "description": "Use a global variable for state management.",
                "isAnswerKey": false
            },
            {
                "description": "Break down components into smaller, isolated units.",
                "isAnswerKey": true
            },
            {
                "description": "Use inline styles for all elements.",
                "isAnswerKey": false
            },
            {
                "description": "Convert the component to class-based.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "139",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which optimization technique would you choose to reduce memory usage in a large React application?",
        "options": [
            {
                "description": "Use inline styles for all elements.",
                "isAnswerKey": false
            },
            {
                "description": "Lazy load components and use code splitting.",
                "isAnswerKey": true
            },
            {
                "description": "Use a global variable for state management.",
                "isAnswerKey": false
            },
            {
                "description": "Convert all components to class-based.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "140",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you refactor a component to ensure it is easier to maintain in the future?",
        "options": [
            {
                "description": "Use a global variable for state management.",
                "isAnswerKey": false
            },
            {
                "description": "Break the component into smaller, reusable functions or components.",
                "isAnswerKey": true
            },
            {
                "description": "Use inline styles for all elements.",
                "isAnswerKey": false
            },
            {
                "description": "Convert the component to class-based.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "141",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "How would you implement a reusable form component using React hooks?",
        "options": [
            {
                "description": "Use a class-based component with componentDidMount.",
                "isAnswerKey": false
            },
            {
                "description": "Create a custom hook that manages form state and validation logic.",
                "isAnswerKey": true
            },
            {
                "description": "Use inline styles for all form elements.",
                "isAnswerKey": false
            },
            {
                "description": "Use a global variable for form state management.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "142",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which design pattern would you use to implement a scalable state management solution in a React application?",
        "options": [
            {
                "description": "Singleton pattern",
                "isAnswerKey": false
            },
            {
                "description": "Flux pattern",
                "isAnswerKey": true
            },
            {
                "description": "Builder pattern",
                "isAnswerKey": false
            },
            {
                "description": "Factory pattern",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "143",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you implement a global error handler in a React application?",
        "options": [
            {
                "description": "Use a global variable to track errors.",
                "isAnswerKey": false
            },
            {
                "description": "Implement an Error Boundary component that catches errors in the component tree.",
                "isAnswerKey": true
            },
            {
                "description": "Use a custom hook to manage error state.",
                "isAnswerKey": false
            },
            {
                "description": "Use inline styles to display error messages.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "144",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you apply the observer pattern in a React application?",
        "options": [
            {
                "description": "Use inline styles for all elements.",
                "isAnswerKey": false
            },
            {
                "description": "Implement a context that components can subscribe to for updates.",
                "isAnswerKey": true
            },
            {
                "description": "Use a global variable for state management.",
                "isAnswerKey": false
            },
            {
                "description": "Convert all components to class-based.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "145",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which method would you use to ensure consistent error handling across a React application?",
        "options": [
            {
                "description": "Use a global variable to track error states.",
                "isAnswerKey": false
            },
            {
                "description": "Implement a centralized error logging service and use Error Boundaries.",
                "isAnswerKey": true
            },
            {
                "description": "Use inline styles for error messages.",
                "isAnswerKey": false
            },
            {
                "description": "Convert all components to class-based.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "146",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you implement a custom hook for managing authentication state in a React application?",
        "options": [
            {
                "description": "Use a class-based component with componentDidMount.",
                "isAnswerKey": false
            },
            {
                "description": "Create a custom hook that uses React Context to manage authentication state.",
                "isAnswerKey": true
            },
            {
                "description": "Use a global variable for authentication state.",
                "isAnswerKey": false
            },
            {
                "description": "Use inline styles for authentication elements.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "147",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you ensure a React component is scalable and maintainable?",
        "options": [
            {
                "description": "Use inline styles for all elements.",
                "isAnswerKey": false
            },
            {
                "description": "Implement modular architecture with reusable components and custom hooks.",
                "isAnswerKey": true
            },
            {
                "description": "Use a global variable for state management.",
                "isAnswerKey": false
            },
            {
                "description": "Convert all components to class-based.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "148",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which approach would you use to implement cross-cutting concerns in a React application?",
        "options": [
            {
                "description": "Use inline styles for all elements.",
                "isAnswerKey": false
            },
            {
                "description": "Implement higher-order components or custom hooks.",
                "isAnswerKey": true
            },
            {
                "description": "Use a global variable for state management.",
                "isAnswerKey": false
            },
            {
                "description": "Convert all components to class-based.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "149",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you implement a scalable solution for managing application-wide notifications in a React app?",
        "options": [
            {
                "description": "Use a global variable for notifications state.",
                "isAnswerKey": false
            },
            {
                "description": "Use React Context with custom hooks for managing notifications.",
                "isAnswerKey": true
            },
            {
                "description": "Use inline styles for notification elements.",
                "isAnswerKey": false
            },
            {
                "description": "Convert all components to class-based.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "150",
        "skill": "react",
        "category": "framework",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you apply the dependency injection pattern in a React application?",
        "options": [
            {
                "description": "Use inline styles for all elements.",
                "isAnswerKey": false
            },
            {
                "description": "Use React Context to inject dependencies into components.",
                "isAnswerKey": true
            },
            {
                "description": "Use a global variable for state management.",
                "isAnswerKey": false
            },
            {
                "description": "Convert all components to class-based.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "151",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In a React application, which of the following patterns is most appropriate for managing complex state logic across multiple components?",
        "options": [
            {
                "description": "Higher Order Components (HOC)",
                "isAnswerKey": false
            },
            {
                "description": "Redux for state management",
                "isAnswerKey": true
            },
            {
                "description": "Context API with Hooks",
                "isAnswerKey": false
            },
            {
                "description": "Component Composition",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "152",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the primary advantage of using React's useMemo hook in a large scale application?",
        "options": [
            {
                "description": "It prevents memory leaks by cleaning up effects.",
                "isAnswerKey": false
            },
            {
                "description": "It improves performance by memoizing expensive calculations.",
                "isAnswerKey": true
            },
            {
                "description": "It simplifies state management logic.",
                "isAnswerKey": false
            },
            {
                "description": "It allows components to update independently.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "153",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is a key consideration when choosing between using React Context API and Redux for state management?",
        "options": [
            {
                "description": "Redux has a built-in router for navigation.",
                "isAnswerKey": false
            },
            {
                "description": "Context API is better for simple, localized state.",
                "isAnswerKey": true
            },
            {
                "description": "Redux provides better performance for all applications.",
                "isAnswerKey": false
            },
            {
                "description": "Context API supports middleware natively.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "154",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which design pattern is used in React to enhance a component by wrapping it with additional functionality?",
        "options": [
            {
                "description": "Render props",
                "isAnswerKey": false
            },
            {
                "description": "Higher Order Component (HOC)",
                "isAnswerKey": true
            },
            {
                "description": "Context API",
                "isAnswerKey": false
            },
            {
                "description": "Hooks",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "155",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "When would you choose to use React's useReducer over useState?",
        "options": [
            {
                "description": "When you need to manage a simple boolean toggle.",
                "isAnswerKey": false
            },
            {
                "description": "When the state logic is complex and involves multiple sub-values.",
                "isAnswerKey": true
            },
            {
                "description": "When you need to perform side-effects after state updates.",
                "isAnswerKey": false
            },
            {
                "description": "When you need to share state across unrelated components.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "156",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In a React application, which pattern is most suitable for lazy loading components?",
        "options": [
            {
                "description": "Higher Order Components",
                "isAnswerKey": false
            },
            {
                "description": "React.lazy and Suspense",
                "isAnswerKey": true
            },
            {
                "description": "useEffect with async/await",
                "isAnswerKey": false
            },
            {
                "description": "Context API",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "157",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "How does the key prop help React in rendering lists?",
        "options": [
            {
                "description": "It forces a complete re-render of the list.",
                "isAnswerKey": false
            },
            {
                "description": "It helps React identify which items have changed, been added, or removed.",
                "isAnswerKey": true
            },
            {
                "description": "It prevents the list from being rendered if unchanged.",
                "isAnswerKey": false
            },
            {
                "description": "It automatically sorts the list items.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "158",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which one of the following is a benefit of using the React Context API?",
        "options": [
            {
                "description": "It completely replaces Redux for global state management.",
                "isAnswerKey": false
            },
            {
                "description": "It allows state to be passed deeply throughout the component tree without prop drilling.",
                "isAnswerKey": true
            },
            {
                "description": "It automatically optimizes the performance of the application.",
                "isAnswerKey": false
            },
            {
                "description": "It provides built-in support for async operations.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "159",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In React, what is the main advantage of using the useEffect hook over componentDidMount lifecycle method?",
        "options": [
            {
                "description": "useEffect can only be executed once per component lifecycle.",
                "isAnswerKey": false
            },
            {
                "description": "useEffect allows you to perform side effects in functional components.",
                "isAnswerKey": true
            },
            {
                "description": "useEffect does not require dependency arrays.",
                "isAnswerKey": false
            },
            {
                "description": "useEffect is executed before every render.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "160",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is a common use case for React Portals?",
        "options": [
            {
                "description": "To manage component state.",
                "isAnswerKey": false
            },
            {
                "description": "To render children into a DOM node outside the parent component's hierarchy.",
                "isAnswerKey": true
            },
            {
                "description": "To optimize component re-renders.",
                "isAnswerKey": false
            },
            {
                "description": "To handle form submissions.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "161",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Consider the following React component code snippet. What is the issue with the given implementation?\n\n```jsx\nfunction Example({ items }) {\n  const handleClick = (index) => {\n    console.log('Clicked item:', items[index]);\n  };\n\n  return (\n    <ul>\n      {items.map((item, index) => (\n        <li key={index} onClick={() => handleClick(index)}>{item}</li>\n      ))}\n    </ul>\n  );\n}\n```\n",
        "options": [
            {
                "description": "Using the index as a key can cause issues when the list order changes.",
                "isAnswerKey": true
            },
            {
                "description": "The handleClick function should be defined inside the map function.",
                "isAnswerKey": false
            },
            {
                "description": "The onClick handler should not use arrow functions.",
                "isAnswerKey": false
            },
            {
                "description": "The items prop should be passed as a state instead.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "162",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "In the context of React, what will be the output of the following code snippet when the button is clicked?\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  const handleClick = () => {\n    setCount(count + 1);\n    setCount(count + 1);\n  };\n\n  return (\n    <button onClick={handleClick}>Count: {count}</button>\n  );\n}\n```\n",
        "options": [
            {
                "description": "Count: 1",
                "isAnswerKey": true
            },
            {
                "description": "Count: 2",
                "isAnswerKey": false
            },
            {
                "description": "Count: 3",
                "isAnswerKey": false
            },
            {
                "description": "Count: 0",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "163",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is a potential issue with the following React component that uses the useEffect hook?\n\n```jsx\nimport React, { useState, useEffect } from 'react';\n\nfunction Timer() {\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(seconds + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return <div>Seconds: {seconds}</div>;\n}\n```\n",
        "options": [
            {
                "description": "The interval may run multiple times causing memory leaks.",
                "isAnswerKey": false
            },
            {
                "description": "The seconds state is not updated correctly due to stale closure.",
                "isAnswerKey": true
            },
            {
                "description": "The interval is cleared immediately due to an incorrect return.",
                "isAnswerKey": false
            },
            {
                "description": "The setSeconds function is not defined properly.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "164",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the following React component, what will be the output when the button is clicked?\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [value, setValue] = useState(10);\n\n  const handleClick = () => {\n    setValue((prevValue) => prevValue + 1);\n    setValue((prevValue) => prevValue + 1);\n  };\n\n  return (\n    <button onClick={handleClick}>Value: {value}</button>\n  );\n}\n```\n",
        "options": [
            {
                "description": "Value: 12",
                "isAnswerKey": true
            },
            {
                "description": "Value: 11",
                "isAnswerKey": false
            },
            {
                "description": "Value: 10",
                "isAnswerKey": false
            },
            {
                "description": "Value: 13",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "165",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the expected behavior of the following React component and why?\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction Toggle() {\n  const [isOn, setIsOn] = useState(false);\n\n  return (\n    <button onClick={() => setIsOn(!isOn)}>\n      {isOn ? 'ON' : 'OFF'}\n    </button>\n  );\n}\n```\n",
        "options": [
            {
                "description": "The button will toggle between 'ON' and 'OFF' when clicked.",
                "isAnswerKey": true
            },
            {
                "description": "The button will only display 'OFF' due to incorrect state initialization.",
                "isAnswerKey": false
            },
            {
                "description": "The button will not change due to immutability issues.",
                "isAnswerKey": false
            },
            {
                "description": "The button will throw an error due to incorrect event handling.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "166",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "In the React component below, how can you prevent the unnecessary execution of the fetch function?\n\n```jsx\nimport React, { useEffect } from 'react';\n\nfunction DataFetcher({ url }) {\n  useEffect(() => {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => console.log(data));\n  }, [url]);\n\n  return <div>Loading data...</div>;\n}\n```\n",
        "options": [
            {
                "description": "Remove the dependency array.",
                "isAnswerKey": false
            },
            {
                "description": "Use a ref to store the previous url value and check before fetching.",
                "isAnswerKey": true
            },
            {
                "description": "Use a state variable to control the fetch execution.",
                "isAnswerKey": false
            },
            {
                "description": "Add an empty dependency array.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "167",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "In a React application, what is a common pitfall when using the Context API directly in function components?",
        "options": [
            {
                "description": "It can lead to deeply nested JSX structures.",
                "isAnswerKey": false
            },
            {
                "description": "It can cause unnecessary re-renders if not managed properly.",
                "isAnswerKey": true
            },
            {
                "description": "It is not compatible with hooks.",
                "isAnswerKey": false
            },
            {
                "description": "It does not support asynchronous data fetching.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "168",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Consider the following React component. What is a potential issue with the use of state here?\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <button onClick={increment}>Increment</button>\n      <p>Count: {count}</p>\n    </div>\n  );\n}\n```\n",
        "options": [
            {
                "description": "The count will not increment correctly due to async updates.",
                "isAnswerKey": true
            },
            {
                "description": "The increment function is not accessible within the component.",
                "isAnswerKey": false
            },
            {
                "description": "The setCount function should be called within a useEffect.",
                "isAnswerKey": false
            },
            {
                "description": "The initial state should be passed as a function.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "169",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which one of the following strategies can help improve performance when rendering a large list of items in React?",
        "options": [
            {
                "description": "Using inline styles for each list item.",
                "isAnswerKey": false
            },
            {
                "description": "Using React.memo to memoize each list item.",
                "isAnswerKey": true
            },
            {
                "description": "Increasing the component's state variables.",
                "isAnswerKey": false
            },
            {
                "description": "Avoiding the use of keys in list items.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "170",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "In a React app, which of the following is a common reason for a component to re-render unnecessarily?",
        "options": [
            {
                "description": "State updates with the same value.",
                "isAnswerKey": true
            },
            {
                "description": "Using arrow functions within the render method.",
                "isAnswerKey": false
            },
            {
                "description": "Using props for conditional rendering.",
                "isAnswerKey": false
            },
            {
                "description": "Using class components instead of functional components.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "171",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following React component, how can it be refactored to prevent unnecessary re-renders?\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction ExpensiveComponent({ value }) {\n  console.log('Rendering ExpensiveComponent');\n\n  return <div>Value: {value}</div>;\n}\n\nfunction ParentComponent() {\n  const [counter, setCounter] = useState(0);\n\n  return (\n    <div>\n      <button onClick={() => setCounter(counter + 1)}>Increment</button>\n      <ExpensiveComponent value={counter} />\n    </div>\n  );\n}\n```\n",
        "options": [
            {
                "description": "Wrap ExpensiveComponent with React.memo.",
                "isAnswerKey": true
            },
            {
                "description": "Move ExpensiveComponent inside the button onClick handler.",
                "isAnswerKey": false
            },
            {
                "description": "Use a shouldComponentUpdate method in ExpensiveComponent.",
                "isAnswerKey": false
            },
            {
                "description": "Convert ExpensiveComponent to a class component.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "172",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you optimize the following component to handle a large list of items efficiently?\n\n```jsx\nimport React from 'react';\n\nfunction LargeList({ items }) {\n  return (\n    <ul>\n      {items.map(item => (\n        <li key={item.id}>{item.name}</li>\n      ))}\n    </ul>\n  );\n}\n```\n",
        "options": [
            {
                "description": "Implement pagination or infinite scrolling.",
                "isAnswerKey": true
            },
            {
                "description": "Convert the list items into a single string and render.",
                "isAnswerKey": false
            },
            {
                "description": "Use inline styles for each list item.",
                "isAnswerKey": false
            },
            {
                "description": "Remove the keys from the list items.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "173",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "In a React application using hooks, what is the best way to manage a form's state?\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction Form() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  return (\n    <form>\n      <input name=\"name\" value={formData.name} onChange={handleChange} />\n      <input name=\"email\" value={formData.email} onChange={handleChange} />\n      <input name=\"password\" type=\"password\" value={formData.password} onChange={handleChange} />\n    </form>\n  );\n}\n```\n",
        "options": [
            {
                "description": "This implementation is optimal as it uses a single state object.",
                "isAnswerKey": true
            },
            {
                "description": "Separate useState hooks should be used for each input field.",
                "isAnswerKey": false
            },
            {
                "description": "The formData state should be reset after every change.",
                "isAnswerKey": false
            },
            {
                "description": "The handleChange function should not use prevState.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "174",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the issue with the following component when using it in a list and how can it be fixed?\n\n```jsx\nfunction ListItem({ item }) {\n  return <li>{item.name}</li>;\n}\n\nfunction ItemList({ items }) {\n  return (\n    <ul>\n      {items.map(item => (\n        <ListItem key={item.id} item={item} />\n      ))}\n    </ul>\n  );\n}\n```\n",
        "options": [
            {
                "description": "The key should be passed to ListItem.",
                "isAnswerKey": true
            },
            {
                "description": "The ListItem component should not be used.",
                "isAnswerKey": false
            },
            {
                "description": "The items should be sorted before mapping.",
                "isAnswerKey": false
            },
            {
                "description": "ListItem should be a class component.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "175",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is a potential memory leak issue in the following component and how can it be resolved?\n\n```jsx\nimport React, { useState, useEffect } from 'react';\n\nfunction ChatRoom() {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const chatSubscription = subscribeToChat(newMessages => {\n      setMessages(prevMessages => [...prevMessages, ...newMessages]);\n    });\n    return () => chatSubscription.unsubscribe();\n  }, []);\n\n  return (\n    <ul>\n      {messages.map((message, index) => (\n        <li key={index}>{message}</li>\n      ))}\n    </ul>\n  );\n}\n```\n",
        "options": [
            {
                "description": "The unsubscribe function should be inside the effect's cleanup.",
                "isAnswerKey": true
            },
            {
                "description": "The messages state should be cleared on component unmount.",
                "isAnswerKey": false
            },
            {
                "description": "The chatSubscription should be stored in a ref.",
                "isAnswerKey": false
            },
            {
                "description": "The useEffect hook should not have a dependency array.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "176",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "In the following React component, which optimization can be applied to prevent unnecessary updates to the child component?\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction ChildComponent({ data }) {\n  console.log('Rendering ChildComponent');\n  return <div>{data}</div>;\n}\n\nfunction ParentComponent() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n      <ChildComponent data={count} />\n    </div>\n  );\n}\n```\n",
        "options": [
            {
                "description": "Use React.memo to memoize ChildComponent.",
                "isAnswerKey": true
            },
            {
                "description": "Convert ParentComponent to a class component.",
                "isAnswerKey": false
            },
            {
                "description": "Use useCallback to memoize the setCount function.",
                "isAnswerKey": false
            },
            {
                "description": "Remove the button from ParentComponent.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "177",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following React component structure, how can you lift the state up to avoid prop drilling?\n\n```jsx\nfunction GrandParent({ initialCount }) {\n  return <Parent initialCount={initialCount} />;\n}\n\nfunction Parent({ initialCount }) {\n  return <Child initialCount={initialCount} />;\n}\n\nfunction Child({ initialCount }) {\n  const [count, setCount] = useState(initialCount);\n  return <button onClick={() => setCount(count + 1)}>Count: {count}</button>;\n}\n```\n",
        "options": [
            {
                "description": "Move the useState hook to the GrandParent component and pass both count and setCount down.",
                "isAnswerKey": true
            },
            {
                "description": "Use context to manage the initialCount state.",
                "isAnswerKey": false
            },
            {
                "description": "Keep the state in the Child component and use refs.",
                "isAnswerKey": false
            },
            {
                "description": "Convert Child to a class component with its own state.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "178",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you avoid the common pitfall of stale closures with useEffect in React?\n\n```jsx\nimport React, { useState, useEffect } from 'react';\n\nfunction Timer() {\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(seconds + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [seconds]);\n\n  return <div>Seconds: {seconds}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Include seconds in the dependency array of useEffect.",
                "isAnswerKey": true
            },
            {
                "description": "Remove the dependency array from useEffect.",
                "isAnswerKey": false
            },
            {
                "description": "Store the seconds in a global variable.",
                "isAnswerKey": false
            },
            {
                "description": "Use a ref to store the interval.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "179",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "In the following React code, what would be a better way to avoid executing the fetch function on every render?\n\n```jsx\nimport React, { useEffect } from 'react';\n\nfunction DataFetcher({ url }) {\n  useEffect(() => {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => console.log(data));\n  });\n\n  return <div>Loading data...</div>;\n}\n```\n",
        "options": [
            {
                "description": "Add a dependency array with url.",
                "isAnswerKey": true
            },
            {
                "description": "Move fetch into a useCallback hook.",
                "isAnswerKey": false
            },
            {
                "description": "Use setInterval to delay execution.",
                "isAnswerKey": false
            },
            {
                "description": "Remove the asynchronous logic.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "180",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Consider the following React component. What is the issue and how can it be resolved?\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <button onClick={increment}>Increment</button>\n      <p>Count: {count}</p>\n    </div>\n  );\n}\n```\n",
        "options": [
            {
                "description": "Use a function update to ensure both setCount calls use the latest value.",
                "isAnswerKey": true
            },
            {
                "description": "Convert the Counter component to a class component.",
                "isAnswerKey": false
            },
            {
                "description": "Remove one of the setCount calls.",
                "isAnswerKey": false
            },
            {
                "description": "Add useEffect to synchronize the count state.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "181",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In the following React code, how can you refactor the component to enhance performance and reduce unnecessary re-renders?\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction ParentComponent() {\n  const [count, setCount] = useState(0);\n\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <button onClick={handleClick}>Increment</button>\n      <ChildComponent count={count} />\n    </div>\n  );\n}\n\nfunction ChildComponent({ count }) {\n  console.log('Rendering ChildComponent');\n  return <div>Count: {count}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Wrap ChildComponent with React.memo to prevent re-renders.",
                "isAnswerKey": true
            },
            {
                "description": "Use shouldComponentUpdate in ParentComponent.",
                "isAnswerKey": false
            },
            {
                "description": "Convert ParentComponent to a class component.",
                "isAnswerKey": false
            },
            {
                "description": "Move the handleClick function inside ChildComponent.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "182",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you refactor the following code to ensure the fetchData function is only called once when the component mounts?\n\n```jsx\nimport React, { useState, useEffect } from 'react';\n\nfunction DataComponent() {\n  const [data, setData] = useState(null);\n\n  const fetchData = () => {\n    fetch('/api/data')\n      .then(response => response.json())\n      .then(data => setData(data));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return <div>{data ? JSON.stringify(data) : 'Loading...'}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Remove fetchData from the dependency array.",
                "isAnswerKey": true
            },
            {
                "description": "Use useCallback to memoize fetchData.",
                "isAnswerKey": false
            },
            {
                "description": "Call fetchData directly inside the useEffect hook.",
                "isAnswerKey": false
            },
            {
                "description": "Pass an empty array as the dependency array.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "183",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is an effective way to refactor the following component to avoid prop drilling?\n\n```jsx\nfunction App() {\n  const [user, setUser] = useState({ name: 'John', age: 30 });\n\n  return <Profile user={user} setUser={setUser} />;\n}\n\nfunction Profile({ user, setUser }) {\n  return <UserDetails user={user} setUser={setUser} />;\n}\n\nfunction UserDetails({ user, setUser }) {\n  return <div>{user.name}</div>;\n}\n```\n",
        "options": [
            {
                "description": "Use React Context API to manage user state globally.",
                "isAnswerKey": true
            },
            {
                "description": "Convert all components to class components.",
                "isAnswerKey": false
            },
            {
                "description": "Pass user and setUser as props to all components.",
                "isAnswerKey": false
            },
            {
                "description": "Store user data in a global variable.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "184",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In a React component, what is the best practice to avoid re-creating functions on every render?",
        "options": [
            {
                "description": "Use the useCallback hook to memoize functions.",
                "isAnswerKey": true
            },
            {
                "description": "Define all functions outside the component.",
                "isAnswerKey": false
            },
            {
                "description": "Convert the component to a class component.",
                "isAnswerKey": false
            },
            {
                "description": "Use the useMemo hook for all functions.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "185",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you refactor the following code to optimize the rendering of a large data set?\n\n```jsx\nfunction DataList({ data }) {\n  return (\n    <ul>\n      {data.map(item => (\n        <li key={item.id}>{item.name}</li>\n      ))}\n    </ul>\n  );\n}\n```\n",
        "options": [
            {
                "description": "Implement windowing using a library like react-window or react-virtualized.",
                "isAnswerKey": true
            },
            {
                "description": "Convert DataList to a class component.",
                "isAnswerKey": false
            },
            {
                "description": "Use inline styles for list items.",
                "isAnswerKey": false
            },
            {
                "description": "Sort the data before rendering.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "186",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the purpose of the useMemo hook in React and how is it different from useEffect?",
        "options": [
            {
                "description": "useMemo is used to memoize expensive computations, while useEffect is for side-effects.",
                "isAnswerKey": true
            },
            {
                "description": "useMemo is used for data fetching, while useEffect is for rendering logic.",
                "isAnswerKey": false
            },
            {
                "description": "useMemo automatically updates state, while useEffect does not.",
                "isAnswerKey": false
            },
            {
                "description": "useMemo and useEffect serve the same purpose but are used in different scenarios.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "187",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you efficiently manage a large number of subscriptions in a React component?",
        "options": [
            {
                "description": "Use a custom hook to encapsulate subscription logic.",
                "isAnswerKey": true
            },
            {
                "description": "Store all subscriptions in the component's state.",
                "isAnswerKey": false
            },
            {
                "description": "Create a new subscription on every render.",
                "isAnswerKey": false
            },
            {
                "description": "Use componentDidMount and componentWillUnmount lifecycle methods.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "188",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is a common mistake when using React's useEffect hook with dependencies, and how can it be avoided?",
        "options": [
            {
                "description": "Not including all variables used in the effect as dependencies can cause stale data issues.",
                "isAnswerKey": true
            },
            {
                "description": "Including too many dependencies can cause infinite loops.",
                "isAnswerKey": false
            },
            {
                "description": "Using useEffect for rendering logic can cause performance issues.",
                "isAnswerKey": false
            },
            {
                "description": "Forgetting to return a cleanup function can cause memory leaks.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "189",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In a large scale React application, how can you manage complex state logic efficiently?",
        "options": [
            {
                "description": "Use a combination of useReducer and Context API for state management.",
                "isAnswerKey": true
            },
            {
                "description": "Store all state in a single global object.",
                "isAnswerKey": false
            },
            {
                "description": "Use local state in each component and pass it down as props.",
                "isAnswerKey": false
            },
            {
                "description": "Rely exclusively on useState for all state management.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "190",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is an effective way to handle side-effects in a React component with hooks?",
        "options": [
            {
                "description": "Encapsulate side-effects within the useEffect hook.",
                "isAnswerKey": true
            },
            {
                "description": "Handle side-effects within the render method.",
                "isAnswerKey": false
            },
            {
                "description": "Use useMemo to handle side-effects.",
                "isAnswerKey": false
            },
            {
                "description": "Avoid using hooks and manage side-effects with classes.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "191",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "In a React application, how can you ensure consistent styling across a large number of components?",
        "options": [
            {
                "description": "Use a CSS-in-JS library like styled-components or emotion.",
                "isAnswerKey": true
            },
            {
                "description": "Apply inline styles to each component.",
                "isAnswerKey": false
            },
            {
                "description": "Use global CSS classes for all components.",
                "isAnswerKey": false
            },
            {
                "description": "Rely on browser default styles.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "192",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is a systemic approach to managing tech debt in a large React codebase?",
        "options": [
            {
                "description": "Implement a regular refactoring schedule and enforce coding standards.",
                "isAnswerKey": true
            },
            {
                "description": "Ignore tech debt until it becomes a major issue.",
                "isAnswerKey": false
            },
            {
                "description": "Rely on automated tools only for tech debt management.",
                "isAnswerKey": false
            },
            {
                "description": "Assign a single developer to manage all tech debt.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "193",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is an effective way to enforce consistent architectural patterns in a React application?",
        "options": [
            {
                "description": "Define and document architectural guidelines and patterns.",
                "isAnswerKey": true
            },
            {
                "description": "Allow each developer to follow their own architectural style.",
                "isAnswerKey": false
            },
            {
                "description": "Use a single large component to manage all application logic.",
                "isAnswerKey": false
            },
            {
                "description": "Rely on third-party libraries for architectural decisions.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "194",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you optimize a React application for production deployment?",
        "options": [
            {
                "description": "Minify and bundle JavaScript files using a tool like Webpack.",
                "isAnswerKey": true
            },
            {
                "description": "Deploy the application without any build process.",
                "isAnswerKey": false
            },
            {
                "description": "Use inline JavaScript for all logic.",
                "isAnswerKey": false
            },
            {
                "description": "Avoid using any caching mechanisms.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "195",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "In a React application, what is a best practice for managing global state?",
        "options": [
            {
                "description": "Use a state management library like Redux or MobX.",
                "isAnswerKey": true
            },
            {
                "description": "Store all global state in a single component.",
                "isAnswerKey": false
            },
            {
                "description": "Pass global state down through props.",
                "isAnswerKey": false
            },
            {
                "description": "Avoid using global state altogether.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "196",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is a recommended approach to handle authentication in a React application?",
        "options": [
            {
                "description": "Use context and hooks to manage auth state and JWT tokens.",
                "isAnswerKey": true
            },
            {
                "description": "Store authentication tokens in plain text files.",
                "isAnswerKey": false
            },
            {
                "description": "Rely on client-side only authentication.",
                "isAnswerKey": false
            },
            {
                "description": "Store authentication data in the component's local state.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "197",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "In a React application, how can you handle large data sets efficiently?",
        "options": [
            {
                "description": "Implement data fetching and pagination strategies.",
                "isAnswerKey": true
            },
            {
                "description": "Load all data at once and store it in state.",
                "isAnswerKey": false
            },
            {
                "description": "Render all data without any optimization.",
                "isAnswerKey": false
            },
            {
                "description": "Use setInterval to periodically fetch data.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "198",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is a best practice to handle asynchronous operations in a React component?",
        "options": [
            {
                "description": "Use async/await with try/catch blocks within useEffect.",
                "isAnswerKey": true
            },
            {
                "description": "Perform asynchronous operations directly in the render method.",
                "isAnswerKey": false
            },
            {
                "description": "Use synchronous code only.",
                "isAnswerKey": false
            },
            {
                "description": "Rely on global variables to handle async state.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "199",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you ensure that your React components are easily testable and maintainable?",
        "options": [
            {
                "description": "Write components as pure functions and use prop-types for validation.",
                "isAnswerKey": true
            },
            {
                "description": "Use complex nested components to handle logic.",
                "isAnswerKey": false
            },
            {
                "description": "Avoid writing tests for React components.",
                "isAnswerKey": false
            },
            {
                "description": "Write components with inline styles and logic.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "200",
        "skill": "react",
        "category": "framework",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "In a React application, what is a strategy to ensure components are reusable across different projects?",
        "options": [
            {
                "description": "Create a component library with well-documented APIs and styles.",
                "isAnswerKey": true
            },
            {
                "description": "Hardcode project-specific logic into components.",
                "isAnswerKey": false
            },
            {
                "description": "Avoid using any third-party libraries.",
                "isAnswerKey": false
            },
            {
                "description": "Share components by copying and pasting code.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "201",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is a correct way to start an HTML document?",
        "options": [
            {
                "description": "<html>",
                "isAnswerKey": false
            },
            {
                "description": "<!DOCTYPE html>",
                "isAnswerKey": true
            },
            {
                "description": "<!HTML>",
                "isAnswerKey": false
            },
            {
                "description": "<document html>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "202",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which element is used to create a hyperlink in HTML?",
        "options": [
            {
                "description": "<link>",
                "isAnswerKey": false
            },
            {
                "description": "<a>",
                "isAnswerKey": true
            },
            {
                "description": "<href>",
                "isAnswerKey": false
            },
            {
                "description": "<url>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "203",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML tag is used to define an internal style sheet?",
        "options": [
            {
                "description": "<style>",
                "isAnswerKey": true
            },
            {
                "description": "<css>",
                "isAnswerKey": false
            },
            {
                "description": "<script>",
                "isAnswerKey": false
            },
            {
                "description": "<link>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "204",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the correct HTML element for inserting a line break?",
        "options": [
            {
                "description": "<br>",
                "isAnswerKey": true
            },
            {
                "description": "<lb>",
                "isAnswerKey": false
            },
            {
                "description": "<break>",
                "isAnswerKey": false
            },
            {
                "description": "<line>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "205",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML attribute specifies an alternate text for an image, if the image cannot be displayed?",
        "options": [
            {
                "description": "title",
                "isAnswerKey": false
            },
            {
                "description": "alt",
                "isAnswerKey": true
            },
            {
                "description": "src",
                "isAnswerKey": false
            },
            {
                "description": "longdesc",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "206",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML tag is used to display the largest heading?",
        "options": [
            {
                "description": "<heading>",
                "isAnswerKey": false
            },
            {
                "description": "<h6>",
                "isAnswerKey": false
            },
            {
                "description": "<h1>",
                "isAnswerKey": true
            },
            {
                "description": "<h>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "207",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which element is used to specify a footer for a document or section?",
        "options": [
            {
                "description": "<bottom>",
                "isAnswerKey": false
            },
            {
                "description": "<footer>",
                "isAnswerKey": true
            },
            {
                "description": "<foot>",
                "isAnswerKey": false
            },
            {
                "description": "<section>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "208",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML element is used to specify a header for a document or section?",
        "options": [
            {
                "description": "<head>",
                "isAnswerKey": false
            },
            {
                "description": "<header>",
                "isAnswerKey": true
            },
            {
                "description": "<h1>",
                "isAnswerKey": false
            },
            {
                "description": "<section>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "209",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML element is used to define a client-side script?",
        "options": [
            {
                "description": "<javascript>",
                "isAnswerKey": false
            },
            {
                "description": "<script>",
                "isAnswerKey": true
            },
            {
                "description": "<js>",
                "isAnswerKey": false
            },
            {
                "description": "<code>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "210",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the correct HTML element for playing video files?",
        "options": [
            {
                "description": "<media>",
                "isAnswerKey": false
            },
            {
                "description": "<video>",
                "isAnswerKey": true
            },
            {
                "description": "<movie>",
                "isAnswerKey": false
            },
            {
                "description": "<play>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "211",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the output of the following HTML snippet?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Learning HTML&lt;/h1&gt;\n    &lt;p&gt;Hello, World!&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "An error because the body tag is not closed",
                "isAnswerKey": false
            },
            {
                "description": "An error because the html tag is not closed",
                "isAnswerKey": false
            },
            {
                "description": "A heading 'Learning HTML' followed by the text 'Hello, World!'",
                "isAnswerKey": true
            },
            {
                "description": "Only the text 'Hello, World!'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "212",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following HTML structures is correct for creating an unordered list?",
        "options": [
            {
                "description": "<ul><li>Item 1</ul>",
                "isAnswerKey": false
            },
            {
                "description": "<ul><li>Item 1</li><li>Item 2</li></ul>",
                "isAnswerKey": true
            },
            {
                "description": "<list><li>Item 1</li></list>",
                "isAnswerKey": false
            },
            {
                "description": "<li>Item 1<li>Item 2</li>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "213",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the result of the following HTML code?\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;&lt;title&gt;Page Title&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;My First Heading&lt;/h1&gt;\n  &lt;p&gt;My first paragraph.&lt;/p&gt;\n  &lt;p&gt;Another paragraph.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "Displays only the first paragraph",
                "isAnswerKey": false
            },
            {
                "description": "Displays only the heading",
                "isAnswerKey": false
            },
            {
                "description": "Displays a heading and two paragraphs",
                "isAnswerKey": true
            },
            {
                "description": "Displays nothing",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "214",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "How do you create a checkbox in HTML?",
        "options": [
            {
                "description": "<input type='checkbox'>",
                "isAnswerKey": true
            },
            {
                "description": "<checkbox>",
                "isAnswerKey": false
            },
            {
                "description": "<input checkbox>",
                "isAnswerKey": false
            },
            {
                "description": "<check>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "215",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the <meta> tag in HTML?",
        "options": [
            {
                "description": "To link to external stylesheets",
                "isAnswerKey": false
            },
            {
                "description": "To store metadata about the HTML document",
                "isAnswerKey": true
            },
            {
                "description": "To display images",
                "isAnswerKey": false
            },
            {
                "description": "To create a navigation menu",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "216",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which attribute is used in HTML to open a link in a new tab?",
        "options": [
            {
                "description": "new='tab'",
                "isAnswerKey": false
            },
            {
                "description": "target='_blank'",
                "isAnswerKey": true
            },
            {
                "description": "rel='newtab'",
                "isAnswerKey": false
            },
            {
                "description": "open='newtab'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "217",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What HTML tag is used to define a table header?",
        "options": [
            {
                "description": "<thead>",
                "isAnswerKey": false
            },
            {
                "description": "<th>",
                "isAnswerKey": true
            },
            {
                "description": "<header>",
                "isAnswerKey": false
            },
            {
                "description": "<td>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "218",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which HTML tag is used to define a container for an external application or interactive content (a plug-in)?",
        "options": [
            {
                "description": "<iframe>",
                "isAnswerKey": false
            },
            {
                "description": "<embed>",
                "isAnswerKey": true
            },
            {
                "description": "<object>",
                "isAnswerKey": false
            },
            {
                "description": "<applet>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "219",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the correct way to specify a background color in HTML?",
        "options": [
            {
                "description": "<body style='background-color:blue;'>",
                "isAnswerKey": true
            },
            {
                "description": "<body bg-color='blue'>",
                "isAnswerKey": false
            },
            {
                "description": "<background color='blue'>",
                "isAnswerKey": false
            },
            {
                "description": "<body background='blue'>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "220",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which tag is used to define an HTML form for user input?",
        "options": [
            {
                "description": "<input>",
                "isAnswerKey": false
            },
            {
                "description": "<form>",
                "isAnswerKey": true
            },
            {
                "description": "<textarea>",
                "isAnswerKey": false
            },
            {
                "description": "<userinput>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "221",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will be the output of the following HTML snippet?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;ul&gt;\n      &lt;li&gt;Item 1&lt;/li&gt;\n      &lt;li&gt;Item 2&lt;/li&gt;\n      &lt;li&gt;Item 3&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "A numbered list of items",
                "isAnswerKey": false
            },
            {
                "description": "A bulleted list of items",
                "isAnswerKey": true
            },
            {
                "description": "A list with commas separating items",
                "isAnswerKey": false
            },
            {
                "description": "A single paragraph with items separated by new lines",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "222",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you create a text input field in a form?",
        "options": [
            {
                "description": "<input type='text'>",
                "isAnswerKey": true
            },
            {
                "description": "<textfield>",
                "isAnswerKey": false
            },
            {
                "description": "<input type='textfield'>",
                "isAnswerKey": false
            },
            {
                "description": "<textinput>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "223",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will be the effect of the following HTML code?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;p&gt;This is a paragraph.&lt;/p&gt;\n    &lt;p hidden&gt;This paragraph is hidden.&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "Both paragraphs will be visible",
                "isAnswerKey": false
            },
            {
                "description": "Only the first paragraph will be visible",
                "isAnswerKey": true
            },
            {
                "description": "Only the second paragraph will be visible",
                "isAnswerKey": false
            },
            {
                "description": "None of the paragraphs will be visible",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "224",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the function of the <label> tag in HTML?",
        "options": [
            {
                "description": "To define a label for a table cell",
                "isAnswerKey": false
            },
            {
                "description": "To define a label for an input element",
                "isAnswerKey": true
            },
            {
                "description": "To display a heading",
                "isAnswerKey": false
            },
            {
                "description": "To style text",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "225",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will be the result of the following HTML code?\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n  &lt;p&gt;This is &lt;strong&gt;strong&lt;/strong&gt; text&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "The text 'This is strong text' will be italicized",
                "isAnswerKey": false
            },
            {
                "description": "The text 'This is strong text' will be bold",
                "isAnswerKey": true
            },
            {
                "description": "The text 'This is strong text' will have no special formatting",
                "isAnswerKey": false
            },
            {
                "description": "Only the word 'strong' will be bold",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "226",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "How do you create a text area in an HTML form?",
        "options": [
            {
                "description": "<input type='textarea'>",
                "isAnswerKey": false
            },
            {
                "description": "<textarea>",
                "isAnswerKey": true
            },
            {
                "description": "<text>",
                "isAnswerKey": false
            },
            {
                "description": "<input type='text'>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "227",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the effect of using the <b> tag in HTML?",
        "options": [
            {
                "description": "It makes the text italic",
                "isAnswerKey": false
            },
            {
                "description": "It makes the text bold",
                "isAnswerKey": true
            },
            {
                "description": "It underlines the text",
                "isAnswerKey": false
            },
            {
                "description": "It highlights the text",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "228",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which HTML attribute is used to define inline styles?",
        "options": [
            {
                "description": "styles",
                "isAnswerKey": false
            },
            {
                "description": "style",
                "isAnswerKey": true
            },
            {
                "description": "class",
                "isAnswerKey": false
            },
            {
                "description": "font",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "229",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the purpose of the <title> tag in HTML?",
        "options": [
            {
                "description": "To define the main heading of the document",
                "isAnswerKey": false
            },
            {
                "description": "To specify the title of the document shown in the browser's title bar",
                "isAnswerKey": true
            },
            {
                "description": "To create a subtitle for a section",
                "isAnswerKey": false
            },
            {
                "description": "To name sections of the document",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "230",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the correct HTML for inserting an image?",
        "options": [
            {
                "description": "<img href='image.jpg' alt='MyImage'>",
                "isAnswerKey": false
            },
            {
                "description": "<img src='image.jpg' alt='MyImage'>",
                "isAnswerKey": true
            },
            {
                "description": "<image src='image.jpg' alt='MyImage'>",
                "isAnswerKey": false
            },
            {
                "description": "<img link='image.jpg' alt='MyImage'>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "231",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the error in the following HTML snippet:\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Title&lt;/h2&gt;\n    &lt;p&gt;This is a paragraph.&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "The paragraph tag is not closed properly",
                "isAnswerKey": false
            },
            {
                "description": "The heading tag is not closed properly",
                "isAnswerKey": true
            },
            {
                "description": "The body tag is missing",
                "isAnswerKey": false
            },
            {
                "description": "The HTML tag is missing",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "232",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the problem with this HTML code?\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Page Title\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;Welcome&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "The title tag is not closed",
                "isAnswerKey": true
            },
            {
                "description": "The p tag is not closed",
                "isAnswerKey": false
            },
            {
                "description": "The head tag is not closed",
                "isAnswerKey": false
            },
            {
                "description": "The body tag is missing",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "233",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which of the following HTML snippets correctly uses the <meta> tag to set the character encoding to UTF-8?",
        "options": [
            {
                "description": "<meta charset='UTF-8'>",
                "isAnswerKey": true
            },
            {
                "description": "<meta type='UTF-8'>",
                "isAnswerKey": false
            },
            {
                "description": "<meta encoding='UTF-8'>",
                "isAnswerKey": false
            },
            {
                "description": "<meta utf-8='charset'>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "234",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which HTML element is used to specify a contact information for the author/owner of a document?",
        "options": [
            {
                "description": "<header>",
                "isAnswerKey": false
            },
            {
                "description": "<footer>",
                "isAnswerKey": false
            },
            {
                "description": "<address>",
                "isAnswerKey": true
            },
            {
                "description": "<contact>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "235",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is wrong with the following code snippet?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;img alt='Sample Image'&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "The img tag is missing the src attribute",
                "isAnswerKey": true
            },
            {
                "description": "The alt attribute is not necessary",
                "isAnswerKey": false
            },
            {
                "description": "The img tag should be inside a div",
                "isAnswerKey": false
            },
            {
                "description": "The img tag is not properly closed",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "236",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What will the following HTML code output?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;span title='Tooltip text'&gt;Hover over me&lt;/span&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "The text 'Hover over me' with a tooltip on hover",
                "isAnswerKey": true
            },
            {
                "description": "The text 'Hover over me' with no tooltip",
                "isAnswerKey": false
            },
            {
                "description": "An error due to missing attributes",
                "isAnswerKey": false
            },
            {
                "description": "The text 'Tooltip text'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "237",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which of the following is a valid table structure in HTML?",
        "options": [
            {
                "description": "<table><tr><td>Data</td></tr></table>",
                "isAnswerKey": true
            },
            {
                "description": "<table><td>Data</td></table>",
                "isAnswerKey": false
            },
            {
                "description": "<table><tr><tr>Data</tr></tr></table>",
                "isAnswerKey": false
            },
            {
                "description": "<table><tr><th>Data</td></tr></table>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "238",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the mistake in the following HTML code?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;h3&gt;Hello World!\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "The h3 tag is not closed",
                "isAnswerKey": true
            },
            {
                "description": "The body tag is not closed",
                "isAnswerKey": false
            },
            {
                "description": "The html tag is not closed",
                "isAnswerKey": false
            },
            {
                "description": "The document is missing a doctype",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "239",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you create a drop-down list in HTML?",
        "options": [
            {
                "description": "<select><option>Value</option></select>",
                "isAnswerKey": true
            },
            {
                "description": "<dropdown><option>Value</option></dropdown>",
                "isAnswerKey": false
            },
            {
                "description": "<list><li>Value</li></list>",
                "isAnswerKey": false
            },
            {
                "description": "<checkbox><option>Value</option></checkbox>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "240",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What error is present in the following HTML snippet?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;p&gt;Paragraph 1&lt;p&gt;\n    &lt;p&gt;Paragraph 2&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "The first p tag is not properly closed",
                "isAnswerKey": true
            },
            {
                "description": "The second p tag is not properly closed",
                "isAnswerKey": false
            },
            {
                "description": "The body tag is not closed",
                "isAnswerKey": false
            },
            {
                "description": "There is a missing doctype declaration",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "241",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the rendered output of the following HTML code?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Welcome&lt;/h1&gt;\n    &lt;!-- <p>This is a comment</p> --&gt;\n    &lt;p&gt;Hello World!&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "Only the text 'Welcome'",
                "isAnswerKey": false
            },
            {
                "description": "The text 'Welcome' and 'Hello World!'",
                "isAnswerKey": true
            },
            {
                "description": "The text 'Welcome' and 'This is a comment'",
                "isAnswerKey": false
            },
            {
                "description": "The text 'Hello World!'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "242",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will happen when this HTML code is executed?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;button onclick='alert(\"Hello!\")'&gt;Click Me&lt;/button&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "An error because alert is not a valid HTML attribute",
                "isAnswerKey": false
            },
            {
                "description": "An alert box with the message 'Hello!' will be displayed when the button is clicked",
                "isAnswerKey": true
            },
            {
                "description": "The text 'Hello!' will be displayed directly on the page",
                "isAnswerKey": false
            },
            {
                "description": "Nothing will happen when the button is clicked",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "243",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "How will the following HTML code render?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Header&lt;/h1&gt;\n    &lt;p&gt;Line 1\n    &lt;p&gt;Line 2&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "Both lines will be in one paragraph",
                "isAnswerKey": true
            },
            {
                "description": "Each line will be in a separate paragraph",
                "isAnswerKey": false
            },
            {
                "description": "The first line will not be displayed",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to improper tag closure",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "244",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Predict the behavior of the following HTML:\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;div&gt;\n      &lt;span&gt;Text 1&lt;/span&gt;\n      &lt;span&gt;Text 2&lt;/span&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "Text 1 and Text 2 will be on separate lines",
                "isAnswerKey": false
            },
            {
                "description": "Text 1 and Text 2 will be on the same line",
                "isAnswerKey": true
            },
            {
                "description": "An error will occur because divs cannot contain spans",
                "isAnswerKey": false
            },
            {
                "description": "Only Text 1 will be displayed",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "245",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will the browser display for the following HTML?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;p&gt;Here is a &lt;strong&gt;bold&lt;/strong&gt; word&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "Here is a bold word",
                "isAnswerKey": true
            },
            {
                "description": "Here is a <strong>bold</strong> word",
                "isAnswerKey": false
            },
            {
                "description": "Here is a word in italics",
                "isAnswerKey": false
            },
            {
                "description": "An error because 'strong' is not a valid tag",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "246",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will happen if the following HTML code is run?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;a href='http://example.com'&gt;Example&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "The text 'Example' will link to 'http://example.com'",
                "isAnswerKey": true
            },
            {
                "description": "An error because href is missing quotes",
                "isAnswerKey": false
            },
            {
                "description": "The text 'Example' will not be a clickable link",
                "isAnswerKey": false
            },
            {
                "description": "The page will automatically redirect to 'http://example.com'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "247",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the effect of the following HTML code?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;input type='text' disabled&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "A text input field that cannot be edited",
                "isAnswerKey": true
            },
            {
                "description": "A hidden text input field",
                "isAnswerKey": false
            },
            {
                "description": "A text input field that is pre-filled with 'disabled'",
                "isAnswerKey": false
            },
            {
                "description": "An error due to missing value attribute",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "248",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Predict the output of the following HTML code:\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;ul&gt;\n      &lt;li&gt;Apple\n      &lt;li&gt;Banana\n      &lt;li&gt;Cherry&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "A list with Apple, Banana, and Cherry as items",
                "isAnswerKey": true
            },
            {
                "description": "An error due to improperly closed li tags",
                "isAnswerKey": false
            },
            {
                "description": "A list with only Cherry as an item",
                "isAnswerKey": false
            },
            {
                "description": "No list will be displayed",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "249",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output when the following HTML is rendered?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;p&gt;This is &lt;em&gt;very&lt;/em&gt; important text&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "The text 'This is very important text' with 'very' in italics",
                "isAnswerKey": true
            },
            {
                "description": "The text 'This is very important text' with 'very' in bold",
                "isAnswerKey": false
            },
            {
                "description": "The text 'This is very important text' with no special formatting",
                "isAnswerKey": false
            },
            {
                "description": "An error because 'em' is not a valid tag",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "250",
        "skill": "html",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What does the following HTML code do?\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;input type='password' placeholder='Enter password'&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>",
        "options": [
            {
                "description": "Creates a text input field with placeholder text 'Enter password'",
                "isAnswerKey": false
            },
            {
                "description": "Creates a password input field with placeholder text 'Enter password'",
                "isAnswerKey": true
            },
            {
                "description": "Creates a disabled input field",
                "isAnswerKey": false
            },
            {
                "description": "Creates an input field that displays the text 'Enter password'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "251",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is the correct HTML tag for inserting a line break?",
        "options": [
            {
                "description": "<br>",
                "isAnswerKey": true
            },
            {
                "description": "<lb>",
                "isAnswerKey": false
            },
            {
                "description": "<break>",
                "isAnswerKey": false
            },
            {
                "description": "<hr>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "252",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following HTML tags is used to define a hyperlink?",
        "options": [
            {
                "description": "<a>",
                "isAnswerKey": true
            },
            {
                "description": "<link>",
                "isAnswerKey": false
            },
            {
                "description": "<href>",
                "isAnswerKey": false
            },
            {
                "description": "<url>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "253",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML tag is used to define an unordered list?",
        "options": [
            {
                "description": "<ul>",
                "isAnswerKey": true
            },
            {
                "description": "<ol>",
                "isAnswerKey": false
            },
            {
                "description": "<li>",
                "isAnswerKey": false
            },
            {
                "description": "<list>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "254",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the correct HTML element for the largest heading?",
        "options": [
            {
                "description": "<h1>",
                "isAnswerKey": true
            },
            {
                "description": "<heading>",
                "isAnswerKey": false
            },
            {
                "description": "<head>",
                "isAnswerKey": false
            },
            {
                "description": "<h6>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "255",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML attribute specifies an alternate text for an image if the image cannot be displayed?",
        "options": [
            {
                "description": "alt",
                "isAnswerKey": true
            },
            {
                "description": "title",
                "isAnswerKey": false
            },
            {
                "description": "src",
                "isAnswerKey": false
            },
            {
                "description": "longdesc",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "256",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML tag is used to define an internal style sheet?",
        "options": [
            {
                "description": "<style>",
                "isAnswerKey": true
            },
            {
                "description": "<css>",
                "isAnswerKey": false
            },
            {
                "description": "<script>",
                "isAnswerKey": false
            },
            {
                "description": "<design>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "257",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which attribute is used to specify a unique identifier for an HTML element?",
        "options": [
            {
                "description": "id",
                "isAnswerKey": true
            },
            {
                "description": "class",
                "isAnswerKey": false
            },
            {
                "description": "style",
                "isAnswerKey": false
            },
            {
                "description": "unique",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "258",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML tag is used to define a table row?",
        "options": [
            {
                "description": "<tr>",
                "isAnswerKey": true
            },
            {
                "description": "<td>",
                "isAnswerKey": false
            },
            {
                "description": "<table>",
                "isAnswerKey": false
            },
            {
                "description": "<th>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "259",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML tag is used to define an inline frame?",
        "options": [
            {
                "description": "<iframe>",
                "isAnswerKey": true
            },
            {
                "description": "<frame>",
                "isAnswerKey": false
            },
            {
                "description": "<frameset>",
                "isAnswerKey": false
            },
            {
                "description": "<inline>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "260",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following attributes is used to define inline styles?",
        "options": [
            {
                "description": "style",
                "isAnswerKey": true
            },
            {
                "description": "class",
                "isAnswerKey": false
            },
            {
                "description": "stylesheet",
                "isAnswerKey": false
            },
            {
                "description": "design",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "261",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "In the following code snippet, what will be the output?\n\n```html\n<p id='demo'>Hello, World!</p>\n<script>\ndocument.getElementById('demo').innerHTML = 'Hello, JavaScript!';\n</script>\n```\n",
        "options": [
            {
                "description": "Hello, JavaScript!",
                "isAnswerKey": true
            },
            {
                "description": "Hello, World!",
                "isAnswerKey": false
            },
            {
                "description": "Error: Cannot set property 'innerHTML'",
                "isAnswerKey": false
            },
            {
                "description": "No output",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "262",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Identify the correct syntax to create a checkbox in HTML.",
        "options": [
            {
                "description": "<input type='checkbox'>",
                "isAnswerKey": true
            },
            {
                "description": "<checkbox>",
                "isAnswerKey": false
            },
            {
                "description": "<input checkbox='true'>",
                "isAnswerKey": false
            },
            {
                "description": "<input check='box'>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "263",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will the following HTML code produce?\n\n```html\n<!DOCTYPE html>\n<html>\n<body>\n<p>This is a paragraph.</p>\n<p>This is another paragraph.</p>\n</body>\n</html>\n```\n",
        "options": [
            {
                "description": "Two paragraphs, one below the other",
                "isAnswerKey": true
            },
            {
                "description": "A single paragraph",
                "isAnswerKey": false
            },
            {
                "description": "Text without paragraph formatting",
                "isAnswerKey": false
            },
            {
                "description": "An error due to missing <html> tag",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "264",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which attribute is used in HTML to open a link in a new tab?",
        "options": [
            {
                "description": "target='_blank'",
                "isAnswerKey": true
            },
            {
                "description": "target='new'",
                "isAnswerKey": false
            },
            {
                "description": "open='new'",
                "isAnswerKey": false
            },
            {
                "description": "window='new'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "265",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What does the following code do?\n\n```html\n<img src='image.png' alt='Sample Image' width='200'>\n```",
        "options": [
            {
                "description": "Displays an image with a width of 200 pixels",
                "isAnswerKey": true
            },
            {
                "description": "Displays an image with a height of 200 pixels",
                "isAnswerKey": false
            },
            {
                "description": "Displays an image with a width of 100 pixels",
                "isAnswerKey": false
            },
            {
                "description": "Displays an image without specifying width",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "266",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following is the correct HTML syntax to make text bold?",
        "options": [
            {
                "description": "<b>Text</b>",
                "isAnswerKey": true
            },
            {
                "description": "<bold>Text</bold>",
                "isAnswerKey": false
            },
            {
                "description": "<strong-text>Text</strong-text>",
                "isAnswerKey": false
            },
            {
                "description": "<em>Text</em>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "267",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the HTML code below, which CSS style will change the background color of the paragraph to blue?\n\n```html\n<p id='text'>Sample Text</p>\n```\n",
        "options": [
            {
                "description": "#text { background-color: blue; }",
                "isAnswerKey": true
            },
            {
                "description": ".text { background-color: blue; }",
                "isAnswerKey": false
            },
            {
                "description": "text { background-color: blue; }",
                "isAnswerKey": false
            },
            {
                "description": "p text { background-color: blue; }",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "268",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which attribute is used to specify the URL of the page that the link goes to?",
        "options": [
            {
                "description": "href",
                "isAnswerKey": true
            },
            {
                "description": "src",
                "isAnswerKey": false
            },
            {
                "description": "link",
                "isAnswerKey": false
            },
            {
                "description": "url",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "269",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the <meta> tag in HTML?",
        "options": [
            {
                "description": "To provide metadata about the HTML document",
                "isAnswerKey": true
            },
            {
                "description": "To create a section in the document",
                "isAnswerKey": false
            },
            {
                "description": "To define the main content area",
                "isAnswerKey": false
            },
            {
                "description": "To apply styles to the document",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "270",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following HTML tags is used to display a horizontal line?",
        "options": [
            {
                "description": "<hr>",
                "isAnswerKey": true
            },
            {
                "description": "<line>",
                "isAnswerKey": false
            },
            {
                "description": "<hl>",
                "isAnswerKey": false
            },
            {
                "description": "<break>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "271",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "In the following HTML form, what will happen when the form is submitted?\n\n```html\n<form action='/submit' method='get'>\n  <input type='text' name='username'>\n  <input type='submit' value='Submit'>\n</form>\n```\n",
        "options": [
            {
                "description": "Data will be sent to '/submit' using GET method",
                "isAnswerKey": true
            },
            {
                "description": "Data will be sent to '/submit' using POST method",
                "isAnswerKey": false
            },
            {
                "description": "Data will be stored locally",
                "isAnswerKey": false
            },
            {
                "description": "An error occurs because of missing enctype",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "272",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the purpose of the <label> tag in HTML forms?",
        "options": [
            {
                "description": "To define a label for an <input> element",
                "isAnswerKey": true
            },
            {
                "description": "To create a tooltip",
                "isAnswerKey": false
            },
            {
                "description": "To apply styles to form elements",
                "isAnswerKey": false
            },
            {
                "description": "To denote a form section",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "273",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Consider the following HTML code:\n\n```html\n<select id='cars'>\n  <option value='volvo'>Volvo</option>\n  <option value='saab'>Saab</option>\n  <option value='mercedes'>Mercedes</option>\n</select>\n```\nWhat is the value of the first option?",
        "options": [
            {
                "description": "volvo",
                "isAnswerKey": true
            },
            {
                "description": "Volvo",
                "isAnswerKey": false
            },
            {
                "description": "cars",
                "isAnswerKey": false
            },
            {
                "description": "option",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "274",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you create a text input field that is not editable?",
        "options": [
            {
                "description": "<input type='text' readonly>",
                "isAnswerKey": true
            },
            {
                "description": "<input type='text' disabled>",
                "isAnswerKey": false
            },
            {
                "description": "<input type='text' locked>",
                "isAnswerKey": false
            },
            {
                "description": "<input type='text' static>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "275",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How do you create a drop-down list in HTML?",
        "options": [
            {
                "description": "<select>",
                "isAnswerKey": true
            },
            {
                "description": "<dropdown>",
                "isAnswerKey": false
            },
            {
                "description": "<list>",
                "isAnswerKey": false
            },
            {
                "description": "<menu>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "276",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following HTML code, what will be the output in the browser?\n\n```html\n<button onclick=\"alert('Hello')\">Click me</button>\n```",
        "options": [
            {
                "description": "A button that shows an alert with 'Hello' when clicked",
                "isAnswerKey": true
            },
            {
                "description": "A button that shows an alert with 'Click me' when clicked",
                "isAnswerKey": false
            },
            {
                "description": "No output, because of missing event listener",
                "isAnswerKey": false
            },
            {
                "description": "An error due to missing semicolon",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "277",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What does the 'checked' attribute do when applied to an input of type checkbox?",
        "options": [
            {
                "description": "Sets the checkbox as selected by default",
                "isAnswerKey": true
            },
            {
                "description": "Disables the checkbox",
                "isAnswerKey": false
            },
            {
                "description": "Hides the checkbox",
                "isAnswerKey": false
            },
            {
                "description": "Changes the checkbox to a radio button",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "278",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which HTML attribute is used to define inline styles?",
        "options": [
            {
                "description": "style",
                "isAnswerKey": true
            },
            {
                "description": "class",
                "isAnswerKey": false
            },
            {
                "description": "styles",
                "isAnswerKey": false
            },
            {
                "description": "css",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "279",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the correct HTML for creating a hyperlink?",
        "options": [
            {
                "description": "<a href='url'>Text</a>",
                "isAnswerKey": true
            },
            {
                "description": "<a url='url'>Text</a>",
                "isAnswerKey": false
            },
            {
                "description": "<link href='url'>Text</link>",
                "isAnswerKey": false
            },
            {
                "description": "<link url='url'>Text</link>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "280",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which HTML tag is used to define a table header?",
        "options": [
            {
                "description": "<th>",
                "isAnswerKey": true
            },
            {
                "description": "<header>",
                "isAnswerKey": false
            },
            {
                "description": "<thead>",
                "isAnswerKey": false
            },
            {
                "description": "<tr>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "281",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the error in the following HTML snippet?\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Page Title</title>\n</head>\n<body>\n<h1>This is a Heading</h2>\n<p>This is a paragraph.</p>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "<h1> tag is not properly closed",
                "isAnswerKey": true
            },
            {
                "description": "<head> tag is not properly closed",
                "isAnswerKey": false
            },
            {
                "description": "<title> should be inside <body>",
                "isAnswerKey": false
            },
            {
                "description": "Missing <meta> tag in <head>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "282",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How would you modify this HTML to ensure the image displays even if the source is incorrect?\n\n```html\n<img src='nonexistent.jpg'>\n```",
        "options": [
            {
                "description": "Add an alt attribute to describe the image",
                "isAnswerKey": true
            },
            {
                "description": "Add a fallback attribute",
                "isAnswerKey": false
            },
            {
                "description": "Add a caption tag",
                "isAnswerKey": false
            },
            {
                "description": "Add a default attribute",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "283",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In the following code, why might the form data not be sent when the form is submitted?\n\n```html\n<form action='/submit' method='post'>\n  <input type='text' id='name'>\n  <input type='submit' value='Submit'>\n</form>\n```",
        "options": [
            {
                "description": "The input field is missing the 'name' attribute",
                "isAnswerKey": true
            },
            {
                "description": "The form tag is missing the 'enctype' attribute",
                "isAnswerKey": false
            },
            {
                "description": "The submit button is missing the 'type' attribute",
                "isAnswerKey": false
            },
            {
                "description": "The form method should be 'get'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "284",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is wrong with the following HTML form?\n\n```html\n<form action='/submit'>\n  <input type='text' name='username'>\n  <button type='submit'>Submit</button>\n</form>\n```",
        "options": [
            {
                "description": "The method attribute is missing",
                "isAnswerKey": true
            },
            {
                "description": "The submit button should be outside the form",
                "isAnswerKey": false
            },
            {
                "description": "The input field should be of type 'password'",
                "isAnswerKey": false
            },
            {
                "description": "The form should have enctype='multipart/form-data'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "285",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In the following HTML, what will happen if the JavaScript code is executed?\n\n```html\n<p id='demo'>Before</p>\n<script>\nfunction changeText() {\n  document.getElementById('demo').innerText = 'After';\n}\nchangeText();\n</script>\n```",
        "options": [
            {
                "description": "The paragraph text will change to 'After'",
                "isAnswerKey": true
            },
            {
                "description": "An error will occur because 'demo' is not defined",
                "isAnswerKey": false
            },
            {
                "description": "The paragraph text will remain 'Before'",
                "isAnswerKey": false
            },
            {
                "description": "The paragraph will disappear",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "286",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What mistake exists in the following HTML table structure?\n\n```html\n<table>\n  <tr><th>Header1</th><th>Header2</th></tr>\n  <tr><td>Row1 Col1</th><td>Row1 Col2</th></tr>\n</table>\n```",
        "options": [
            {
                "description": "Table data cells are using <th> instead of <td>",
                "isAnswerKey": true
            },
            {
                "description": "Table header cells should be in a separate row",
                "isAnswerKey": false
            },
            {
                "description": "Table is missing a closing </tr> tag",
                "isAnswerKey": false
            },
            {
                "description": "Table should not have more than two columns",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "287",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In the following HTML, what will happen when the button is clicked?\n\n```html\n<button onclick='showAlert()'>Click me</button>\n<script>\nfunction showAlert() {\n  alert('Button clicked!');\n}\n</script>\n```",
        "options": [
            {
                "description": "An alert displaying 'Button clicked!' will appear",
                "isAnswerKey": true
            },
            {
                "description": "No action will occur",
                "isAnswerKey": false
            },
            {
                "description": "An error will be thrown",
                "isAnswerKey": false
            },
            {
                "description": "The button will change its text",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "288",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the issue with this HTML snippet?\n\n```html\n<a href='www.example.com'>Visit Example</a>\n```",
        "options": [
            {
                "description": "The URL is missing the 'http://' or 'https://'",
                "isAnswerKey": true
            },
            {
                "description": "The anchor tag should have a 'target' attribute",
                "isAnswerKey": false
            },
            {
                "description": "'www.example.com' is not a valid domain",
                "isAnswerKey": false
            },
            {
                "description": "The anchor text should match the URL",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "289",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What will the following HTML render?\n\n```html\n<!DOCTYPE html>\n<html>\n<body>\n<div style='display: none;'>Hidden Text</div>\n<span>Visible Text</span>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "Only 'Visible Text' will be displayed",
                "isAnswerKey": true
            },
            {
                "description": "Both 'Hidden Text' and 'Visible Text' will be displayed",
                "isAnswerKey": false
            },
            {
                "description": "Neither text will be displayed",
                "isAnswerKey": false
            },
            {
                "description": "Only 'Hidden Text' will be displayed",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "290",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which part of the following HTML document is incorrect?\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Test Page</title>\n</head>\n<body>\n<h1>Welcome</h1>\n<p>Paragraph</p>\n<body>\n</html>\n```",
        "options": [
            {
                "description": "The second <body> tag is incorrect",
                "isAnswerKey": true
            },
            {
                "description": "The <head> tag should be closed after <body>",
                "isAnswerKey": false
            },
            {
                "description": "<!DOCTYPE html> is not necessary",
                "isAnswerKey": false
            },
            {
                "description": "The <p> tag must be inside a <div>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "291",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output of the following HTML and JavaScript code?\n\n```html\n<div id='container'>\n  <p id='text'>Hello</p>\n</div>\n<script>\nfunction changeContent() {\n  var element = document.getElementById('text');\n  element.innerHTML = 'Goodbye';\n}\nchangeContent();\n</script>\n```",
        "options": [
            {
                "description": "The paragraph text will change to 'Goodbye'",
                "isAnswerKey": true
            },
            {
                "description": "The paragraph text will remain 'Hello'",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur because 'text' is not defined",
                "isAnswerKey": false
            },
            {
                "description": "The paragraph will disappear",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "292",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Analyze the code and predict the outcome.\n\n```html\n<ul>\n  <li>Apple</li>\n  <li>Banana</li>\n  <li>Cherry</li>\n</ul>\n<script>\nvar listItems = document.querySelectorAll('li');\nlistItems.forEach(function(item) {\n  item.textContent = 'Fruit';\n});\n</script>\n```",
        "options": [
            {
                "description": "All list items will display 'Fruit'",
                "isAnswerKey": true
            },
            {
                "description": "Only the first list item will change to 'Fruit'",
                "isAnswerKey": false
            },
            {
                "description": "The list will remain unchanged",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur because 'forEach' is not a function",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "293",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will happen when you load the following HTML page?\n\n```html\n<!DOCTYPE html>\n<html>\n<body>\n<p id='demo'></p>\n<script>\ndocument.getElementById('demo').innerText = 'Hello, World!';\n</script>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "The paragraph will display 'Hello, World!'",
                "isAnswerKey": true
            },
            {
                "description": "The paragraph will remain empty",
                "isAnswerKey": false
            },
            {
                "description": "An error due to missing <head> tag will occur",
                "isAnswerKey": false
            },
            {
                "description": "The script will not execute",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "294",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Examine the code and determine the behavior of the button.\n\n```html\n<button id='myButton'>Click me</button>\n<script>\ndocument.getElementById('myButton').onclick = function() {\n  alert('Button clicked!');\n}\n</script>\n```",
        "options": [
            {
                "description": "An alert 'Button clicked!' will appear when clicked",
                "isAnswerKey": true
            },
            {
                "description": "The button text will change",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur because 'onclick' is not defined",
                "isAnswerKey": false
            },
            {
                "description": "No action will occur",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "295",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Predict the result when you execute the following code:\n\n```html\n<!DOCTYPE html>\n<html>\n<body>\n<div class='myClass'>Element 1</div>\n<div class='myClass'>Element 2</div>\n<script>\nvar elements = document.getElementsByClassName('myClass');\nelements[0].style.color = 'red';\n</script>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "The first element will have red text",
                "isAnswerKey": true
            },
            {
                "description": "Both elements will have red text",
                "isAnswerKey": false
            },
            {
                "description": "Neither element will change color",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to missing elements",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "296",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the effect of the following HTML and CSS?\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<style>\n.hidden { display: none; }\n</style>\n</head>\n<body>\n<p class='hidden'>This should not be visible</p>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "The paragraph will not be displayed",
                "isAnswerKey": true
            },
            {
                "description": "The paragraph will be visible",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to missing JavaScript",
                "isAnswerKey": false
            },
            {
                "description": "The paragraph will be visible but hidden on click",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "297",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Analyze the following code and determine what will be displayed:\n\n```html\n<!DOCTYPE html>\n<html>\n<body>\n<div id='outer'>\n  <div id='inner'>\n    <p>Inside</p>\n  </div>\n</div>\n<script>\ndocument.getElementById('outer').style.backgroundColor = 'yellow';\n</script>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "Both 'outer' and 'inner' divs will have yellow background",
                "isAnswerKey": true
            },
            {
                "description": "Only 'outer' div will have yellow background",
                "isAnswerKey": false
            },
            {
                "description": "Only 'inner' div will have yellow background",
                "isAnswerKey": false
            },
            {
                "description": "No background color will be applied",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "298",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will the browser display when this HTML is executed?\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Test</title>\n</head>\n<body>\n<h1>First Header</h1>\n<h1>Second Header</h1>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "Two headers, each on a new line",
                "isAnswerKey": true
            },
            {
                "description": "A single header with both texts",
                "isAnswerKey": false
            },
            {
                "description": "An error due to duplicate <h1> tags",
                "isAnswerKey": false
            },
            {
                "description": "Only the second header will display",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "299",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Given the following HTML, what does the script accomplish?\n\n```html\n<button id='btn'>Press</button>\n<p id='text'>Original Text</p>\n<script>\ndocument.getElementById('btn').onclick = function() {\n  document.getElementById('text').textContent = 'Changed Text';\n};\n</script>\n```",
        "options": [
            {
                "description": "Changes paragraph text to 'Changed Text' on button click",
                "isAnswerKey": true
            },
            {
                "description": "Hides paragraph when button is clicked",
                "isAnswerKey": false
            },
            {
                "description": "Displays an alert with 'Changed Text'",
                "isAnswerKey": false
            },
            {
                "description": "No effect occurs",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "300",
        "skill": "html",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the output of the following HTML and JavaScript code when the page is loaded?\n\n```html\n<!DOCTYPE html>\n<html>\n<body>\n<div id='message'>Hello!</div>\n<script>\ndocument.getElementById('message').style.display = 'none';\n</script>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "The 'message' div will not be visible",
                "isAnswerKey": true
            },
            {
                "description": "The 'message' div will display 'none'",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur because 'message' is not defined",
                "isAnswerKey": false
            },
            {
                "description": "The 'message' div will be visible",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "301",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML element is used to define the most important heading?",
        "options": [
            {
                "description": "<h1>",
                "isAnswerKey": true
            },
            {
                "description": "<head>",
                "isAnswerKey": false
            },
            {
                "description": "<header>",
                "isAnswerKey": false
            },
            {
                "description": "<h6>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "302",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which attribute is used to specify a unique CSS style for a single HTML element?",
        "options": [
            {
                "description": "class",
                "isAnswerKey": false
            },
            {
                "description": "id",
                "isAnswerKey": true
            },
            {
                "description": "style",
                "isAnswerKey": false
            },
            {
                "description": "css",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "303",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML element defines the title of a document?",
        "options": [
            {
                "description": "<meta>",
                "isAnswerKey": false
            },
            {
                "description": "<title>",
                "isAnswerKey": true
            },
            {
                "description": "<link>",
                "isAnswerKey": false
            },
            {
                "description": "<head>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "304",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which attribute is used in HTML to specify the URL of a linked document?",
        "options": [
            {
                "description": "src",
                "isAnswerKey": false
            },
            {
                "description": "href",
                "isAnswerKey": true
            },
            {
                "description": "link",
                "isAnswerKey": false
            },
            {
                "description": "url",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "305",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML attribute specifies an alternate text for an image, if the image cannot be displayed?",
        "options": [
            {
                "description": "alt",
                "isAnswerKey": true
            },
            {
                "description": "title",
                "isAnswerKey": false
            },
            {
                "description": "src",
                "isAnswerKey": false
            },
            {
                "description": "longdesc",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "306",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML element is used to specify a footer for a document or section?",
        "options": [
            {
                "description": "<footer>",
                "isAnswerKey": true
            },
            {
                "description": "<foot>",
                "isAnswerKey": false
            },
            {
                "description": "<bottom>",
                "isAnswerKey": false
            },
            {
                "description": "<section>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "307",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which element is used to create a list item in an ordered list?",
        "options": [
            {
                "description": "<li>",
                "isAnswerKey": true
            },
            {
                "description": "<ol>",
                "isAnswerKey": false
            },
            {
                "description": "<ul>",
                "isAnswerKey": false
            },
            {
                "description": "<item>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "308",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML element is used to define navigation links?",
        "options": [
            {
                "description": "<nav>",
                "isAnswerKey": true
            },
            {
                "description": "<navigation>",
                "isAnswerKey": false
            },
            {
                "description": "<links>",
                "isAnswerKey": false
            },
            {
                "description": "<menu>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "309",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which attribute is used to open a link in a new tab or window?",
        "options": [
            {
                "description": "target='_blank'",
                "isAnswerKey": true
            },
            {
                "description": "newtab='true'",
                "isAnswerKey": false
            },
            {
                "description": "open='new'",
                "isAnswerKey": false
            },
            {
                "description": "window='new'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "310",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML element is used to embed a video into a webpage?",
        "options": [
            {
                "description": "<embed>",
                "isAnswerKey": false
            },
            {
                "description": "<video>",
                "isAnswerKey": true
            },
            {
                "description": "<movie>",
                "isAnswerKey": false
            },
            {
                "description": "<media>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "311",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Consider the following HTML snippet. What is the purpose of the 'lang' attribute in the <html> tag?\n\n```html\n<html lang=\"en\">\n  <head>\n    <title>Document</title>\n  </head>\n</html>\n```\n",
        "options": [
            {
                "description": "Specifies the language of the document's content",
                "isAnswerKey": true
            },
            {
                "description": "Defines the language for the browser interface",
                "isAnswerKey": false
            },
            {
                "description": "Sets the default language for user inputs",
                "isAnswerKey": false
            },
            {
                "description": "Determines the language for system messages",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "312",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Analyze this HTML code snippet. What will be displayed in the browser?\n\n```html\n<p>This is a <strong>strong</strong> word in a sentence.</p>\n```\n",
        "options": [
            {
                "description": "This is a strong word in a sentence.",
                "isAnswerKey": true
            },
            {
                "description": "This is a <strong>strong</strong> word in a sentence.",
                "isAnswerKey": false
            },
            {
                "description": "This is a strong sentence.",
                "isAnswerKey": false
            },
            {
                "description": "<p>This is a strong word in a sentence.</p>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "313",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the effect of the 'pre' HTML tag on the following text?\n\n```html\n<pre>\n  Line one\n  Line two\n</pre>\n```\n",
        "options": [
            {
                "description": "Preserves whitespace and line breaks",
                "isAnswerKey": true
            },
            {
                "description": "Removes whitespace but preserves line breaks",
                "isAnswerKey": false
            },
            {
                "description": "Ignores line breaks and whitespace",
                "isAnswerKey": false
            },
            {
                "description": "Converts text to monospace font without preserving whitespace",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "314",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the primary function of the 'meta' tag with 'charset' attribute in HTML?",
        "options": [
            {
                "description": "Defines the character encoding for the document",
                "isAnswerKey": true
            },
            {
                "description": "Specifies meta data for search engines",
                "isAnswerKey": false
            },
            {
                "description": "Links external stylesheets",
                "isAnswerKey": false
            },
            {
                "description": "Embeds meta tags into the document body",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "315",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What does the 'placeholder' attribute do in an input element?\n\n```html\n<input type=\"text\" placeholder=\"Enter your name\">\n```\n",
        "options": [
            {
                "description": "Provides a hint to the user of what can be entered",
                "isAnswerKey": true
            },
            {
                "description": "Specifies the default input value",
                "isAnswerKey": false
            },
            {
                "description": "Sets the maximum length of input",
                "isAnswerKey": false
            },
            {
                "description": "Displays a tooltip when hovering over the input",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "316",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "In the context of HTML forms, what is the purpose of the 'action' attribute in the form tag?\n\n```html\n<form action=\"/submit\">\n  <!-- Form elements -->\n</form>\n```\n",
        "options": [
            {
                "description": "Specifies the URL to send form data to",
                "isAnswerKey": true
            },
            {
                "description": "Defines the HTTP method for form submission",
                "isAnswerKey": false
            },
            {
                "description": "Sets the encoding type for form data",
                "isAnswerKey": false
            },
            {
                "description": "Determines the target window for form results",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "317",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the role of the 'colspan' attribute in an HTML table?\n\n```html\n<td colspan=\"2\">Merged Cell</td>\n```",
        "options": [
            {
                "description": "Specifies that a cell should span across multiple columns",
                "isAnswerKey": true
            },
            {
                "description": "Defines the number of rows a cell should span",
                "isAnswerKey": false
            },
            {
                "description": "Combines multiple rows into a single cell",
                "isAnswerKey": false
            },
            {
                "description": "Aligns the cell content to the center",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "318",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the main purpose of the 'figure' and 'figcaption' elements in HTML?",
        "options": [
            {
                "description": "To associate a caption with a figure",
                "isAnswerKey": true
            },
            {
                "description": "To create an image gallery",
                "isAnswerKey": false
            },
            {
                "description": "To format images in a table-like structure",
                "isAnswerKey": false
            },
            {
                "description": "To add a title to any image",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "319",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which HTML element is used to display a scalar measurement within a known range?",
        "options": [
            {
                "description": "<meter>",
                "isAnswerKey": true
            },
            {
                "description": "<progress>",
                "isAnswerKey": false
            },
            {
                "description": "<range>",
                "isAnswerKey": false
            },
            {
                "description": "<value>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "320",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What does the 'defer' attribute do when used in a <script> tag?\n\n```html\n<script src=\"script.js\" defer></script>\n```",
        "options": [
            {
                "description": "Delays script execution until HTML parsing is complete",
                "isAnswerKey": true
            },
            {
                "description": "Executes the script as soon as it is downloaded",
                "isAnswerKey": false
            },
            {
                "description": "Loads the script without executing it",
                "isAnswerKey": false
            },
            {
                "description": "Defers script execution until all images are loaded",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "321",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following HTML snippet, what will be the value of the input field after the page is loaded?\n\n```html\n<input type=\"text\" value=\"Hello\" disabled>\n```\n",
        "options": [
            {
                "description": "Hello",
                "isAnswerKey": true
            },
            {
                "description": "",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "null",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "322",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Examine the following HTML and CSS. What color will the paragraph text be?\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<style>\np { color: blue; }\n#special { color: red; }\n</style>\n</head>\n<body>\n<p id=\"special\">Hello World</p>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "red",
                "isAnswerKey": true
            },
            {
                "description": "blue",
                "isAnswerKey": false
            },
            {
                "description": "black",
                "isAnswerKey": false
            },
            {
                "description": "green",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "323",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will happen if you use the following HTML code?\n\n```html\n<form>\n  <input type=\"submit\" formaction=\"/submit\">\n</form>\n```",
        "options": [
            {
                "description": "Form will be submitted to '/submit'",
                "isAnswerKey": true
            },
            {
                "description": "Form data will not be sent anywhere",
                "isAnswerKey": false
            },
            {
                "description": "An error will be thrown when submitting",
                "isAnswerKey": false
            },
            {
                "description": "Nothing will happen on clicking submit",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "324",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "How will the browser handle the following HTML snippet?\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Page Title</title>\n  </head>\n  <body>\n    <h1>Main Heading</h1>\n    <p>This is a paragraph.</p>\n    <h1>Another Heading</h1>\n    <p>This is another paragraph.</p>\n  </body>\n</html>\n```",
        "options": [
            {
                "description": "Render two headings and two paragraphs",
                "isAnswerKey": true
            },
            {
                "description": "Only render the first heading and paragraph",
                "isAnswerKey": false
            },
            {
                "description": "Render nothing due to HTML error",
                "isAnswerKey": false
            },
            {
                "description": "Render headings as paragraphs",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "325",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will the following HTML code output?\n\n```html\n<ul>\n  <li>First item</li>\n  <li>Second item</li>\n  <li>Third item</li>\n</ul>\n```",
        "options": [
            {
                "description": "A bulleted list with three items",
                "isAnswerKey": true
            },
            {
                "description": "A numbered list with three items",
                "isAnswerKey": false
            },
            {
                "description": "A list with no bullets",
                "isAnswerKey": false
            },
            {
                "description": "A list with only the first item",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "326",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "How does the browser interpret the following HTML code?\n\n```html\n<input type=\"radio\" name=\"choice\" value=\"A\">\n<input type=\"radio\" name=\"choice\" value=\"B\">\n```",
        "options": [
            {
                "description": "Creates a group of radio buttons",
                "isAnswerKey": true
            },
            {
                "description": "Creates two independent radio buttons",
                "isAnswerKey": false
            },
            {
                "description": "Throws an error due to missing label",
                "isAnswerKey": false
            },
            {
                "description": "Creates checkboxes instead of radio buttons",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "327",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the result of the following HTML snippet in a browser?\n\n```html\n<table>\n  <tr>\n    <td>Row 1, Cell 1</td>\n    <td>Row 1, Cell 2</td>\n  </tr>\n  <tr>\n    <td>Row 2, Cell 1</td>\n    <td>Row 2, Cell 2</td>\n  </tr>\n</table>\n```",
        "options": [
            {
                "description": "A table with two rows and two columns",
                "isAnswerKey": true
            },
            {
                "description": "A table with four rows and one column",
                "isAnswerKey": false
            },
            {
                "description": "A single row with four cells",
                "isAnswerKey": false
            },
            {
                "description": "An error due to missing <th> elements",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "328",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following HTML and CSS, what background color will the div have?\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<style>\ndiv { background-color: yellow; }\n#unique { background-color: green; }\n</style>\n</head>\n<body>\n<div id=\"unique\">Content</div>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "green",
                "isAnswerKey": true
            },
            {
                "description": "yellow",
                "isAnswerKey": false
            },
            {
                "description": "blue",
                "isAnswerKey": false
            },
            {
                "description": "white",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "329",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the effect of the following HTML code?\n\n```html\n<img src=\"image.jpg\" alt=\"A beautiful scenery\" width=\"200\" height=\"100\">\n```",
        "options": [
            {
                "description": "Displays an image with specified width and height",
                "isAnswerKey": true
            },
            {
                "description": "Does not display due to missing title attribute",
                "isAnswerKey": false
            },
            {
                "description": "Throws an error due to missing alt text",
                "isAnswerKey": false
            },
            {
                "description": "Displays image with default size",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "330",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the result of the following HTML when displayed in a browser?\n\n```html\n<button onclick=\"alert('Button clicked!')\">Click me</button>\n```",
        "options": [
            {
                "description": "Displays an alert 'Button clicked!' when pressed",
                "isAnswerKey": true
            },
            {
                "description": "Displays nothing as click events are not supported",
                "isAnswerKey": false
            },
            {
                "description": "Shows a message in the console log",
                "isAnswerKey": false
            },
            {
                "description": "Triggers a page reload on click",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "331",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the error in the following HTML snippet intended to create a hyperlink:\n\n```html\n<a href=\"http://example.com\" target=\"_blank\">Visit Example</a>\n```",
        "options": [
            {
                "description": "There is no error; the link works correctly",
                "isAnswerKey": true
            },
            {
                "description": "The 'href' attribute should be 'link'",
                "isAnswerKey": false
            },
            {
                "description": "The 'target' attribute is incorrectly used",
                "isAnswerKey": false
            },
            {
                "description": "Quotes should be removed around attribute values",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "332",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is wrong with the following HTML code?\n\n```html\n<form>\n  <input type=\"text\" name=\"username\">\n  <input type=\"submit\" value=\"Submit\">\n</form>\n```",
        "options": [
            {
                "description": "There is no error; the form will work correctly",
                "isAnswerKey": true
            },
            {
                "description": "The 'name' attribute is missing for the submit button",
                "isAnswerKey": false
            },
            {
                "description": "The form tag is missing the 'action' attribute",
                "isAnswerKey": false
            },
            {
                "description": "The input type for the submit button should be 'button'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "333",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Analyze the following HTML code. What will be the default display of the 'span' element?\n\n```html\n<div>\n  <span>This is a span inside a div.</span>\n</div>\n```",
        "options": [
            {
                "description": "Inline",
                "isAnswerKey": true
            },
            {
                "description": "Block",
                "isAnswerKey": false
            },
            {
                "description": "Flex",
                "isAnswerKey": false
            },
            {
                "description": "Grid",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "334",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the purpose of the 'aria-label' attribute in the following HTML element?\n\n```html\n<button aria-label=\"Submit the form\">Submit</button>\n```",
        "options": [
            {
                "description": "Provides an accessible label for screen readers",
                "isAnswerKey": true
            },
            {
                "description": "Sets a default label for the button",
                "isAnswerKey": false
            },
            {
                "description": "Creates a tooltip when hovered over",
                "isAnswerKey": false
            },
            {
                "description": "Assigns a unique ID to the button",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "335",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the expected behavior of the following HTML tag?\n\n```html\n<a href=\"#section\">Go to Section</a>\n<div id=\"section\">This is the target section.</div>\n```",
        "options": [
            {
                "description": "Scrolls to the section with id 'section'",
                "isAnswerKey": true
            },
            {
                "description": "Redirects to a new page with URL '#section'",
                "isAnswerKey": false
            },
            {
                "description": "Opens a new tab with '#section' as the title",
                "isAnswerKey": false
            },
            {
                "description": "Does nothing as '#' is not a valid URL",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "336",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What will happen if the following HTML code is used?\n\n```html\n<img src=\"image.jpg\" alt=\"\">\n```",
        "options": [
            {
                "description": "Image will be displayed with no alternate text",
                "isAnswerKey": true
            },
            {
                "description": "Image will not load due to missing alt text",
                "isAnswerKey": false
            },
            {
                "description": "Image will display with default alt text",
                "isAnswerKey": false
            },
            {
                "description": "An error will be thrown due to empty alt attribute",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "337",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the effect of using the 'hidden' attribute in an HTML element?\n\n```html\n<div hidden>Content</div>\n```",
        "options": [
            {
                "description": "The element will not be visible or take up space",
                "isAnswerKey": true
            },
            {
                "description": "The element will be visible but transparent",
                "isAnswerKey": false
            },
            {
                "description": "The element will take up space but not be visible",
                "isAnswerKey": false
            },
            {
                "description": "The element will be visible but disabled",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "338",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the default behavior of the 'button' element in the following code?\n\n```html\n<button>Click Me</button>\n```",
        "options": [
            {
                "description": "Acts as a submit button in a form",
                "isAnswerKey": true
            },
            {
                "description": "Acts as a reset button in a form",
                "isAnswerKey": false
            },
            {
                "description": "Acts as a link to a new page",
                "isAnswerKey": false
            },
            {
                "description": "Does nothing unless specified",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "339",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What will be the result of using the following HTML and CSS?\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<style>\ndiv { display: none; }\n</style>\n</head>\n<body>\n<div>This text is hidden.</div>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "The text will not be visible on the page",
                "isAnswerKey": true
            },
            {
                "description": "The text will be visible but not selectable",
                "isAnswerKey": false
            },
            {
                "description": "The text will be visible and selectable",
                "isAnswerKey": false
            },
            {
                "description": "The text will be visible with a warning message",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "340",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What does the 'autofocus' attribute do in an input element?\n\n```html\n<input type=\"text\" autofocus>\n```",
        "options": [
            {
                "description": "Automatically focuses the input field on page load",
                "isAnswerKey": true
            },
            {
                "description": "Highlights the input field when clicked",
                "isAnswerKey": false
            },
            {
                "description": "Makes the input field read-only",
                "isAnswerKey": false
            },
            {
                "description": "Triggers a form submission on focus",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "341",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output of the following HTML snippet with embedded JavaScript?\n\n```html\n<!DOCTYPE html>\n<html>\n<body>\n<script>\ndocument.write('Hello, World!');\n</script>\n<p>This is a paragraph.</p>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "Hello, World! followed by a paragraph",
                "isAnswerKey": true
            },
            {
                "description": "A paragraph only",
                "isAnswerKey": false
            },
            {
                "description": "Hello, World! only, no paragraph",
                "isAnswerKey": false
            },
            {
                "description": "An error due to script before paragraph",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "342",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Consider the following HTML snippet. What will the 'title' attribute do?\n\n```html\n<img src=\"dog.jpg\" title=\"This is a dog\">\n```",
        "options": [
            {
                "description": "Displays a tooltip on hover",
                "isAnswerKey": true
            },
            {
                "description": "Sets the alt text for the image",
                "isAnswerKey": false
            },
            {
                "description": "Displays the image title below the image",
                "isAnswerKey": false
            },
            {
                "description": "Defines the image description for screen readers",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "343",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the result of the following HTML snippet with CSS?\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<style>\n.hidden { display: none; }\n</style>\n</head>\n<body>\n<p class=\"hidden\">This will not be shown.</p>\n<p>This will be shown.</p>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "Only the second paragraph is visible",
                "isAnswerKey": true
            },
            {
                "description": "Both paragraphs are visible",
                "isAnswerKey": false
            },
            {
                "description": "Neither paragraph is visible",
                "isAnswerKey": false
            },
            {
                "description": "An error will occur due to CSS",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "344",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Analyze the following HTML code. What is the default behavior of the 'input' element with type 'password'?\n\n```html\n<input type=\"password\">\n```",
        "options": [
            {
                "description": "Hides the entered text and displays dots or asterisks",
                "isAnswerKey": true
            },
            {
                "description": "Shows entered text as plain text",
                "isAnswerKey": false
            },
            {
                "description": "Encrypts the entered text",
                "isAnswerKey": false
            },
            {
                "description": "Generates a random password on focus",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "345",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will the following HTML code do when executed?\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Test Page</title>\n</head>\n<body>\n  <audio controls>\n    <source src=\"audio.mp3\" type=\"audio/mpeg\">\n    Your browser does not support the audio element.\n  </audio>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "Displays an audio player for audio.mp3",
                "isAnswerKey": true
            },
            {
                "description": "Displays a message about unsupported audio",
                "isAnswerKey": false
            },
            {
                "description": "Plays audio automatically on page load",
                "isAnswerKey": false
            },
            {
                "description": "Throws an error due to missing audio file",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "346",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What does the 'contenteditable' attribute do in an HTML element?\n\n```html\n<div contenteditable=\"true\">Edit me!</div>\n```",
        "options": [
            {
                "description": "Allows the user to edit the content directly in the browser",
                "isAnswerKey": true
            },
            {
                "description": "Makes the content read-only",
                "isAnswerKey": false
            },
            {
                "description": "Hides the content from view",
                "isAnswerKey": false
            },
            {
                "description": "Marks the content for translation",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "347",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will happen when the following HTML code is loaded in a browser?\n\n```html\n<iframe src=\"https://example.com\"></iframe>\n```",
        "options": [
            {
                "description": "Displays the page from 'example.com' within the iframe",
                "isAnswerKey": true
            },
            {
                "description": "Redirects the parent page to 'example.com'",
                "isAnswerKey": false
            },
            {
                "description": "Throws an error due to cross-origin restrictions",
                "isAnswerKey": false
            },
            {
                "description": "Doesn't display anything as iframes are deprecated",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "348",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the function of the 'noresize' attribute in the following HTML tag?\n\n```html\n<frameset cols=\"50%,50%\" noresize>\n  <frame src=\"frame_a.htm\">\n  <frame src=\"frame_b.htm\">\n</frameset>\n```",
        "options": [
            {
                "description": "Prevents the frames from being resized by the user",
                "isAnswerKey": true
            },
            {
                "description": "Makes the frames invisible",
                "isAnswerKey": false
            },
            {
                "description": "Aligns the frames to the center",
                "isAnswerKey": false
            },
            {
                "description": "Allows the frames to be resized by default",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "349",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which HTML element is used for displaying computer code or a programming example?",
        "options": [
            {
                "description": "<code>",
                "isAnswerKey": true
            },
            {
                "description": "<pre>",
                "isAnswerKey": false
            },
            {
                "description": "<samp>",
                "isAnswerKey": false
            },
            {
                "description": "<kbd>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "350",
        "skill": "html",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the default behavior of the 'select' element in HTML?\n\n```html\n<select>\n  <option value=\"1\">Option 1</option>\n  <option value=\"2\">Option 2</option>\n</select>\n```",
        "options": [
            {
                "description": "Creates a dropdown menu",
                "isAnswerKey": true
            },
            {
                "description": "Creates a radio button group",
                "isAnswerKey": false
            },
            {
                "description": "Creates a multi-select list by default",
                "isAnswerKey": false
            },
            {
                "description": "Creates a text input with options",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "351",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML5 element is used to define navigation links?",
        "options": [
            {
                "description": "<nav>",
                "isAnswerKey": true
            },
            {
                "description": "<section>",
                "isAnswerKey": false
            },
            {
                "description": "<header>",
                "isAnswerKey": false
            },
            {
                "description": "<footer>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "352",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In HTML5, which attribute is used to specify that an input field must be filled out before submitting a form?",
        "options": [
            {
                "description": "required",
                "isAnswerKey": true
            },
            {
                "description": "validate",
                "isAnswerKey": false
            },
            {
                "description": "mandatory",
                "isAnswerKey": false
            },
            {
                "description": "needed",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "353",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the purpose of the <figure> tag in HTML5?",
        "options": [
            {
                "description": "To group media content with their captions",
                "isAnswerKey": true
            },
            {
                "description": "To display interactive content",
                "isAnswerKey": false
            },
            {
                "description": "To create a navigation bar",
                "isAnswerKey": false
            },
            {
                "description": "To define a section in a document",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "354",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML5 element is used to embed an external application, typically multimedia content?",
        "options": [
            {
                "description": "<embed>",
                "isAnswerKey": true
            },
            {
                "description": "<object>",
                "isAnswerKey": false
            },
            {
                "description": "<iframe>",
                "isAnswerKey": false
            },
            {
                "description": "<applet>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "355",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following elements is used to create a dropdown list in HTML?",
        "options": [
            {
                "description": "<select>",
                "isAnswerKey": true
            },
            {
                "description": "<dropdown>",
                "isAnswerKey": false
            },
            {
                "description": "<choice>",
                "isAnswerKey": false
            },
            {
                "description": "<list>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "356",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "How can you create a hyperlink that opens in a new tab?",
        "options": [
            {
                "description": "<a href='url' target='_blank'>Link</a>",
                "isAnswerKey": true
            },
            {
                "description": "<a href='url' newtab='true'>Link</a>",
                "isAnswerKey": false
            },
            {
                "description": "<a href='url' open='new'>Link</a>",
                "isAnswerKey": false
            },
            {
                "description": "<a href='url' target='newtab'>Link</a>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "357",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which attribute is used to specify the URL of an image in HTML?",
        "options": [
            {
                "description": "src",
                "isAnswerKey": true
            },
            {
                "description": "href",
                "isAnswerKey": false
            },
            {
                "description": "link",
                "isAnswerKey": false
            },
            {
                "description": "url",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "358",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which doctype declaration is correct for HTML5?",
        "options": [
            {
                "description": "<!DOCTYPE html>",
                "isAnswerKey": true
            },
            {
                "description": "<!DOCTYPE HTML5>",
                "isAnswerKey": false
            },
            {
                "description": "<!DOCTYPE html5>",
                "isAnswerKey": false
            },
            {
                "description": "<!DOCTYPE HTML PUBLIC>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "359",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML attribute specifies an alternate text for an image, if the image cannot be displayed?",
        "options": [
            {
                "description": "alt",
                "isAnswerKey": true
            },
            {
                "description": "title",
                "isAnswerKey": false
            },
            {
                "description": "description",
                "isAnswerKey": false
            },
            {
                "description": "text",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "360",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which HTML element is used for specifying a header for a document or section?",
        "options": [
            {
                "description": "<header>",
                "isAnswerKey": true
            },
            {
                "description": "<head>",
                "isAnswerKey": false
            },
            {
                "description": "<heading>",
                "isAnswerKey": false
            },
            {
                "description": "<top>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "361",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Consider the following HTML code snippet. What is the result of rendering this in a browser?\n\n```html\n<ul>\n  <li>Item 1</li>\n  <li>Item 2\n    <ul>\n      <li>Sub Item 1</li>\n      <li>Sub Item 2</li>\n    </ul>\n  </li>\n  <li>Item 3</li>\n</ul>\n```\n",
        "options": [
            {
                "description": "A nested list with 'Item 2' containing a sublist.",
                "isAnswerKey": true
            },
            {
                "description": "A flat list with all items on the same level.",
                "isAnswerKey": false
            },
            {
                "description": "An invalid list due to improper nesting.",
                "isAnswerKey": false
            },
            {
                "description": "A list with 'Sub Item 1' and 'Sub Item 2' as top-level items.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "362",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following HTML elements can be used to create a multi-line text input field?",
        "options": [
            {
                "description": "<textarea>",
                "isAnswerKey": true
            },
            {
                "description": "<input type='text'>",
                "isAnswerKey": false
            },
            {
                "description": "<textbox>",
                "isAnswerKey": false
            },
            {
                "description": "<multiline>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "363",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the default type of the <button> element in HTML if the 'type' attribute is not specified?",
        "options": [
            {
                "description": "submit",
                "isAnswerKey": true
            },
            {
                "description": "button",
                "isAnswerKey": false
            },
            {
                "description": "reset",
                "isAnswerKey": false
            },
            {
                "description": "none",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "364",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which HTML5 element is used to define self-contained content, like a blog post?",
        "options": [
            {
                "description": "<article>",
                "isAnswerKey": true
            },
            {
                "description": "<section>",
                "isAnswerKey": false
            },
            {
                "description": "<div>",
                "isAnswerKey": false
            },
            {
                "description": "<aside>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "365",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Analyze the following snippet. What is the semantic meaning of using <aside>?\n\n```html\n<aside>\n  <h2>Related Content</h2>\n  <p>This is related to the main article.</p>\n</aside>\n```\n",
        "options": [
            {
                "description": "It signifies content tangentially related to the main content.",
                "isAnswerKey": true
            },
            {
                "description": "It is used for the main content of the document.",
                "isAnswerKey": false
            },
            {
                "description": "It is used for the footer content of the page.",
                "isAnswerKey": false
            },
            {
                "description": "It is used for navigation links.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "366",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the <mark> element in HTML?",
        "options": [
            {
                "description": "To highlight text for reference or emphasis.",
                "isAnswerKey": true
            },
            {
                "description": "To underline text.",
                "isAnswerKey": false
            },
            {
                "description": "To italicize text.",
                "isAnswerKey": false
            },
            {
                "description": "To create a hyperlink.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "367",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which attribute in HTML is used to specify an inline CSS style for an element?",
        "options": [
            {
                "description": "style",
                "isAnswerKey": true
            },
            {
                "description": "class",
                "isAnswerKey": false
            },
            {
                "description": "css",
                "isAnswerKey": false
            },
            {
                "description": "design",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "368",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "How do you specify a default value for an input field in HTML?",
        "options": [
            {
                "description": "Using the 'value' attribute",
                "isAnswerKey": true
            },
            {
                "description": "Using the 'default' attribute",
                "isAnswerKey": false
            },
            {
                "description": "Using the 'placeholder' attribute",
                "isAnswerKey": false
            },
            {
                "description": "Using the 'init' attribute",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "369",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which HTML element is used to define a client-side script, such as JavaScript?",
        "options": [
            {
                "description": "<script>",
                "isAnswerKey": true
            },
            {
                "description": "<code>",
                "isAnswerKey": false
            },
            {
                "description": "<js>",
                "isAnswerKey": false
            },
            {
                "description": "<program>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "370",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the function of the <meta> tag in HTML?",
        "options": [
            {
                "description": "To define metadata about an HTML document",
                "isAnswerKey": true
            },
            {
                "description": "To create a section in a document",
                "isAnswerKey": false
            },
            {
                "description": "To link to an external CSS file",
                "isAnswerKey": false
            },
            {
                "description": "To display an image",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "371",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following code snippet, which style will be applied to the paragraph?\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<style>\np { color: blue; }\n.red-text { color: red; }\n</style>\n</head>\n<body>\n<p class=\"red-text\">This is a paragraph.</p>\n</body>\n</html>\n```\n",
        "options": [
            {
                "description": "The paragraph will be red.",
                "isAnswerKey": true
            },
            {
                "description": "The paragraph will be blue.",
                "isAnswerKey": false
            },
            {
                "description": "The paragraph will be both blue and red.",
                "isAnswerKey": false
            },
            {
                "description": "The paragraph will have no color.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "372",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the effect of using the <b> tag in HTML?",
        "options": [
            {
                "description": "It makes text bold.",
                "isAnswerKey": true
            },
            {
                "description": "It makes text italic.",
                "isAnswerKey": false
            },
            {
                "description": "It underlines text.",
                "isAnswerKey": false
            },
            {
                "description": "It makes text larger.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "373",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will happen when you click on the link in this HTML snippet?\n\n```html\n<a href=\"#section2\">Go to Section 2</a>\n<div id=\"section1\">Section 1</div>\n<div id=\"section2\">Section 2</div>\n```",
        "options": [
            {
                "description": "It will scroll to Section 2 on the same page.",
                "isAnswerKey": true
            },
            {
                "description": "It will redirect to a new page named 'section2'.",
                "isAnswerKey": false
            },
            {
                "description": "It will not perform any action.",
                "isAnswerKey": false
            },
            {
                "description": "It will open 'section2' in a new tab.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "374",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which HTML5 input type should be used to select a date?",
        "options": [
            {
                "description": "date",
                "isAnswerKey": true
            },
            {
                "description": "datetime-local",
                "isAnswerKey": false
            },
            {
                "description": "calendar",
                "isAnswerKey": false
            },
            {
                "description": "time",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "375",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "In the following HTML code, what is the purpose of the <label> tag?\n\n```html\n<label for=\"name\">Name:</label>\n<input type=\"text\" id=\"name\" name=\"name\">\n```",
        "options": [
            {
                "description": "To associate a text label with the input element.",
                "isAnswerKey": true
            },
            {
                "description": "To make the input field required.",
                "isAnswerKey": false
            },
            {
                "description": "To style the input field.",
                "isAnswerKey": false
            },
            {
                "description": "To submit the form.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "376",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which attribute is used in HTML to define inline styles?",
        "options": [
            {
                "description": "style",
                "isAnswerKey": true
            },
            {
                "description": "class",
                "isAnswerKey": false
            },
            {
                "description": "id",
                "isAnswerKey": false
            },
            {
                "description": "css",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "377",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you create a comment in HTML?",
        "options": [
            {
                "description": "<!-- This is a comment -->",
                "isAnswerKey": true
            },
            {
                "description": "// This is a comment",
                "isAnswerKey": false
            },
            {
                "description": "# This is a comment",
                "isAnswerKey": false
            },
            {
                "description": "/* This is a comment */",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "378",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What does the <canvas> element in HTML5 allow you to do?",
        "options": [
            {
                "description": "Draw graphics on a web page via scripting.",
                "isAnswerKey": true
            },
            {
                "description": "Create a frame for images.",
                "isAnswerKey": false
            },
            {
                "description": "Embed multimedia content.",
                "isAnswerKey": false
            },
            {
                "description": "Define a section in a document.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "379",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the purpose of the <fieldset> element in a form?",
        "options": [
            {
                "description": "To group related elements in a form.",
                "isAnswerKey": true
            },
            {
                "description": "To style the form.",
                "isAnswerKey": false
            },
            {
                "description": "To submit the form data.",
                "isAnswerKey": false
            },
            {
                "description": "To reset the form fields.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "380",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which HTML element is used to display a scalar measurement within a known range?",
        "options": [
            {
                "description": "<meter>",
                "isAnswerKey": true
            },
            {
                "description": "<progress>",
                "isAnswerKey": false
            },
            {
                "description": "<range>",
                "isAnswerKey": false
            },
            {
                "description": "<value>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "381",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Given the following HTML and CSS, what will be the background color of the div?\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<style>\ndiv { background-color: blue; }\n#unique { background-color: red; }\n</style>\n</head>\n<body>\n<div id=\"unique\" class=\"common\"></div>\n</body>\n</html>\n```",
        "options": [
            {
                "description": "Red",
                "isAnswerKey": true
            },
            {
                "description": "Blue",
                "isAnswerKey": false
            },
            {
                "description": "No background color",
                "isAnswerKey": false
            },
            {
                "description": "Both red and blue due to conflicting styles",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "382",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the error in the following HTML snippet. \n\n```html\n<form action=\"submit_form.php\" method=\"post\">\n  <input type=\"text\" name=\"username\" required>\n  <input type=\"submit\" value=\"Submit\">\n</form>\n```",
        "options": [
            {
                "description": "There is no error; the form is correctly structured.",
                "isAnswerKey": true
            },
            {
                "description": "The 'required' attribute is not supported in HTML5.",
                "isAnswerKey": false
            },
            {
                "description": "The 'action' attribute should not have '.php' extension.",
                "isAnswerKey": false
            },
            {
                "description": "The 'method' attribute should be 'get' instead of 'post'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "383",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you ensure that a <div> element maintains a fixed aspect ratio, say 16:9, regardless of its width?",
        "options": [
            {
                "description": "Use a padding-top of 56.25% to the div with a relative position.",
                "isAnswerKey": true
            },
            {
                "description": "Set the width to 100% and height to auto.",
                "isAnswerKey": false
            },
            {
                "description": "Use a fixed height and width for the div.",
                "isAnswerKey": false
            },
            {
                "description": "Use flexbox with align-items: stretch.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "384",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What technique can be used to make an image responsive in HTML?",
        "options": [
            {
                "description": "Set the image width to 100% and height to auto.",
                "isAnswerKey": true
            },
            {
                "description": "Set the image width and height to fixed values.",
                "isAnswerKey": false
            },
            {
                "description": "Use the <responsive> attribute in the <img> tag.",
                "isAnswerKey": false
            },
            {
                "description": "Use the <img> tag without any dimension attributes.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "385",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the role of the <noscript> tag in an HTML document?",
        "options": [
            {
                "description": "To provide alternate content for users who have disabled scripts in their browser.",
                "isAnswerKey": true
            },
            {
                "description": "To disable JavaScript for specific sections of a document.",
                "isAnswerKey": false
            },
            {
                "description": "To execute scripts in a non-blocking way.",
                "isAnswerKey": false
            },
            {
                "description": "To embed non-executable code within a script tag.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "386",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which of the following elements can be self-closing in HTML?",
        "options": [
            {
                "description": "<img>",
                "isAnswerKey": true
            },
            {
                "description": "<div>",
                "isAnswerKey": false
            },
            {
                "description": "<span>",
                "isAnswerKey": false
            },
            {
                "description": "<p>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "387",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "If you have multiple <h1> tags in a single HTML document, what is the impact on SEO?",
        "options": [
            {
                "description": "Using multiple <h1> tags can confuse search engines and should be avoided.",
                "isAnswerKey": true
            },
            {
                "description": "There is no impact on SEO; you can use as many <h1> tags as needed.",
                "isAnswerKey": false
            },
            {
                "description": "It is required to have exactly one <h1> tag on every page for SEO.",
                "isAnswerKey": false
            },
            {
                "description": "Multiple <h1> tags improve the SEO ranking of a page.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "388",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which HTML attribute is used to specify that an input field must be filled out before submitting a form?",
        "options": [
            {
                "description": "required",
                "isAnswerKey": true
            },
            {
                "description": "validate",
                "isAnswerKey": false
            },
            {
                "description": "mandatory",
                "isAnswerKey": false
            },
            {
                "description": "compulsory",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "389",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the purpose of the <main> element in HTML5?",
        "options": [
            {
                "description": "To encapsulate the dominant content of the <body> of a document.",
                "isAnswerKey": true
            },
            {
                "description": "To define the main header of the document.",
                "isAnswerKey": false
            },
            {
                "description": "To define the main footer of the document.",
                "isAnswerKey": false
            },
            {
                "description": "To link to the main CSS file of the document.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "390",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How do you associate a <label> element with an <input> element?",
        "options": [
            {
                "description": "By matching the <label> 'for' attribute with the <input> 'id' attribute.",
                "isAnswerKey": true
            },
            {
                "description": "By placing the <input> element inside the <label> element.",
                "isAnswerKey": false
            },
            {
                "description": "By using the 'name' attribute in both elements.",
                "isAnswerKey": false
            },
            {
                "description": "By using the 'data-label' attribute.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "391",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "How does the HTML5 <picture> element improve upon the <img> element for responsive web design?",
        "options": [
            {
                "description": "It allows for different image sources based on device capabilities and screen size.",
                "isAnswerKey": true
            },
            {
                "description": "It automatically compresses images for faster load times.",
                "isAnswerKey": false
            },
            {
                "description": "It provides a fallback for browsers that do not support images.",
                "isAnswerKey": false
            },
            {
                "description": "It enables the use of animated images.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "392",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the significance of the <template> element in HTML5?",
        "options": [
            {
                "description": "It holds HTML content that is not to be rendered immediately when the page loads.",
                "isAnswerKey": true
            },
            {
                "description": "It provides a default layout for multiple pages.",
                "isAnswerKey": false
            },
            {
                "description": "It is used to define reusable components across documents.",
                "isAnswerKey": false
            },
            {
                "description": "It automatically duplicates content across the document.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "393",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can the <link> element be used within a <head> section of an HTML document?",
        "options": [
            {
                "description": "To link external style sheets, icons, or preconnect resources.",
                "isAnswerKey": true
            },
            {
                "description": "To define internal styles for the document.",
                "isAnswerKey": false
            },
            {
                "description": "To link to JavaScript files needed for the document.",
                "isAnswerKey": false
            },
            {
                "description": "To automatically generate sitemap links for the document.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "394",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is a potential consequence of using deprecated HTML tags in modern web development?",
        "options": [
            {
                "description": "It may cause rendering issues or unexpected behavior in modern browsers.",
                "isAnswerKey": true
            },
            {
                "description": "It will increase the page’s loading speed significantly.",
                "isAnswerKey": false
            },
            {
                "description": "There are no consequences; browsers handle deprecated tags seamlessly.",
                "isAnswerKey": false
            },
            {
                "description": "It will improve SEO rankings due to backward compatibility.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "395",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the role of the 'srcset' attribute in the <img> tag?",
        "options": [
            {
                "description": "It specifies a list of image sources for responsive images.",
                "isAnswerKey": true
            },
            {
                "description": "It defines the fallback image if the primary image fails to load.",
                "isAnswerKey": false
            },
            {
                "description": "It determines the aspect ratio of the image.",
                "isAnswerKey": false
            },
            {
                "description": "It sets the alt text for accessibility.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "396",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "In the context of HTML5, what does 'ARIA' stand for and what is its purpose?",
        "options": [
            {
                "description": "Accessible Rich Internet Applications; it enhances accessibility for assistive technologies.",
                "isAnswerKey": true
            },
            {
                "description": "Automatic Rendering Interface Application; it auto-generates UI components.",
                "isAnswerKey": false
            },
            {
                "description": "Application Rich Internet Access; it optimizes network usage.",
                "isAnswerKey": false
            },
            {
                "description": "Alternative Rendering Image Application; it manages image loading.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "397",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Why should the <title> tag always be included within the <head> section of an HTML document?",
        "options": [
            {
                "description": "It defines the document’s title in the browser tab and is important for SEO.",
                "isAnswerKey": true
            },
            {
                "description": "It is necessary for linking external scripts.",
                "isAnswerKey": false
            },
            {
                "description": "It determines the main content of the document.",
                "isAnswerKey": false
            },
            {
                "description": "It is used for defining metadata about the document.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "398",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which HTML5 element is used to define the base URL for all relative URLs in a document?",
        "options": [
            {
                "description": "<base>",
                "isAnswerKey": true
            },
            {
                "description": "<link>",
                "isAnswerKey": false
            },
            {
                "description": "<url>",
                "isAnswerKey": false
            },
            {
                "description": "<meta>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "399",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can the <meta> tag be used to improve the responsiveness of a webpage?",
        "options": [
            {
                "description": "By setting the viewport width to device-width and initial-scale to 1.0.",
                "isAnswerKey": true
            },
            {
                "description": "By linking to a responsive CSS framework.",
                "isAnswerKey": false
            },
            {
                "description": "By defining the character set as UTF-8.",
                "isAnswerKey": false
            },
            {
                "description": "By setting the HTTP content type as text/html.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "400",
        "skill": "html",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the correct HTML element for inserting a line break?",
        "options": [
            {
                "description": "<br>",
                "isAnswerKey": true
            },
            {
                "description": "<lb>",
                "isAnswerKey": false
            },
            {
                "description": "<break>",
                "isAnswerKey": false
            },
            {
                "description": "<ln>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "401",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following CSS properties is used to change the text color of an element?",
        "options": [
            {
                "description": "background-color",
                "isAnswerKey": false
            },
            {
                "description": "color",
                "isAnswerKey": true
            },
            {
                "description": "font-size",
                "isAnswerKey": false
            },
            {
                "description": "text-align",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "402",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What does the CSS property 'margin' do?",
        "options": [
            {
                "description": "Adds space inside the border of an element",
                "isAnswerKey": false
            },
            {
                "description": "Adds space outside the border of an element",
                "isAnswerKey": true
            },
            {
                "description": "Sets the text alignment of an element",
                "isAnswerKey": false
            },
            {
                "description": "Sets the background color of an element",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "403",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is a valid CSS selector for an element with the class 'header'?",
        "options": [
            {
                "description": ".header",
                "isAnswerKey": true
            },
            {
                "description": "#header",
                "isAnswerKey": false
            },
            {
                "description": "header",
                "isAnswerKey": false
            },
            {
                "description": "*header",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "404",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "How do you make text bold in CSS?",
        "options": [
            {
                "description": "font-weight: bold;",
                "isAnswerKey": true
            },
            {
                "description": "text-style: bold;",
                "isAnswerKey": false
            },
            {
                "description": "font-style: bold;",
                "isAnswerKey": false
            },
            {
                "description": "text-weight: bold;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "405",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS property controls the order of flex items in a flex container?",
        "options": [
            {
                "description": "flex-direction",
                "isAnswerKey": true
            },
            {
                "description": "flex-wrap",
                "isAnswerKey": false
            },
            {
                "description": "align-items",
                "isAnswerKey": false
            },
            {
                "description": "justify-content",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "406",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which property is used to change the font of an element?",
        "options": [
            {
                "description": "font-weight",
                "isAnswerKey": false
            },
            {
                "description": "font-family",
                "isAnswerKey": true
            },
            {
                "description": "font-size",
                "isAnswerKey": false
            },
            {
                "description": "font-style",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "407",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS property is used to specify the space between lines of text?",
        "options": [
            {
                "description": "letter-spacing",
                "isAnswerKey": false
            },
            {
                "description": "line-height",
                "isAnswerKey": true
            },
            {
                "description": "word-spacing",
                "isAnswerKey": false
            },
            {
                "description": "text-indent",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "408",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "In CSS, how do you select all p elements inside a div element?",
        "options": [
            {
                "description": "div p",
                "isAnswerKey": true
            },
            {
                "description": "div + p",
                "isAnswerKey": false
            },
            {
                "description": "div > p",
                "isAnswerKey": false
            },
            {
                "description": "div ~ p",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "409",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What does the 'z-index' property do in CSS?",
        "options": [
            {
                "description": "Sets the vertical alignment of an element",
                "isAnswerKey": false
            },
            {
                "description": "Controls the stacking order of elements",
                "isAnswerKey": true
            },
            {
                "description": "Specifies the horizontal alignment of an element",
                "isAnswerKey": false
            },
            {
                "description": "Defines the opacity of an element",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "410",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following CSS properties would you use to hide an element?",
        "options": [
            {
                "description": "display: hidden;",
                "isAnswerKey": false
            },
            {
                "description": "visibility: hidden;",
                "isAnswerKey": false
            },
            {
                "description": "display: none;",
                "isAnswerKey": true
            },
            {
                "description": "opacity: 0;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "411",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the CSS code: 'p { margin: 5px 10px; }', what does the shorthand '5px 10px' represent?",
        "options": [
            {
                "description": "5px top and bottom, 10px left and right",
                "isAnswerKey": true
            },
            {
                "description": "10px top and bottom, 5px left and right",
                "isAnswerKey": false
            },
            {
                "description": "5px left and right, 10px top and bottom",
                "isAnswerKey": false
            },
            {
                "description": "10px all around",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "412",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the 'box-sizing' property in CSS?",
        "options": [
            {
                "description": "To include padding and border in an element's total width and height",
                "isAnswerKey": true
            },
            {
                "description": "To set the border style",
                "isAnswerKey": false
            },
            {
                "description": "To change the element's background",
                "isAnswerKey": false
            },
            {
                "description": "To set the margin around the element",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "413",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "How can you make an element's font italic using CSS?",
        "options": [
            {
                "description": "font-weight: italic;",
                "isAnswerKey": false
            },
            {
                "description": "font-style: italic;",
                "isAnswerKey": true
            },
            {
                "description": "font-variant: italic;",
                "isAnswerKey": false
            },
            {
                "description": "text-transform: italic;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "414",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which CSS property is used to create space between the element's border and its content?",
        "options": [
            {
                "description": "margin",
                "isAnswerKey": false
            },
            {
                "description": "padding",
                "isAnswerKey": true
            },
            {
                "description": "border-spacing",
                "isAnswerKey": false
            },
            {
                "description": "line-height",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "415",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "In CSS Flexbox, which property is used to define the space between items on the main axis?",
        "options": [
            {
                "description": "align-items",
                "isAnswerKey": false
            },
            {
                "description": "justify-content",
                "isAnswerKey": true
            },
            {
                "description": "flex-direction",
                "isAnswerKey": false
            },
            {
                "description": "flex-wrap",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "416",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "How would you select all elements with a class name that starts with 'btn-'?",
        "options": [
            {
                "description": ".btn-*",
                "isAnswerKey": false
            },
            {
                "description": "[class^='btn-']",
                "isAnswerKey": true
            },
            {
                "description": "[class*='btn-']",
                "isAnswerKey": false
            },
            {
                "description": ".btn-[start]",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "417",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following properties is used to align flex items along the cross axis?",
        "options": [
            {
                "description": "justify-content",
                "isAnswerKey": false
            },
            {
                "description": "align-items",
                "isAnswerKey": true
            },
            {
                "description": "flex-wrap",
                "isAnswerKey": false
            },
            {
                "description": "align-content",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "418",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the effect of 'position: relative;' on an element?",
        "options": [
            {
                "description": "The element is positioned relative to its closest positioned ancestor.",
                "isAnswerKey": false
            },
            {
                "description": "The element is positioned relative to its normal position.",
                "isAnswerKey": true
            },
            {
                "description": "The element is removed from the document flow.",
                "isAnswerKey": false
            },
            {
                "description": "The element is positioned at the top of the document.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "419",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which CSS property would you use to make a list display horizontally?",
        "options": [
            {
                "description": "list-style-type: horizontal;",
                "isAnswerKey": false
            },
            {
                "description": "display: inline;",
                "isAnswerKey": false
            },
            {
                "description": "display: inline-block;",
                "isAnswerKey": false
            },
            {
                "description": "display: flex;",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "420",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which CSS property is used to change the spacing between words?",
        "options": [
            {
                "description": "letter-spacing",
                "isAnswerKey": false
            },
            {
                "description": "word-spacing",
                "isAnswerKey": true
            },
            {
                "description": "text-spacing",
                "isAnswerKey": false
            },
            {
                "description": "line-height",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "421",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the result of the following CSS code snippet: '.box { width: 100px; height: 100px; margin: 10px; }'?",
        "options": [
            {
                "description": "A box with 100px width and 100px height, with 10px margin around it",
                "isAnswerKey": true
            },
            {
                "description": "A box with 80px width and 80px height, with 10px margin around it",
                "isAnswerKey": false
            },
            {
                "description": "A box with 120px width and 120px height, with 10px margin around it",
                "isAnswerKey": false
            },
            {
                "description": "A box with 110px width and 110px height, with 10px margin around it",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "422",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following CSS rules will apply a 5px solid red border to an element with an ID of 'container'?",
        "options": [
            {
                "description": "#container { border: 5px solid red; }",
                "isAnswerKey": true
            },
            {
                "description": ".container { border: 5px solid red; }",
                "isAnswerKey": false
            },
            {
                "description": "container { border: 5px solid red; }",
                "isAnswerKey": false
            },
            {
                "description": "*container { border: 5px solid red; }",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "423",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you ensure a flex container's child elements wrap onto multiple lines?",
        "options": [
            {
                "description": "flex-direction: wrap",
                "isAnswerKey": false
            },
            {
                "description": "flex-wrap: wrap",
                "isAnswerKey": true
            },
            {
                "description": "flex-flow: wrap",
                "isAnswerKey": false
            },
            {
                "description": "align-content: wrap",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "424",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the effect of the following CSS: 'div { position: absolute; top: 50px; left: 100px; }'?",
        "options": [
            {
                "description": "The div is positioned 50px from the top and 100px from the left of its nearest positioned ancestor.",
                "isAnswerKey": true
            },
            {
                "description": "The div is positioned 50px from the top and 100px from the left of the viewport.",
                "isAnswerKey": false
            },
            {
                "description": "The div is positioned 50px from the bottom and 100px from the right of its nearest positioned ancestor.",
                "isAnswerKey": false
            },
            {
                "description": "The div is positioned at the center of its nearest positioned ancestor.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "425",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "How do you apply a linear gradient background that transitions from blue to red?",
        "options": [
            {
                "description": "background: linear-gradient(blue, red);",
                "isAnswerKey": true
            },
            {
                "description": "background: gradient(linear, blue, red);",
                "isAnswerKey": false
            },
            {
                "description": "background-color: linear-gradient(blue, red);",
                "isAnswerKey": false
            },
            {
                "description": "background: linear-color(blue, red);",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "426",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which CSS property is used to control the overflow of content in an element?",
        "options": [
            {
                "description": "overflow",
                "isAnswerKey": true
            },
            {
                "description": "content-overflow",
                "isAnswerKey": false
            },
            {
                "description": "overflow-control",
                "isAnswerKey": false
            },
            {
                "description": "overflow-content",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "427",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "To apply the same style to multiple classes, separate each class selector with a:",
        "options": [
            {
                "description": "Comma (,)",
                "isAnswerKey": true
            },
            {
                "description": "Semicolon (;)",
                "isAnswerKey": false
            },
            {
                "description": "Colon (:)",
                "isAnswerKey": false
            },
            {
                "description": "Period (.)",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "428",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which CSS property is used to create space between the content of a block element and the border of the box?",
        "options": [
            {
                "description": "padding",
                "isAnswerKey": true
            },
            {
                "description": "margin",
                "isAnswerKey": false
            },
            {
                "description": "border-spacing",
                "isAnswerKey": false
            },
            {
                "description": "line-height",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "429",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What does the 'display: flex;' property do when applied to a container element?",
        "options": [
            {
                "description": "Aligns all children elements vertically.",
                "isAnswerKey": false
            },
            {
                "description": "Aligns all children elements horizontally.",
                "isAnswerKey": false
            },
            {
                "description": "Allows the container's children to align in a flexible layout.",
                "isAnswerKey": true
            },
            {
                "description": "Fixes the position of the container.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "430",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which CSS property is used to change the background color of an element?",
        "options": [
            {
                "description": "background-color",
                "isAnswerKey": true
            },
            {
                "description": "color",
                "isAnswerKey": false
            },
            {
                "description": "background-image",
                "isAnswerKey": false
            },
            {
                "description": "background-position",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "431",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What's the problem with the following CSS rule? 'p { margin: 10px 20px 30px; }'",
        "options": [
            {
                "description": "The rule is missing one value for margin.",
                "isAnswerKey": true
            },
            {
                "description": "The 'margin' property cannot have three values.",
                "isAnswerKey": false
            },
            {
                "description": "There is no problem with this rule.",
                "isAnswerKey": false
            },
            {
                "description": "The 'p' selector is invalid in CSS.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "432",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the issue in the following CSS: '.container { display: flex; justify-content: center; align-items: center; align-self: baseline; }'",
        "options": [
            {
                "description": "justify-content should be align-content",
                "isAnswerKey": false
            },
            {
                "description": "align-items should be align-self",
                "isAnswerKey": false
            },
            {
                "description": "align-items should be removed",
                "isAnswerKey": false
            },
            {
                "description": "align-items is redundant due to the presence of 'justify-content'",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "433",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the error in the following CSS code snippet? '.container { width: 100px; height: 100px; padding: 10px; box-sizing: border-box; }'",
        "options": [
            {
                "description": "box-sizing should not be used with padding",
                "isAnswerKey": false
            },
            {
                "description": "The code will make the box overflow its container",
                "isAnswerKey": false
            },
            {
                "description": "Width and height don't include padding with 'box-sizing: border-box;'",
                "isAnswerKey": false
            },
            {
                "description": "There is no error; this is valid CSS.",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "434",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What will be the computed height of a <div> with the following CSS: '.box { height: 200px; padding: 10px 20px; box-sizing: border-box; }'?",
        "options": [
            {
                "description": "200px",
                "isAnswerKey": false
            },
            {
                "description": "220px",
                "isAnswerKey": false
            },
            {
                "description": "100px",
                "isAnswerKey": true
            },
            {
                "description": "180px",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "435",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is wrong with the following CSS declaration? '.box { height: 100px; margin: 20px auto; text-align: middle; }'",
        "options": [
            {
                "description": "text-align should be center, not middle",
                "isAnswerKey": true
            },
            {
                "description": "The height must be in percentages",
                "isAnswerKey": false
            },
            {
                "description": "The margin property is incorrectly used",
                "isAnswerKey": false
            },
            {
                "description": "There is no error.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "436",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What will happen if you apply 'display: inline-block;' to an element?",
        "options": [
            {
                "description": "The element will be block-level but still flow with text",
                "isAnswerKey": true
            },
            {
                "description": "The element will be inline but not allow any other elements next to it",
                "isAnswerKey": false
            },
            {
                "description": "The element will behave like a block element",
                "isAnswerKey": false
            },
            {
                "description": "The element will disappear",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "437",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the issue in the following CSS: 'div { background-color: #123456; width: 100px; height: -50px; }'",
        "options": [
            {
                "description": "background-color should be color",
                "isAnswerKey": false
            },
            {
                "description": "Width cannot be negative",
                "isAnswerKey": false
            },
            {
                "description": "Height cannot be negative",
                "isAnswerKey": true
            },
            {
                "description": "The hex code is incorrect",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "438",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is incorrect about the following CSS: '.text { font-weight: 500px; }'?",
        "options": [
            {
                "description": "The unit 'px' is incorrect for font-weight",
                "isAnswerKey": true
            },
            {
                "description": "The font-weight value is too small",
                "isAnswerKey": false
            },
            {
                "description": "The selector '.text' should be '#text'",
                "isAnswerKey": false
            },
            {
                "description": "There is nothing wrong with this CSS",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "439",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the default value of the CSS 'position' property?",
        "options": [
            {
                "description": "relative",
                "isAnswerKey": false
            },
            {
                "description": "absolute",
                "isAnswerKey": false
            },
            {
                "description": "static",
                "isAnswerKey": true
            },
            {
                "description": "fixed",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "440",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which of the following CSS properties can be used to hide an element but still reserve its space in the layout?",
        "options": [
            {
                "description": "display: none;",
                "isAnswerKey": false
            },
            {
                "description": "visibility: hidden;",
                "isAnswerKey": true
            },
            {
                "description": "opacity: 0;",
                "isAnswerKey": false
            },
            {
                "description": "z-index: -1;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "441",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Predict the outcome of the following CSS code: '.container { display: flex; flex-direction: column; justify-content: flex-end; align-items: center; height: 200px; }'.",
        "options": [
            {
                "description": "Items are aligned at the top and centered horizontally",
                "isAnswerKey": false
            },
            {
                "description": "Items are aligned at the bottom and centered horizontally",
                "isAnswerKey": true
            },
            {
                "description": "Items are centered vertically and horizontally",
                "isAnswerKey": false
            },
            {
                "description": "Items are aligned at the top left corner",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "442",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the final width of a <div> with the following style: '.box { width: 200px; padding: 10px; border: 5px solid black; box-sizing: content-box; }'?",
        "options": [
            {
                "description": "200px",
                "isAnswerKey": false
            },
            {
                "description": "220px",
                "isAnswerKey": false
            },
            {
                "description": "210px",
                "isAnswerKey": false
            },
            {
                "description": "230px",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "443",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the effect of this CSS: 'p { margin: 0 auto; }' in a block-level element?",
        "options": [
            {
                "description": "Centers the element horizontally",
                "isAnswerKey": true
            },
            {
                "description": "Centers the text inside the element",
                "isAnswerKey": false
            },
            {
                "description": "Removes all margins from the element",
                "isAnswerKey": false
            },
            {
                "description": "Sets the margin to the default value",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "444",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will the following CSS rule do? '.box::before { content: ''; display: block; width: 100%; height: 10px; background-color: black; }'",
        "options": [
            {
                "description": "Adds a black border to the box",
                "isAnswerKey": false
            },
            {
                "description": "Adds a black block before the content inside the box",
                "isAnswerKey": true
            },
            {
                "description": "Changes the color of the box to black",
                "isAnswerKey": false
            },
            {
                "description": "Adds padding to the box",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "445",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Given the CSS code: '.item { float: left; width: 50%; }', how will three '.item' elements be displayed in a container of 600px width?",
        "options": [
            {
                "description": "Two items on the first line, third one on next line.",
                "isAnswerKey": true
            },
            {
                "description": "All three items in one row",
                "isAnswerKey": false
            },
            {
                "description": "One item per line",
                "isAnswerKey": false
            },
            {
                "description": "Two items in the first row, one in the second",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "446",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Consider the CSS code: '.box { display: flex; align-items: center; justify-content: space-between; }'. What is the alignment of the flex items?",
        "options": [
            {
                "description": "Items are centered vertically and evenly distributed along the main axis.",
                "isAnswerKey": false
            },
            {
                "description": "Items are aligned at the start of the container.",
                "isAnswerKey": false
            },
            {
                "description": "Items are centered on the cross axis and distributed along the main axis.",
                "isAnswerKey": true
            },
            {
                "description": "Items are stacked on top of each other.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "447",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "How will the following CSS code render a <div>? '.content { width: 200px; height: 100px; border: 10px solid black; margin: 20px; box-sizing: content-box; }'",
        "options": [
            {
                "description": "A 200px by 100px content box with 10px border included in the dimensions",
                "isAnswerKey": false
            },
            {
                "description": "A 220px by 120px box including border and padding",
                "isAnswerKey": true
            },
            {
                "description": "A 180px by 80px box",
                "isAnswerKey": false
            },
            {
                "description": "A 200px by 100px box with no border",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "448",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What would be the appearance of a <div> with the following CSS: '.box { display: flex; flex-direction: row; align-items: center; justify-content: space-between; height: 100px; }' if it contains two child elements?",
        "options": [
            {
                "description": "The children are centered horizontally and vertically",
                "isAnswerKey": false
            },
            {
                "description": "The children are at the start and end of the container's main axis",
                "isAnswerKey": true
            },
            {
                "description": "The children overlap in the center",
                "isAnswerKey": false
            },
            {
                "description": "The children are evenly spaced in the center",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "449",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What value of 'flex-direction' would you use to reverse the order of children in a flex container along the main axis?",
        "options": [
            {
                "description": "column-reverse",
                "isAnswerKey": false
            },
            {
                "description": "row-reverse",
                "isAnswerKey": true
            },
            {
                "description": "reverse",
                "isAnswerKey": false
            },
            {
                "description": "flex-reverse",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "450",
        "skill": "css",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Predict the behavior of elements styled with 'display: grid;' and 'grid-auto-flow: column;'.",
        "options": [
            {
                "description": "Elements fill columns before rows",
                "isAnswerKey": true
            },
            {
                "description": "Elements fill rows before columns",
                "isAnswerKey": false
            },
            {
                "description": "Elements are aligned in a single row",
                "isAnswerKey": false
            },
            {
                "description": "Elements are stacked on top of each other",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "451",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS property is used to change the text color of an element?",
        "options": [
            {
                "description": "background-color",
                "isAnswerKey": false
            },
            {
                "description": "text-color",
                "isAnswerKey": false
            },
            {
                "description": "color",
                "isAnswerKey": true
            },
            {
                "description": "font-color",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "452",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the default value of the CSS 'display' property?",
        "options": [
            {
                "description": "inline",
                "isAnswerKey": false
            },
            {
                "description": "block",
                "isAnswerKey": false
            },
            {
                "description": "none",
                "isAnswerKey": false
            },
            {
                "description": "inline-block",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "453",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "How do you make a list item marker appear inside the content flow in CSS?",
        "options": [
            {
                "description": "list-style-position: inside;",
                "isAnswerKey": true
            },
            {
                "description": "list-style-type: inside;",
                "isAnswerKey": false
            },
            {
                "description": "list-position: inside;",
                "isAnswerKey": false
            },
            {
                "description": "list-style: inside;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "454",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which property is used to set the space between the content and the border of an element?",
        "options": [
            {
                "description": "margin",
                "isAnswerKey": false
            },
            {
                "description": "padding",
                "isAnswerKey": true
            },
            {
                "description": "border",
                "isAnswerKey": false
            },
            {
                "description": "spacing",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "455",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What does the CSS 'float' property do?",
        "options": [
            {
                "description": "Changes the display property to block",
                "isAnswerKey": false
            },
            {
                "description": "Aligns the element to the left or right of its container",
                "isAnswerKey": true
            },
            {
                "description": "Centers an element in its container",
                "isAnswerKey": false
            },
            {
                "description": "Makes the element invisible",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "456",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS property is used to control the order of flex items in a flex container?",
        "options": [
            {
                "description": "flex-order",
                "isAnswerKey": false
            },
            {
                "description": "order",
                "isAnswerKey": true
            },
            {
                "description": "flex-direction",
                "isAnswerKey": false
            },
            {
                "description": "flex-align",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "457",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following CSS properties is used to add shadows to text?",
        "options": [
            {
                "description": "font-shadow",
                "isAnswerKey": false
            },
            {
                "description": "text-shadow",
                "isAnswerKey": true
            },
            {
                "description": "box-shadow",
                "isAnswerKey": false
            },
            {
                "description": "shadow",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "458",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In CSS, what does the 'z-index' property do?",
        "options": [
            {
                "description": "Controls the stacking order of elements",
                "isAnswerKey": true
            },
            {
                "description": "Sets the opacity of an element",
                "isAnswerKey": false
            },
            {
                "description": "Defines the size of an element",
                "isAnswerKey": false
            },
            {
                "description": "Specifies the font size of text",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "459",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "How can you make a CSS class apply to only one specific element?",
        "options": [
            {
                "description": "Use an ID selector",
                "isAnswerKey": true
            },
            {
                "description": "Use a universal selector",
                "isAnswerKey": false
            },
            {
                "description": "Use a descendant selector",
                "isAnswerKey": false
            },
            {
                "description": "Use a child selector",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "460",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS property is used to change the font of an element?",
        "options": [
            {
                "description": "text-style",
                "isAnswerKey": false
            },
            {
                "description": "font-family",
                "isAnswerKey": true
            },
            {
                "description": "font-weight",
                "isAnswerKey": false
            },
            {
                "description": "font-style",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "461",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which CSS selector is used to select all elements of a certain type?",
        "options": [
            {
                "description": "Class selector",
                "isAnswerKey": false
            },
            {
                "description": "Type selector",
                "isAnswerKey": true
            },
            {
                "description": "ID selector",
                "isAnswerKey": false
            },
            {
                "description": "Universal selector",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "462",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following CSS units is relative to the font size of the root element?",
        "options": [
            {
                "description": "em",
                "isAnswerKey": false
            },
            {
                "description": "rem",
                "isAnswerKey": true
            },
            {
                "description": "px",
                "isAnswerKey": false
            },
            {
                "description": "%",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "463",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the CSS 'box-sizing' property?",
        "options": [
            {
                "description": "To include padding and border in an element's total width and height",
                "isAnswerKey": true
            },
            {
                "description": "To add a shadow around an element",
                "isAnswerKey": false
            },
            {
                "description": "To control the size of an element's box model",
                "isAnswerKey": false
            },
            {
                "description": "To apply a background image to an element",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "464",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which CSS property is used to set the line height of a text?",
        "options": [
            {
                "description": "line-height",
                "isAnswerKey": true
            },
            {
                "description": "line-spacing",
                "isAnswerKey": false
            },
            {
                "description": "text-height",
                "isAnswerKey": false
            },
            {
                "description": "font-height",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "465",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which CSS property is used to create space around elements, outside of any defined borders?",
        "options": [
            {
                "description": "margin",
                "isAnswerKey": true
            },
            {
                "description": "padding",
                "isAnswerKey": false
            },
            {
                "description": "border-spacing",
                "isAnswerKey": false
            },
            {
                "description": "outline",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "466",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What does the 'position: relative;' CSS property do?",
        "options": [
            {
                "description": "Positions the element relative to the viewport",
                "isAnswerKey": false
            },
            {
                "description": "Positions the element relative to its normal position",
                "isAnswerKey": true
            },
            {
                "description": "Positions the element relative to its parent",
                "isAnswerKey": false
            },
            {
                "description": "Positions the element relative to the document body",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "467",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which is the correct syntax for a CSS media query?",
        "options": [
            {
                "description": "@media screen and (max-width: 600px) {}",
                "isAnswerKey": true
            },
            {
                "description": "@media screen(max-width: 600px) {}",
                "isAnswerKey": false
            },
            {
                "description": "@media(width <= 600px) {}",
                "isAnswerKey": false
            },
            {
                "description": "@media(max-width: 600px) {}",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "468",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "How can you apply a style to an element with the ID 'header'?",
        "options": [
            {
                "description": ".header {}",
                "isAnswerKey": false
            },
            {
                "description": "#header {}",
                "isAnswerKey": true
            },
            {
                "description": "header {}",
                "isAnswerKey": false
            },
            {
                "description": "*header {}",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "469",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which CSS property is used to specify the transparency of an element?",
        "options": [
            {
                "description": "visibility",
                "isAnswerKey": false
            },
            {
                "description": "opacity",
                "isAnswerKey": true
            },
            {
                "description": "display",
                "isAnswerKey": false
            },
            {
                "description": "alpha",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "470",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which property is used to create a transition effect when changing CSS properties?",
        "options": [
            {
                "description": "transition",
                "isAnswerKey": true
            },
            {
                "description": "animation",
                "isAnswerKey": false
            },
            {
                "description": "transform",
                "isAnswerKey": false
            },
            {
                "description": "timing",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "471",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following CSS, what will be the background color of the <div> element?\n\n```css\n#box {\n  background-color: blue;\n  width: 100px;\n  height: 100px;\n}\n.box {\n  background-color: red;\n  width: 50px;\n  height: 50px;\n}\n```\n\n```html\n<div id=\"box\" class=\"box\"></div>\n```",
        "options": [
            {
                "description": "blue",
                "isAnswerKey": true
            },
            {
                "description": "red",
                "isAnswerKey": false
            },
            {
                "description": "purple",
                "isAnswerKey": false
            },
            {
                "description": "No background color",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "472",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will be the output of the following CSS snippet?\n\n```css\np {\n  color: blue;\n  text-align: center;\n}\n\np.error {\n  color: red;\n}\n```\n\n```html\n<p class=\"error\">Hello World!</p>\n```",
        "options": [
            {
                "description": "Text is blue and centered",
                "isAnswerKey": false
            },
            {
                "description": "Text is red and centered",
                "isAnswerKey": true
            },
            {
                "description": "Text is red and left-aligned",
                "isAnswerKey": false
            },
            {
                "description": "Text is blue and left-aligned",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "473",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which CSS property can be used to create rounded corners on an element?",
        "options": [
            {
                "description": "corner-radius",
                "isAnswerKey": false
            },
            {
                "description": "border-radius",
                "isAnswerKey": true
            },
            {
                "description": "radius",
                "isAnswerKey": false
            },
            {
                "description": "round-corner",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "474",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How does the CSS 'calc()' function work?",
        "options": [
            {
                "description": "Allows calculations within CSS property values",
                "isAnswerKey": true
            },
            {
                "description": "Calculates the number of elements in a selection",
                "isAnswerKey": false
            },
            {
                "description": "Calculates and applies automatic values",
                "isAnswerKey": false
            },
            {
                "description": "Sets the value of CSS properties to calculated pixel values",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "475",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following is the CSS syntax for selecting only the first child element of a parent?",
        "options": [
            {
                "description": "parent:last-child",
                "isAnswerKey": false
            },
            {
                "description": "parent > first-child",
                "isAnswerKey": false
            },
            {
                "description": "parent:first-child",
                "isAnswerKey": false
            },
            {
                "description": "parent > :first-child",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "476",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will be the output of the following CSS code?\n\n```css\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n```\n\n```html\n<div class=\"container\">\n  <div>Centered Content</div>\n</div>\n```",
        "options": [
            {
                "description": "Content is centered horizontally",
                "isAnswerKey": false
            },
            {
                "description": "Content is centered vertically",
                "isAnswerKey": false
            },
            {
                "description": "Content is centered both horizontally and vertically",
                "isAnswerKey": true
            },
            {
                "description": "Content is aligned to the top-left",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "477",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following is the CSS pseudo-class to select elements that do not have any children?",
        "options": [
            {
                "description": ":empty",
                "isAnswerKey": true
            },
            {
                "description": ":not-child",
                "isAnswerKey": false
            },
            {
                "description": ":no-child",
                "isAnswerKey": false
            },
            {
                "description": ":none",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "478",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "In the following CSS code, what is the effect of the ':hover' selector?\n\n```css\nbutton {\n  background-color: blue;\n  color: white;\n}\nbutton:hover {\n  background-color: red;\n  color: yellow;\n}\n```",
        "options": [
            {
                "description": "The button will always be red with yellow text",
                "isAnswerKey": false
            },
            {
                "description": "The button will change to red with yellow text when hovered",
                "isAnswerKey": true
            },
            {
                "description": "The button will initially show red with yellow text",
                "isAnswerKey": false
            },
            {
                "description": "The button will have no background color",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "479",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the purpose of the CSS 'flex-wrap' property in a flex container?",
        "options": [
            {
                "description": "To control the direction of flex items",
                "isAnswerKey": false
            },
            {
                "description": "To allow flex items to wrap onto multiple lines",
                "isAnswerKey": true
            },
            {
                "description": "To align flex items to the center",
                "isAnswerKey": false
            },
            {
                "description": "To justify the content along the cross axis",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "480",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How would you apply a linear gradient background that transitions from blue at the top to white at the bottom?",
        "options": [
            {
                "description": "background: linear-gradient(to bottom, blue, white);",
                "isAnswerKey": true
            },
            {
                "description": "background: linear-gradient(blue, white);",
                "isAnswerKey": false
            },
            {
                "description": "background: gradient(linear, top, blue, white);",
                "isAnswerKey": false
            },
            {
                "description": "background: gradient(0deg, blue, white);",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "481",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify and correct the issue in the following CSS code:\n\n```css\nbody {\n  font-size: 16px;\n  .content {\n    font-size: 14px;\n  }\n}\n```",
        "options": [
            {
                "description": "Remove the dot before .content",
                "isAnswerKey": false
            },
            {
                "description": "Move the .content class outside the body selector",
                "isAnswerKey": true
            },
            {
                "description": "Replace font-size: 14px; with 16px;",
                "isAnswerKey": false
            },
            {
                "description": "Add a semicolon at the end of body selector",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "482",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which CSS property is used to specify the space between words in a text?",
        "options": [
            {
                "description": "letter-spacing",
                "isAnswerKey": false
            },
            {
                "description": "word-spacing",
                "isAnswerKey": true
            },
            {
                "description": "spacing",
                "isAnswerKey": false
            },
            {
                "description": "text-spacing",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "483",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the issue in the following CSS code?\n\n```css\n.navbar > li {\n  display: inline;\n  float: left;\n}\n```\n\nWhat effect will this have on the list items?",
        "options": [
            {
                "description": "The list items will appear vertically aligned.",
                "isAnswerKey": false
            },
            {
                "description": "The list items will overlap each other.",
                "isAnswerKey": false
            },
            {
                "description": "The 'float' property will override 'display: inline;'.",
                "isAnswerKey": true
            },
            {
                "description": "There will be no effect; both properties are compatible.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "484",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is wrong with the following CSS rule?\n\n```css\n.box {\n  width: 100%;\n  margin: 0 auto auto;\n}\n```",
        "options": [
            {
                "description": "The 'margin' property should have four values.",
                "isAnswerKey": true
            },
            {
                "description": "The width property should not be set",
                "isAnswerKey": false
            },
            {
                "description": "The '.box' selector should be '#box'",
                "isAnswerKey": false
            },
            {
                "description": "The 'auto' value is required for horizontal centering",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "485",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In the following CSS, what is the issue?\n\n```css\n.box { \n  border: 1px solid black;\n  border-radius: 50%;\n  width: 100px;\n  height: 100px;\n  overflow: hidden;\n}\n```\n\n```html\n<div class=\"box\">Content inside the circle</div>\n```",
        "options": [
            {
                "description": "The border-radius value is incorrect",
                "isAnswerKey": false
            },
            {
                "description": "The content will not be visible",
                "isAnswerKey": true
            },
            {
                "description": "The width should be larger",
                "isAnswerKey": false
            },
            {
                "description": "The height should be greater than the width",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "486",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the issue in the following CSS rule?\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-columns: 1fr;\n}\n```",
        "options": [
            {
                "description": "The 'display' property should be 'display: block;'",
                "isAnswerKey": false
            },
            {
                "description": "The 'grid-template-columns' property is missing",
                "isAnswerKey": false
            },
            {
                "description": "The 'grid-template-columns' property is redundant",
                "isAnswerKey": true
            },
            {
                "description": "The 'fr' unit is missing in 'grid-template-columns'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "487",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the issue in the following CSS:\n\n```css\n.container {\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap-reverse;\n}\n```\n\nWhat will occur with the flex items inside this container?",
        "options": [
            {
                "description": "Items will be centered horizontally",
                "isAnswerKey": false
            },
            {
                "description": "Items will be displayed in a single row",
                "isAnswerKey": false
            },
            {
                "description": "Items will be spread out evenly with space around them",
                "isAnswerKey": true
            },
            {
                "description": "Items will be stacked vertically",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "488",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Consider the following CSS snippet. Which statement correctly identifies and fixes the issue?\n\n```css\n.box {\n  width: 100px;\n  height: 100px;\n  background-color: lightblue;\n}\n\n.box::before {\n  content: 'Box';\n  background-color: yellow;\n  position: absolute;\n}\n```",
        "options": [
            {
                "description": "The ':before' element will not display because 'content' must be set to 'visible'",
                "isAnswerKey": false
            },
            {
                "description": "The 'background-color' in '.box::before' should be 'background-color: red;'",
                "isAnswerKey": false
            },
            {
                "description": "The '::before' pseudo-element will not display because it is not given a size",
                "isAnswerKey": true
            },
            {
                "description": "The '.box' class is missing a 'position' property",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "489",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is wrong with the following CSS code?\n\n```css\n.container {\n  display: grid;\n  grid-template-areas: \n    'header header'\n    'sidebar content'\n    'footer';\n}\n```",
        "options": [
            {
                "description": "The 'grid-template-areas' syntax is incorrect",
                "isAnswerKey": false
            },
            {
                "description": "The 'footer' area should span across two columns",
                "isAnswerKey": true
            },
            {
                "description": "The 'header' area should be on a single line",
                "isAnswerKey": false
            },
            {
                "description": "The 'content' area is not defined correctly",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "490",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is wrong with the following CSS code?\n\n```css\n.box {\n  width: 200px;\n  height: 200px;\n  border: 2px solid black;\n  background-color: red\n  padding: 20px;\n}\n```",
        "options": [
            {
                "description": "The 'width' property should be removed",
                "isAnswerKey": false
            },
            {
                "description": "The 'background-color' property is incorrect",
                "isAnswerKey": false
            },
            {
                "description": "The 'border' property is missing",
                "isAnswerKey": false
            },
            {
                "description": "There is a missing semicolon after 'background-color: blue;'",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "491",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the issue with the following CSS?\n\n```css\n.box {\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-left: 10px,\n  margin-right: 10px;\n}\n```",
        "options": [
            {
                "description": "The 'display' property should be 'inline-block'",
                "isAnswerKey": false
            },
            {
                "description": "The 'margin-left' property is missing",
                "isAnswerKey": false
            },
            {
                "description": "The 'margin-right' property is missing",
                "isAnswerKey": false
            },
            {
                "description": "Comma is used instead of a semicolon after '10px' in 'margin-top'",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "492",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the error in the CSS that is causing the button not to appear centered and blue.\n\n```css\nbutton {\n  display: block;\n  background-color: blue;\n  color: white;\n  margin: 0 auto;\n}\n```",
        "options": [
            {
                "description": "The 'display' property should be 'inline-block'",
                "isAnswerKey": false
            },
            {
                "description": "The 'margin: 0 auto;' only centers block elements with defined widths",
                "isAnswerKey": true
            },
            {
                "description": "'background-color' should be used instead of 'color'",
                "isAnswerKey": false
            },
            {
                "description": "The 'display' property should be 'inline'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "493",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the error in the following CSS code?\n\n```css\n.box {\n  border: 1px solid black;\n  padding: 10px 15px;\n  margin 10px;\n}\n```",
        "options": [
            {
                "description": "The 'border' property should have a color specified",
                "isAnswerKey": false
            },
            {
                "description": "The 'padding' value is missing units",
                "isAnswerKey": false
            },
            {
                "description": "The 'border' property is incomplete",
                "isAnswerKey": false
            },
            {
                "description": "Missing semicolon after 'border: 1px solid black'",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "494",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the problem with this CSS grid layout?\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 100px 100px;\n}\n\n.item {\n  grid-row: 1 / 1;\n}\n```",
        "options": [
            {
                "description": "The grid-template-rows property is missing",
                "isAnswerKey": false
            },
            {
                "description": "The 'grid-gap' property is missing",
                "isAnswerKey": false
            },
            {
                "description": "The 'grid-row' property should be used instead of 'grid-gap'",
                "isAnswerKey": false
            },
            {
                "description": "The 'grid-row' property should be used instead of 'grid-template-rows'",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "495",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which CSS property would you use to change the text color inside a <div> only when it is hovered over?\n\n```css\n.box:hover {\n  /* Your code here */\n}\n```",
        "options": [
            {
                "description": "background",
                "isAnswerKey": false
            },
            {
                "description": "text-decoration",
                "isAnswerKey": false
            },
            {
                "description": "color",
                "isAnswerKey": true
            },
            {
                "description": "text-color",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "496",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Given the following CSS and HTML, what will be the displayed border color of the <div> element?\n\n```css\n.box {\n  border: 1px solid black;\n}\n\n.box:hover {\n  border-color: red;\n}\n\n.box:focus {\n  border-color: blue;\n}\n```\n\n```html\n<div class=\"box\" tabindex=\"0\">Hover or focus me</div>\n```",
        "options": [
            {
                "description": "The border will always be black",
                "isAnswerKey": false
            },
            {
                "description": "On hover, the border will change to red",
                "isAnswerKey": true
            },
            {
                "description": "The border will change to red only on focus",
                "isAnswerKey": false
            },
            {
                "description": "The border color will not change",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "497",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the result of applying the following CSS to a <div>?\n\n```css\n.box {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100px;\n  height: 100px;\n  background-color: yellow;\n}\n\n.box:hover {\n  position: absolute;\n  top: 50px;\n  left: 50px;\n}\n```\n\n```html\n<div class=\"box\"></div>\n```",
        "options": [
            {
                "description": "The box moves to 50px top and 50px left when hovered",
                "isAnswerKey": false
            },
            {
                "description": "The box remains at 0px top and 0px left when hovered",
                "isAnswerKey": true
            },
            {
                "description": "The box turns red when hovered",
                "isAnswerKey": false
            },
            {
                "description": "The box disappears when hovered",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "498",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the result of applying the following CSS to the <div> and <p> elements?\n\n```css\n.container {\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n}\n\n.box {\n  width: 100px;\n  height: 100px;\n  background-color: lightblue;\n}\n```\n\n```html\n<div class=\"container\">\n  <div class=\"box\">Box 1</div>\n  <div class=\"box\">Box 2</div>\n</div>\n```",
        "options": [
            {
                "description": "Box 1 will be above Box 2",
                "isAnswerKey": false
            },
            {
                "description": "Box 1 will be below Box 2",
                "isAnswerKey": true
            },
            {
                "description": "Both boxes will be on the same line",
                "isAnswerKey": false
            },
            {
                "description": "Boxes will cover each other",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "499",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the computed style of the <div> element when the following CSS is applied?\n\n```css\n.box {\n  width: calc(100% - 50px);\n  height: 100px;\n  padding: 10px;\n  border: 5px solid black;\n  box-sizing: border-box;\n}\n```\n\n```html\n<div class=\"box\"></div>\n```",
        "options": [
            {
                "description": "The width of the <div> will be 50px less than the parent's width",
                "isAnswerKey": true
            },
            {
                "description": "The width of the <div> will be exactly 100px",
                "isAnswerKey": false
            },
            {
                "description": "The width of the <div> will be 60px less than the parent's width",
                "isAnswerKey": false
            },
            {
                "description": "The width of the <div> will be 70px less than the parent's width",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "500",
        "skill": "css",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you make a <div> element's content scrollable if it overflows the element's box?\n\n```css\n.container {\n  width: 300px;\n  height: 200px;\n  overflow: ?;\n}\n```",
        "options": [
            {
                "description": "overflow: hidden;",
                "isAnswerKey": false
            },
            {
                "description": "overflow: auto;",
                "isAnswerKey": true
            },
            {
                "description": "overflow: visible;",
                "isAnswerKey": false
            },
            {
                "description": "overflow: none;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "501",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS property is used to change the text color of an element?",
        "options": [
            {
                "description": "color",
                "isAnswerKey": true
            },
            {
                "description": "background-color",
                "isAnswerKey": false
            },
            {
                "description": "font-color",
                "isAnswerKey": false
            },
            {
                "description": "text-color",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "502",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the default display value for a <div> element?",
        "options": [
            {
                "description": "inline",
                "isAnswerKey": false
            },
            {
                "description": "block",
                "isAnswerKey": true
            },
            {
                "description": "flex",
                "isAnswerKey": false
            },
            {
                "description": "none",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "503",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS property is used to add space inside the border of an element?",
        "options": [
            {
                "description": "margin",
                "isAnswerKey": false
            },
            {
                "description": "padding",
                "isAnswerKey": true
            },
            {
                "description": "border-spacing",
                "isAnswerKey": false
            },
            {
                "description": "spacing",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "504",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is a valid CSS comment?",
        "options": [
            {
                "description": "// This is a comment",
                "isAnswerKey": false
            },
            {
                "description": "/* This is a comment */",
                "isAnswerKey": true
            },
            {
                "description": "<!-- This is a comment -->",
                "isAnswerKey": false
            },
            {
                "description": "# This is a comment",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "505",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS property can be used to make text bold?",
        "options": [
            {
                "description": "font-weight",
                "isAnswerKey": true
            },
            {
                "description": "text-decoration",
                "isAnswerKey": false
            },
            {
                "description": "font-style",
                "isAnswerKey": false
            },
            {
                "description": "font-bold",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "506",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which property is used to set the background image of an element?",
        "options": [
            {
                "description": "background-image",
                "isAnswerKey": true
            },
            {
                "description": "background-color",
                "isAnswerKey": false
            },
            {
                "description": "background",
                "isAnswerKey": false
            },
            {
                "description": "image-background",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "507",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "How do you select an element with id 'header' in CSS?",
        "options": [
            {
                "description": ".header",
                "isAnswerKey": false
            },
            {
                "description": "#header",
                "isAnswerKey": true
            },
            {
                "description": "header",
                "isAnswerKey": false
            },
            {
                "description": "*header",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "508",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS property is used to control the spacing between letters?",
        "options": [
            {
                "description": "letter-spacing",
                "isAnswerKey": true
            },
            {
                "description": "word-spacing",
                "isAnswerKey": false
            },
            {
                "description": "line-height",
                "isAnswerKey": false
            },
            {
                "description": "text-spacing",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "509",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS property is used to underline text?",
        "options": [
            {
                "description": "text-decoration",
                "isAnswerKey": true
            },
            {
                "description": "text-transform",
                "isAnswerKey": false
            },
            {
                "description": "font-weight",
                "isAnswerKey": false
            },
            {
                "description": "font-style",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "510",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS property is used to specify the indent of the first line in a text block?",
        "options": [
            {
                "description": "text-indent",
                "isAnswerKey": true
            },
            {
                "description": "text-transform",
                "isAnswerKey": false
            },
            {
                "description": "text-align",
                "isAnswerKey": false
            },
            {
                "description": "text-decoration",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "511",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the following CSS code, what is the computed color of the <p> element?\n\n```css\np {\n  color: red;\n  color: blue;\n}\n```\n",
        "options": [
            {
                "description": "red",
                "isAnswerKey": false
            },
            {
                "description": "blue",
                "isAnswerKey": true
            },
            {
                "description": "black",
                "isAnswerKey": false
            },
            {
                "description": "inherit",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "512",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the CSS snippet below, how will the <div> element be displayed?\n\n```css\ndiv {\n  display: flex;\n  justify-content: center;\n}\n```\nAssume the <div> contains several child elements.",
        "options": [
            {
                "description": "Child elements are centered horizontally within the <div>",
                "isAnswerKey": true
            },
            {
                "description": "Child elements are centered vertically within the <div>",
                "isAnswerKey": false
            },
            {
                "description": "Child elements are spaced evenly within the <div>",
                "isAnswerKey": false
            },
            {
                "description": "Child elements are aligned to the left within the <div>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "513",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "How does CSS specificity affect the following rule?\n\n```css\np#intro {\n  color: green;\n}\np.intro {\n  color: blue;\n}\n```\nWhat will be the color of the paragraph element with id 'intro' and class 'intro'?",
        "options": [
            {
                "description": "green",
                "isAnswerKey": true
            },
            {
                "description": "blue",
                "isAnswerKey": false
            },
            {
                "description": "black",
                "isAnswerKey": false
            },
            {
                "description": "red",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "514",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What effect does setting the CSS property 'overflow: hidden;' have on an element?",
        "options": [
            {
                "description": "Content that overflows the element's box will be hidden",
                "isAnswerKey": true
            },
            {
                "description": "Content that overflows will be visible outside the element's box",
                "isAnswerKey": false
            },
            {
                "description": "Content will be clipped and scrollbars will be added",
                "isAnswerKey": false
            },
            {
                "description": "Content will wrap to fit within the element's box",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "515",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Analyze the following CSS code snippet. What does 'align-items: stretch;' do in a flex container?\n\n```css\ndiv {\n  display: flex;\n  align-items: stretch;\n}\n```",
        "options": [
            {
                "description": "Makes all flex items stretch to fill the flex container's cross-axis",
                "isAnswerKey": true
            },
            {
                "description": "Aligns flex items to the start of the flex container's cross-axis",
                "isAnswerKey": false
            },
            {
                "description": "Aligns flex items to the end of the flex container's cross-axis",
                "isAnswerKey": false
            },
            {
                "description": "Centers flex items in the flex container's cross-axis",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "516",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the effect of the following CSS rule?\n\n```css\nimg {\n  max-width: 100%;\n  height: auto;\n}\n```",
        "options": [
            {
                "description": "Ensures images scale to fit their container while maintaining aspect ratio",
                "isAnswerKey": true
            },
            {
                "description": "Ensures images stretch to fill their container without maintaining aspect ratio",
                "isAnswerKey": false
            },
            {
                "description": "Ensures images shrink to fit their container while maintaining aspect ratio",
                "isAnswerKey": false
            },
            {
                "description": "Ensures images overflow their container",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "517",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the CSS 'z-index' property?",
        "options": [
            {
                "description": "Controls the stacking order of elements",
                "isAnswerKey": true
            },
            {
                "description": "Sets the opacity of an element",
                "isAnswerKey": false
            },
            {
                "description": "Controls the visibility of elements",
                "isAnswerKey": false
            },
            {
                "description": "Sets the background color of an element",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "518",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which CSS property is used to create a shadow effect around an element?",
        "options": [
            {
                "description": "box-shadow",
                "isAnswerKey": true
            },
            {
                "description": "shadow-box",
                "isAnswerKey": false
            },
            {
                "description": "border-shadow",
                "isAnswerKey": false
            },
            {
                "description": "text-shadow",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "519",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What does the CSS property 'position: absolute;' do to an element?",
        "options": [
            {
                "description": "Removes the element from the normal document flow and positions it relative to its closest positioned ancestor",
                "isAnswerKey": true
            },
            {
                "description": "Positions the element relative to its parent container",
                "isAnswerKey": false
            },
            {
                "description": "Keeps the element in the normal document flow",
                "isAnswerKey": false
            },
            {
                "description": "Fixes the element in a specified position relative to the viewport",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "520",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the effect of applying 'display: none;' to an HTML element?",
        "options": [
            {
                "description": "The element will not be displayed and does not occupy any space",
                "isAnswerKey": true
            },
            {
                "description": "The element will be hidden but still occupies space",
                "isAnswerKey": false
            },
            {
                "description": "The element will be visible with reduced opacity",
                "isAnswerKey": false
            },
            {
                "description": "The element will be displayed on top of other elements",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "521",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following CSS code, which selector has the highest specificity?\n\n```css\n#header {\n  color: blue;\n}\n.header {\n  color: green;\n}\nh1 {\n  color: red;\n}\n```",
        "options": [
            {
                "description": "#header",
                "isAnswerKey": true
            },
            {
                "description": ".header",
                "isAnswerKey": false
            },
            {
                "description": "h1",
                "isAnswerKey": false
            },
            {
                "description": "All have equal specificity",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "522",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which CSS pseudo-class is used to style an element when the mouse hovers over it?",
        "options": [
            {
                "description": ":hover",
                "isAnswerKey": true
            },
            {
                "description": ":active",
                "isAnswerKey": false
            },
            {
                "description": ":focus",
                "isAnswerKey": false
            },
            {
                "description": ":visited",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "523",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you center a block element horizontally using CSS?",
        "options": [
            {
                "description": "Use 'margin: auto;' on the block element",
                "isAnswerKey": true
            },
            {
                "description": "Use 'text-align: center;' on the block element",
                "isAnswerKey": false
            },
            {
                "description": "Use 'display: inline;' on the block element",
                "isAnswerKey": false
            },
            {
                "description": "Use 'position: relative;' on the block element",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "524",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the effect of setting 'flex-grow: 1;' on a flex item?",
        "options": [
            {
                "description": "Allows the flex item to grow and fill any remaining space in the flex container",
                "isAnswerKey": true
            },
            {
                "description": "Prevents the flex item from growing",
                "isAnswerKey": false
            },
            {
                "description": "Shrinks the flex item to its smallest possible size",
                "isAnswerKey": false
            },
            {
                "description": "Aligns the flex item to the center of the flex container",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "525",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the purpose of the CSS property 'transform: rotate(45deg);'?",
        "options": [
            {
                "description": "Rotates an element 45 degrees clockwise",
                "isAnswerKey": true
            },
            {
                "description": "Rotates an element 45 degrees counterclockwise",
                "isAnswerKey": false
            },
            {
                "description": "Scales an element by 45%",
                "isAnswerKey": false
            },
            {
                "description": "Skews an element by 45 degrees",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "526",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which CSS property is used to set the space between lines of text?",
        "options": [
            {
                "description": "line-height",
                "isAnswerKey": true
            },
            {
                "description": "letter-spacing",
                "isAnswerKey": false
            },
            {
                "description": "word-spacing",
                "isAnswerKey": false
            },
            {
                "description": "text-spacing",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "527",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "In the CSS box model, which property affects the total width of an element?",
        "options": [
            {
                "description": "margin",
                "isAnswerKey": true
            },
            {
                "description": "padding",
                "isAnswerKey": false
            },
            {
                "description": "border",
                "isAnswerKey": false
            },
            {
                "description": "content",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "528",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which CSS property is used to control the appearance of list items?",
        "options": [
            {
                "description": "list-style",
                "isAnswerKey": true
            },
            {
                "description": "list-decoration",
                "isAnswerKey": false
            },
            {
                "description": "list-spacing",
                "isAnswerKey": false
            },
            {
                "description": "list-format",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "529",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following CSS, what will be the background color of the <div> element?\n\n```css\nbody {\n  background-color: white;\n}\ndiv {\n  background-color: inherit;\n}\n```",
        "options": [
            {
                "description": "white",
                "isAnswerKey": true
            },
            {
                "description": "inherit",
                "isAnswerKey": false
            },
            {
                "description": "transparent",
                "isAnswerKey": false
            },
            {
                "description": "black",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "530",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which CSS pseudo-element is used to style a part of an element's content, such as the first letter?",
        "options": [
            {
                "description": "::first-letter",
                "isAnswerKey": true
            },
            {
                "description": "::first-line",
                "isAnswerKey": false
            },
            {
                "description": "::before",
                "isAnswerKey": false
            },
            {
                "description": "::after",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "531",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the effect of using 'position: fixed;' on an element?",
        "options": [
            {
                "description": "Fixes the element in a specified position relative to the viewport, unaffected by scrolling",
                "isAnswerKey": true
            },
            {
                "description": "Keeps the element in the normal document flow",
                "isAnswerKey": false
            },
            {
                "description": "Positions the element relative to its parent container",
                "isAnswerKey": false
            },
            {
                "description": "Removes the element from the normal document flow, positioning it relative to its closest positioned ancestor",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "532",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you make a flex container's items stack vertically?",
        "options": [
            {
                "description": "Set 'flex-direction: column;' on the flex container",
                "isAnswerKey": true
            },
            {
                "description": "Set 'justify-content: center;' on the flex container",
                "isAnswerKey": false
            },
            {
                "description": "Set 'align-items: start;' on the flex container",
                "isAnswerKey": false
            },
            {
                "description": "Set 'flex-wrap: wrap;' on the flex container",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "533",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which CSS property can be used to make a responsive layout?",
        "options": [
            {
                "description": "media queries",
                "isAnswerKey": true
            },
            {
                "description": "position",
                "isAnswerKey": false
            },
            {
                "description": "float",
                "isAnswerKey": false
            },
            {
                "description": "z-index",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "534",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the purpose of 'calc()' function in CSS?",
        "options": [
            {
                "description": "To perform calculations to determine CSS property values",
                "isAnswerKey": true
            },
            {
                "description": "To apply conditional logic on CSS styles",
                "isAnswerKey": false
            },
            {
                "description": "To concatenate multiple CSS values",
                "isAnswerKey": false
            },
            {
                "description": "To validate CSS syntax",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "535",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you apply styles to an element based on its attribute value?",
        "options": [
            {
                "description": "Use attribute selectors in CSS",
                "isAnswerKey": true
            },
            {
                "description": "Use class selectors in CSS",
                "isAnswerKey": false
            },
            {
                "description": "Use ID selectors in CSS",
                "isAnswerKey": false
            },
            {
                "description": "Use universal selectors in CSS",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "536",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which CSS property is used to create a gradient background?",
        "options": [
            {
                "description": "background-image: linear-gradient()",
                "isAnswerKey": true
            },
            {
                "description": "background-color: gradient()",
                "isAnswerKey": false
            },
            {
                "description": "background-gradient: linear()",
                "isAnswerKey": false
            },
            {
                "description": "background: gradient()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "537",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the purpose of the 'content' property in CSS?",
        "options": [
            {
                "description": "To insert content before or after an element in conjunction with pseudo-elements",
                "isAnswerKey": true
            },
            {
                "description": "To set the inner text of an element",
                "isAnswerKey": false
            },
            {
                "description": "To style the content of an element",
                "isAnswerKey": false
            },
            {
                "description": "To determine the visibility of an element",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "538",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which CSS property is used to control the alignment of text?",
        "options": [
            {
                "description": "text-align",
                "isAnswerKey": true
            },
            {
                "description": "vertical-align",
                "isAnswerKey": false
            },
            {
                "description": "align-content",
                "isAnswerKey": false
            },
            {
                "description": "align-items",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "539",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What effect does 'backface-visibility: hidden;' have when applied to an element?",
        "options": [
            {
                "description": "Hides the back face of an element when it is rotated",
                "isAnswerKey": true
            },
            {
                "description": "Hides the front face of an element",
                "isAnswerKey": false
            },
            {
                "description": "Makes the element transparent",
                "isAnswerKey": false
            },
            {
                "description": "Disables element visibility",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "540",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which CSS property is used to specify whether or not an element is visible?",
        "options": [
            {
                "description": "visibility",
                "isAnswerKey": true
            },
            {
                "description": "display",
                "isAnswerKey": false
            },
            {
                "description": "opacity",
                "isAnswerKey": false
            },
            {
                "description": "z-index",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "541",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "When refactoring CSS for performance, which practice is most effective?",
        "options": [
            {
                "description": "Minimize the use of universal selectors (*)",
                "isAnswerKey": true
            },
            {
                "description": "Use inline styles for all elements",
                "isAnswerKey": false
            },
            {
                "description": "Use IDs instead of classes for styling",
                "isAnswerKey": false
            },
            {
                "description": "Maximize the use of !important for overriding styles",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "542",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which CSS design pattern is best for creating a maintainable and scalable codebase?",
        "options": [
            {
                "description": "BEM (Block Element Modifier)",
                "isAnswerKey": true
            },
            {
                "description": "Inline styles",
                "isAnswerKey": false
            },
            {
                "description": "CSS Grid",
                "isAnswerKey": false
            },
            {
                "description": "CSS Flexbox",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "543",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which CSS feature can be used to ensure consistent styling across different browsers?",
        "options": [
            {
                "description": "CSS reset",
                "isAnswerKey": true
            },
            {
                "description": "CSS transitions",
                "isAnswerKey": false
            },
            {
                "description": "CSS variables",
                "isAnswerKey": false
            },
            {
                "description": "CSS animations",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "544",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the advantage of using CSS pre-processors like SASS or LESS?",
        "options": [
            {
                "description": "They provide functionalities like variables and nesting that vanilla CSS does not",
                "isAnswerKey": true
            },
            {
                "description": "They automatically optimize CSS for performance",
                "isAnswerKey": false
            },
            {
                "description": "They provide browser compatibility for older browsers",
                "isAnswerKey": false
            },
            {
                "description": "They enable inline styling",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "545",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can CSS modules help in managing large-scale applications?",
        "options": [
            {
                "description": "By ensuring CSS class names are locally scoped by default",
                "isAnswerKey": true
            },
            {
                "description": "By enabling CSS styles to be written in JavaScript",
                "isAnswerKey": false
            },
            {
                "description": "By allowing inline styles to be used more effectively",
                "isAnswerKey": false
            },
            {
                "description": "By automatically minifying CSS code",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "546",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is a benefit of using CSS Grid for layout design?",
        "options": [
            {
                "description": "Enables complex layouts with minimal code",
                "isAnswerKey": true
            },
            {
                "description": "Improves browser compatibility",
                "isAnswerKey": false
            },
            {
                "description": "Automatically optimizes performance",
                "isAnswerKey": false
            },
            {
                "description": "Allows animated transitions",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "547",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which CSS concept helps in managing state-based styles effectively?",
        "options": [
            {
                "description": "CSS variables",
                "isAnswerKey": true
            },
            {
                "description": "CSS transitions",
                "isAnswerKey": false
            },
            {
                "description": "CSS animations",
                "isAnswerKey": false
            },
            {
                "description": "CSS specificity",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "548",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is a key feature of CSS Flexbox that enhances layout flexibility?",
        "options": [
            {
                "description": "Allows items to be aligned and distributed along a single axis",
                "isAnswerKey": true
            },
            {
                "description": "Provides browser compatibility for older browsers",
                "isAnswerKey": false
            },
            {
                "description": "Enables responsive fonts",
                "isAnswerKey": false
            },
            {
                "description": "Enables CSS transitions",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "549",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which approach is most effective for reducing CSS file size in production?",
        "options": [
            {
                "description": "CSS minification",
                "isAnswerKey": true
            },
            {
                "description": "Using inline styles",
                "isAnswerKey": false
            },
            {
                "description": "Increasing specificity",
                "isAnswerKey": false
            },
            {
                "description": "Adding comments for documentation",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "550",
        "skill": "css",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which CSS feature allows the creation of dynamic, state-based styling?",
        "options": [
            {
                "description": "CSS pseudo-classes",
                "isAnswerKey": true
            },
            {
                "description": "CSS transitions",
                "isAnswerKey": false
            },
            {
                "description": "CSS animations",
                "isAnswerKey": false
            },
            {
                "description": "CSS specificity",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "551",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS design pattern would be most appropriate for maintaining a consistent layout grid across pages?",
        "options": [
            {
                "description": "BEM (Block Element Modifier)",
                "isAnswerKey": false
            },
            {
                "description": "CSS Grid Layout",
                "isAnswerKey": true
            },
            {
                "description": "Flexbox Layout",
                "isAnswerKey": false
            },
            {
                "description": "CSS Variables",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "552",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In a production environment, which CSS strategy is best for handling responsiveness across different devices?",
        "options": [
            {
                "description": "Using fixed pixel values",
                "isAnswerKey": false
            },
            {
                "description": "Using media queries and relative units",
                "isAnswerKey": true
            },
            {
                "description": "Using CSS floats",
                "isAnswerKey": false
            },
            {
                "description": "Using inline styles",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "553",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which method is most effective for reducing CSS file size in a large-scale project?",
        "options": [
            {
                "description": "Using CSS preprocessors like SASS",
                "isAnswerKey": false
            },
            {
                "description": "Minifying CSS files",
                "isAnswerKey": true
            },
            {
                "description": "Using CSS-in-JS libraries",
                "isAnswerKey": false
            },
            {
                "description": "Using CSS frameworks",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "554",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the best practice for applying styles to a component that needs to be reused across multiple projects?",
        "options": [
            {
                "description": "Using inline styles",
                "isAnswerKey": false
            },
            {
                "description": "Using a design system with shared components",
                "isAnswerKey": true
            },
            {
                "description": "Using ID selectors",
                "isAnswerKey": false
            },
            {
                "description": "Using CSS resets",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "555",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "For a senior developer, what is the recommended approach for ensuring CSS code maintainability?",
        "options": [
            {
                "description": "Using CSS-in-JS",
                "isAnswerKey": false
            },
            {
                "description": "Adopting a naming convention like BEM or SMACSS",
                "isAnswerKey": true
            },
            {
                "description": "Using global styles",
                "isAnswerKey": false
            },
            {
                "description": "Using inline styles extensively",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "556",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In CSS architecture, which strategy is most effective for managing complex animations?",
        "options": [
            {
                "description": "Using CSS keyframes",
                "isAnswerKey": false
            },
            {
                "description": "Leverage CSS transitions with JavaScript interactivity",
                "isAnswerKey": true
            },
            {
                "description": "Using CSS-only solutions",
                "isAnswerKey": false
            },
            {
                "description": "Using CSS Grid",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "557",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which CSS technique is most suitable for creating a fluid and responsive layout?",
        "options": [
            {
                "description": "Using fixed widths",
                "isAnswerKey": false
            },
            {
                "description": "Using percentage-based widths",
                "isAnswerKey": true
            },
            {
                "description": "Using pixel values",
                "isAnswerKey": false
            },
            {
                "description": "Using table layout",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "558",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which approach is best for implementing CSS to ensure scalability in a large codebase?",
        "options": [
            {
                "description": "Using inline styles",
                "isAnswerKey": false
            },
            {
                "description": "Using modular CSS components",
                "isAnswerKey": true
            },
            {
                "description": "Using a single global stylesheet",
                "isAnswerKey": false
            },
            {
                "description": "Using CSS floats for layout",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "559",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the most efficient way to handle CSS specificity issues in a large project?",
        "options": [
            {
                "description": "Using !important",
                "isAnswerKey": false
            },
            {
                "description": "Refactoring CSS selectors to reduce specificity",
                "isAnswerKey": true
            },
            {
                "description": "Using inline styles",
                "isAnswerKey": false
            },
            {
                "description": "Increasing specificity by using ID selectors",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "560",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In CSS, which method is recommended for implementing themes across different sections of a web application?",
        "options": [
            {
                "description": "Using CSS variables",
                "isAnswerKey": true
            },
            {
                "description": "Using inline styles",
                "isAnswerKey": false
            },
            {
                "description": "Using ID selectors",
                "isAnswerKey": false
            },
            {
                "description": "Using CSS floats",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "561",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the following CSS code snippet, identify the issue that might cause a memory leak:\n\n```css\nbody {\n  background-image: url('large-image.jpg');\n  background-size: cover;\n  animation: rotate 10s infinite linear;\n}\n\n@keyframes rotate {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n```",
        "options": [
            {
                "description": "Using a large image file",
                "isAnswerKey": false
            },
            {
                "description": "Infinite animation might cause memory issues",
                "isAnswerKey": true
            },
            {
                "description": "Using background-size: cover",
                "isAnswerKey": false
            },
            {
                "description": "Using linear animation",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "562",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Examine the following CSS code snippet for a flex container. What is the effect of using `align-items: center`?\n\n```css\n.container {\n  display: flex;\n  align-items: center;\n}\n```",
        "options": [
            {
                "description": "Centers the flex items horizontally",
                "isAnswerKey": false
            },
            {
                "description": "Centers the flex items vertically",
                "isAnswerKey": true
            },
            {
                "description": "Starts the flex items from the top",
                "isAnswerKey": false
            },
            {
                "description": "Justifies the flex items evenly",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "563",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the CSS property that can be used to prevent text from overflowing out of a container?",
        "options": [
            {
                "description": "text-align",
                "isAnswerKey": false
            },
            {
                "description": "overflow-wrap",
                "isAnswerKey": true
            },
            {
                "description": "word-spacing",
                "isAnswerKey": false
            },
            {
                "description": "letter-spacing",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "564",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "In a CSS file, how would you create a responsive layout that adjusts based on the viewport width using media queries?",
        "options": [
            {
                "description": "Using fixed width values",
                "isAnswerKey": false
            },
            {
                "description": "Using media queries with max-width conditions",
                "isAnswerKey": true
            },
            {
                "description": "Using CSS floats",
                "isAnswerKey": false
            },
            {
                "description": "Using ID selectors",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "565",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the CSS `will-change` property in optimizing performance?",
        "options": [
            {
                "description": "To change the style of elements dynamically",
                "isAnswerKey": false
            },
            {
                "description": "To hint the browser for upcoming changes to elements",
                "isAnswerKey": true
            },
            {
                "description": "To apply conditional styling",
                "isAnswerKey": false
            },
            {
                "description": "To control animation speed",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "566",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which CSS property is essential for creating an accessible and flexible grid layout?",
        "options": [
            {
                "description": "display: block",
                "isAnswerKey": false
            },
            {
                "description": "display: grid",
                "isAnswerKey": true
            },
            {
                "description": "display: inline",
                "isAnswerKey": false
            },
            {
                "description": "display: flex",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "567",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Identify the correct CSS pseudo-class to apply styles when an element is in focus:\n\n```css\ninput:____ {\n  border: 1px solid #000;\n}\n```",
        "options": [
            {
                "description": "hover",
                "isAnswerKey": false
            },
            {
                "description": "focus",
                "isAnswerKey": true
            },
            {
                "description": "active",
                "isAnswerKey": false
            },
            {
                "description": "visited",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "568",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What CSS technique should be used to ensure text inside a container is vertically centered?",
        "options": [
            {
                "description": "Using text-align: center",
                "isAnswerKey": false
            },
            {
                "description": "Using flexbox with align-items: center",
                "isAnswerKey": true
            },
            {
                "description": "Using position: absolute",
                "isAnswerKey": false
            },
            {
                "description": "Using vertical-align: middle",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "569",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "In CSS, what is the effect of using `position: sticky` on an element?",
        "options": [
            {
                "description": "The element will be removed from the document flow",
                "isAnswerKey": false
            },
            {
                "description": "The element will scroll with the page until a specified offset is reached",
                "isAnswerKey": true
            },
            {
                "description": "The element will be positioned at the top of the page",
                "isAnswerKey": false
            },
            {
                "description": "The element will be fixed relative to the viewport",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "570",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which CSS method is most appropriate for ensuring scalable and reusable styles in a large-scale application?",
        "options": [
            {
                "description": "Using inline styles",
                "isAnswerKey": false
            },
            {
                "description": "Using CSS modules",
                "isAnswerKey": true
            },
            {
                "description": "Using style tags in HTML",
                "isAnswerKey": false
            },
            {
                "description": "Using CSS resets",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "571",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Examine the following CSS snippet. How can you refactor this code to improve its performance?\n\n```css\n.card {\n  transition: box-shadow 0.3s ease-in-out;\n}\n.card:hover {\n  box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n}\n```",
        "options": [
            {
                "description": "Remove the transition property",
                "isAnswerKey": false
            },
            {
                "description": "Use `will-change: box-shadow` to optimize rendering",
                "isAnswerKey": true
            },
            {
                "description": "Increase the transition duration",
                "isAnswerKey": false
            },
            {
                "description": "Use a fixed box-shadow value",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "572",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given a CSS Grid layout, how would you ensure that the grid items adjust their size proportionally?\n\n```css\n.grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n}\n```",
        "options": [
            {
                "description": "Add fixed width to grid items",
                "isAnswerKey": false
            },
            {
                "description": "Use relative units like percentages or `fr` units",
                "isAnswerKey": true
            },
            {
                "description": "Use grid-template-areas",
                "isAnswerKey": false
            },
            {
                "description": "Apply `auto` width to grid items",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "573",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the most efficient way to apply CSS styles to multiple elements without repetition?",
        "options": [
            {
                "description": "Use inline styles",
                "isAnswerKey": false
            },
            {
                "description": "Use a CSS class",
                "isAnswerKey": true
            },
            {
                "description": "Use ID selectors",
                "isAnswerKey": false
            },
            {
                "description": "Use universal selectors",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "574",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which CSS property is used to control the distribution of space between and around content items in a flex container?",
        "options": [
            {
                "description": "align-items",
                "isAnswerKey": false
            },
            {
                "description": "justify-content",
                "isAnswerKey": true
            },
            {
                "description": "flex-direction",
                "isAnswerKey": false
            },
            {
                "description": "flex-wrap",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "575",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you optimize CSS for a large-scale web application to minimize render blocking?",
        "options": [
            {
                "description": "Using CSS floats",
                "isAnswerKey": false
            },
            {
                "description": "Load CSS asynchronously using media queries",
                "isAnswerKey": true
            },
            {
                "description": "Using inline styles",
                "isAnswerKey": false
            },
            {
                "description": "Use global styles only",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "576",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the CSS property used to create space between the border and the content of an element?",
        "options": [
            {
                "description": "margin",
                "isAnswerKey": false
            },
            {
                "description": "padding",
                "isAnswerKey": true
            },
            {
                "description": "border",
                "isAnswerKey": false
            },
            {
                "description": "outline",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "577",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which CSS feature allows you to reuse a set of properties multiple times within a stylesheet?",
        "options": [
            {
                "description": "CSS variables",
                "isAnswerKey": true
            },
            {
                "description": "CSS inline styles",
                "isAnswerKey": false
            },
            {
                "description": "CSS selectors",
                "isAnswerKey": false
            },
            {
                "description": "CSS IDs",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "578",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "In CSS, which property controls the stacking order of positioned elements?",
        "options": [
            {
                "description": "position",
                "isAnswerKey": false
            },
            {
                "description": "z-index",
                "isAnswerKey": true
            },
            {
                "description": "display",
                "isAnswerKey": false
            },
            {
                "description": "overflow",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "579",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which CSS method is most appropriate for customizing scrollbar appearance in web applications?",
        "options": [
            {
                "description": "Using CSS variables",
                "isAnswerKey": false
            },
            {
                "description": "Using ::webkit-scrollbar pseudo-element",
                "isAnswerKey": true
            },
            {
                "description": "Using CSS transitions",
                "isAnswerKey": false
            },
            {
                "description": "Using CSS Grid",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "580",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following CSS snippet, how would you refactor it to improve maintainability?\n\n```css\n.button {\n  color: white;\n  background-color: blue;\n  padding: 10px 20px;\n  border-radius: 5px;\n}\n.button-primary {\n  color: white;\n  background-color: blue;\n  padding: 10px 20px;\n  border-radius: 5px;\n}\n```",
        "options": [
            {
                "description": "Use inline styles",
                "isAnswerKey": false
            },
            {
                "description": "Create a common class and extend it",
                "isAnswerKey": true
            },
            {
                "description": "Use IDs for styling",
                "isAnswerKey": false
            },
            {
                "description": "Add more specificity to selectors",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "581",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "A large-scale application suffers from inconsistent styling across components. What refactoring technique can ensure uniformity?",
        "options": [
            {
                "description": "Use inline styles",
                "isAnswerKey": false
            },
            {
                "description": "Implement a design system",
                "isAnswerKey": true
            },
            {
                "description": "Use local styles for each component",
                "isAnswerKey": false
            },
            {
                "description": "Increase specificity in CSS selectors",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "582",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can a senior developer optimize CSS to reduce cumulative layout shifts (CLS) in a web application?",
        "options": [
            {
                "description": "Avoid specifying width and height for images",
                "isAnswerKey": false
            },
            {
                "description": "Specify exact width and height for media elements",
                "isAnswerKey": true
            },
            {
                "description": "Use CSS floats for layout",
                "isAnswerKey": false
            },
            {
                "description": "Use global styles",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "583",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In a CSS file with multiple conflicting styles, what approach should be taken to resolve specificity issues?",
        "options": [
            {
                "description": "Increase specificity using !important",
                "isAnswerKey": false
            },
            {
                "description": "Refactor CSS to reduce specificity",
                "isAnswerKey": true
            },
            {
                "description": "Use inline styles to override",
                "isAnswerKey": false
            },
            {
                "description": "Add more CSS rules to increase specificity",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "584",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the best approach to refactor legacy CSS code in a large project to improve maintainability?",
        "options": [
            {
                "description": "Use inline styles for quick fixes",
                "isAnswerKey": false
            },
            {
                "description": "Implement a modular CSS architecture",
                "isAnswerKey": true
            },
            {
                "description": "Use ID selectors for more specificity",
                "isAnswerKey": false
            },
            {
                "description": "Use CSS resets extensively",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "585",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How would you address performance issues caused by excessive CSS animations in a web application?",
        "options": [
            {
                "description": "Increase animation duration",
                "isAnswerKey": false
            },
            {
                "description": "Reduce the number of animated elements and use hardware-accelerated properties",
                "isAnswerKey": true
            },
            {
                "description": "Use CSS keyframes extensively",
                "isAnswerKey": false
            },
            {
                "description": "Add more transitions",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "586",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "When refactoring CSS code, how can you ensure that the styles are applied consistently across different browsers?",
        "options": [
            {
                "description": "Use browser-specific prefixes extensively",
                "isAnswerKey": false
            },
            {
                "description": "Use a CSS normalization library",
                "isAnswerKey": true
            },
            {
                "description": "Use inline styles for each element",
                "isAnswerKey": false
            },
            {
                "description": "Rely on default browser styles",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "587",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In a large-scale application, what is a recommended approach to manage style conflicts between different components?",
        "options": [
            {
                "description": "Use global CSS styles",
                "isAnswerKey": false
            },
            {
                "description": "Implement component-scoped styles",
                "isAnswerKey": true
            },
            {
                "description": "Use inline styles for components",
                "isAnswerKey": false
            },
            {
                "description": "Add !important to all styles",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "588",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can CSS be refactored to improve performance by reducing reflows and repaints?",
        "options": [
            {
                "description": "Use CSS floats for layout",
                "isAnswerKey": false
            },
            {
                "description": "Minimize changes to layout properties and use transform and opacity",
                "isAnswerKey": true
            },
            {
                "description": "Use !important on all styles",
                "isAnswerKey": false
            },
            {
                "description": "Increase specificity of selectors",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "589",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is a best practice for reducing CSS file size when refactoring code in a large application?",
        "options": [
            {
                "description": "Use CSS floats extensively",
                "isAnswerKey": false
            },
            {
                "description": "Use CSS minifiers and remove unused styles",
                "isAnswerKey": true
            },
            {
                "description": "Add more specific selectors",
                "isAnswerKey": false
            },
            {
                "description": "Use inline styles",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "590",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you ensure CSS code is modular and scalable in a large project?",
        "options": [
            {
                "description": "Use inline styles for each component",
                "isAnswerKey": false
            },
            {
                "description": "Use a CSS preprocessor like SASS for modularization",
                "isAnswerKey": true
            },
            {
                "description": "Use CSS resets for all components",
                "isAnswerKey": false
            },
            {
                "description": "Increase specificity of selectors",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "591",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "A web application has persistent issues with inconsistent styling across different teams. What systemic solution can address this at scale?",
        "options": [
            {
                "description": "Use inline styles to ensure consistency",
                "isAnswerKey": false
            },
            {
                "description": "Implement a centralized design system and enforce its usage",
                "isAnswerKey": true
            },
            {
                "description": "Add more specific CSS rules across the application",
                "isAnswerKey": false
            },
            {
                "description": "Use CSS floats for layout consistency",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "592",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can a senior developer enforce consistent CSS practices across multiple teams working on a large-scale application?",
        "options": [
            {
                "description": "Allow each team to use their preferred styles",
                "isAnswerKey": false
            },
            {
                "description": "Develop and implement coding standards and guidelines",
                "isAnswerKey": true
            },
            {
                "description": "Use !important for all styles",
                "isAnswerKey": false
            },
            {
                "description": "Use inline styles for quick consistency",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "593",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "In a large-scale application, recurring CSS issues arise due to lack of modularity. What is the best approach to address this?",
        "options": [
            {
                "description": "Use inline styles for modularity",
                "isAnswerKey": false
            },
            {
                "description": "Refactor the styles using a CSS preprocessor to promote modularity",
                "isAnswerKey": true
            },
            {
                "description": "Increase specificity for all selectors",
                "isAnswerKey": false
            },
            {
                "description": "Use global styles extensively",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "594",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you ensure that CSS in a large project remains scalable and maintainable over time?",
        "options": [
            {
                "description": "Use inline styles for quick fixes",
                "isAnswerKey": false
            },
            {
                "description": "Implement a component-based architecture and use CSS modules",
                "isAnswerKey": true
            },
            {
                "description": "Add more specific selectors",
                "isAnswerKey": false
            },
            {
                "description": "Use CSS floats extensively",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "595",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is a sustainable approach to manage CSS tech debt in a growing application?",
        "options": [
            {
                "description": "Add more global styles",
                "isAnswerKey": false
            },
            {
                "description": "Regularly refactor styles and implement a design system",
                "isAnswerKey": true
            },
            {
                "description": "Use inline styles to override issues",
                "isAnswerKey": false
            },
            {
                "description": "Use CSS resets extensively",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "596",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What architectural pattern is recommended for handling complex CSS across multiple teams?",
        "options": [
            {
                "description": "Use inline styles",
                "isAnswerKey": false
            },
            {
                "description": "Adopt a CSS-in-JS approach for improved modularity and encapsulation",
                "isAnswerKey": true
            },
            {
                "description": "Use CSS floats for layout",
                "isAnswerKey": false
            },
            {
                "description": "Increase specificity in CSS selectors",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "597",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you systematically address CSS performance issues in a production environment?",
        "options": [
            {
                "description": "Add more CSS transitions",
                "isAnswerKey": false
            },
            {
                "description": "Audit and optimize CSS by reducing complexity and leveraging hardware-accelerated properties",
                "isAnswerKey": true
            },
            {
                "description": "Use inline styles for faster rendering",
                "isAnswerKey": false
            },
            {
                "description": "Increase specificity of all styles",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "598",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "In a large-scale CSS project, how can you ensure efficient collaboration across teams?",
        "options": [
            {
                "description": "Use inline styles for quick changes",
                "isAnswerKey": false
            },
            {
                "description": "Establish a shared design system and use version control for styles",
                "isAnswerKey": true
            },
            {
                "description": "Use CSS floats for layout",
                "isAnswerKey": false
            },
            {
                "description": "Increase specificity of selectors",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "599",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Given persistent CSS issues in a web application, what is a strategic approach to ensure long-term maintainability?",
        "options": [
            {
                "description": "Use inline styles extensively",
                "isAnswerKey": false
            },
            {
                "description": "Implement a CSS architecture with modular and reusable components",
                "isAnswerKey": true
            },
            {
                "description": "Add more specific selectors",
                "isAnswerKey": false
            },
            {
                "description": "Use CSS resets extensively",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "600",
        "skill": "css",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can a senior developer proactively manage CSS code quality in a large team setting?",
        "options": [
            {
                "description": "Use inline styles to enforce consistency",
                "isAnswerKey": false
            },
            {
                "description": "Regularly conduct code reviews and enforce style guidelines",
                "isAnswerKey": true
            },
            {
                "description": "Use CSS floats for layout consistency",
                "isAnswerKey": false
            },
            {
                "description": "Add !important to all styles",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "601",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is a correct way to declare a variable in JavaScript?",
        "options": [
            {
                "description": "var myVar;",
                "isAnswerKey": true
            },
            {
                "description": "variable myVar;",
                "isAnswerKey": false
            },
            {
                "description": "v myVar;",
                "isAnswerKey": false
            },
            {
                "description": "declare myVar;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "602",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the output of the following code snippet?\n\n```js\nconsole.log(typeof null);\n```",
        "options": [
            {
                "description": "\"null\"",
                "isAnswerKey": false
            },
            {
                "description": "\"object\"",
                "isAnswerKey": true
            },
            {
                "description": "\"undefined\"",
                "isAnswerKey": false
            },
            {
                "description": "\"number\"",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "603",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of these is a valid JavaScript data type?",
        "options": [
            {
                "description": "integer",
                "isAnswerKey": false
            },
            {
                "description": "char",
                "isAnswerKey": false
            },
            {
                "description": "symbol",
                "isAnswerKey": true
            },
            {
                "description": "byte",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "604",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Identify the syntax error in the following code snippet:\n\n```js\nfunction greet() {\n  console.log('Hello);\n}\n```",
        "options": [
            {
                "description": "Missing semicolon after console.log()",
                "isAnswerKey": false
            },
            {
                "description": "Missing opening brace for function",
                "isAnswerKey": false
            },
            {
                "description": "Unmatched single quote in string",
                "isAnswerKey": true
            },
            {
                "description": "console.log is not defined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "605",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```js\nlet x = 10;\nconsole.log(x++);\n```",
        "options": [
            {
                "description": "10",
                "isAnswerKey": true
            },
            {
                "description": "11",
                "isAnswerKey": false
            },
            {
                "description": "9",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "606",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is an invalid variable name in JavaScript?",
        "options": [
            {
                "description": "_myVar",
                "isAnswerKey": false
            },
            {
                "description": "var",
                "isAnswerKey": true
            },
            {
                "description": "myVar1",
                "isAnswerKey": false
            },
            {
                "description": "my_var",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "607",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "How would you convert a string '123' to a number in JavaScript?",
        "options": [
            {
                "description": "Number('123')",
                "isAnswerKey": true
            },
            {
                "description": "String(123)",
                "isAnswerKey": false
            },
            {
                "description": "parseInt(123)",
                "isAnswerKey": false
            },
            {
                "description": "'123'.toNumber()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "608",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following operators is used to check if two values are equal in type and value?",
        "options": [
            {
                "description": "==",
                "isAnswerKey": false
            },
            {
                "description": "::",
                "isAnswerKey": false
            },
            {
                "description": "===",
                "isAnswerKey": true
            },
            {
                "description": "=",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "609",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```js\nlet arr = [1, 2, 3];\nconsole.log(arr[3]);\n```",
        "options": [
            {
                "description": "undefined",
                "isAnswerKey": true
            },
            {
                "description": "3",
                "isAnswerKey": false
            },
            {
                "description": "0",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "610",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which statement will check if a variable 'myVar' is not undefined?",
        "options": [
            {
                "description": "if (myVar !== undefined)",
                "isAnswerKey": true
            },
            {
                "description": "if (myVar =! undefined)",
                "isAnswerKey": false
            },
            {
                "description": "if (myVar is defined)",
                "isAnswerKey": false
            },
            {
                "description": "if (myVar not undefined)",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "611",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will the following code output?\n\n```js\nlet a = '5';\nlet b = 5;\nconsole.log(a == b);\n```",
        "options": [
            {
                "description": "true",
                "isAnswerKey": true
            },
            {
                "description": "false",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "612",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be logged to the console?\n\n```js\nlet num = 0;\nfor (let i = 0; i < 5; i++) {\n  num += i;\n}\nconsole.log(num);\n```",
        "options": [
            {
                "description": "10",
                "isAnswerKey": true
            },
            {
                "description": "15",
                "isAnswerKey": false
            },
            {
                "description": "5",
                "isAnswerKey": false
            },
            {
                "description": "0",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "613",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following statements will correctly loop through an array 'arr'?",
        "options": [
            {
                "description": "for (let i = 0; i <= arr.length; i++) {}",
                "isAnswerKey": false
            },
            {
                "description": "for (let i = 0; i < arr.length; i++) {}",
                "isAnswerKey": true
            },
            {
                "description": "for (let i = 1; i < arr.length; i++) {}",
                "isAnswerKey": false
            },
            {
                "description": "for (let i = 1; i <= arr.length; i++) {}",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "614",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Consider the following function. What will it return when called with the argument 5?\n\n```js\nfunction multiplyByTwo(n) {\n  return n * 2;\n}\n```",
        "options": [
            {
                "description": "10",
                "isAnswerKey": true
            },
            {
                "description": "25",
                "isAnswerKey": false
            },
            {
                "description": "7",
                "isAnswerKey": false
            },
            {
                "description": "2",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "615",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What does the following code evaluate to?\n\n```js\nlet isTrue = false;\nif (!isTrue) {\n  console.log('Success');\n}\n```",
        "options": [
            {
                "description": "'Success'",
                "isAnswerKey": true
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "'Failure'",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "616",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following code snippets will correctly display each element of an array 'items' on a new line?",
        "options": [
            {
                "description": "items.forEach(item => console.log(item));",
                "isAnswerKey": true
            },
            {
                "description": "items.each(item => console.log(item));",
                "isAnswerKey": false
            },
            {
                "description": "forEach(item in items) { console.log(item); }",
                "isAnswerKey": false
            },
            {
                "description": "items.forEach(item => { item.print(); });",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "617",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the following code snippet, what will be the output?\n\n```js\nlet x = 1;\nlet y = '1';\nconsole.log(x === y);\n```",
        "options": [
            {
                "description": "false",
                "isAnswerKey": true
            },
            {
                "description": "true",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "null",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "618",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Consider the following loop. How many times will 'Hello' be logged to the console?\n\n```js\nfor (let i = 0; i < 3; i++) {\n  console.log('Hello');\n}\n```",
        "options": [
            {
                "description": "3",
                "isAnswerKey": true
            },
            {
                "description": "2",
                "isAnswerKey": false
            },
            {
                "description": "4",
                "isAnswerKey": false
            },
            {
                "description": "1",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "619",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the output of the following code?\n\n```js\nlet data = [1, 2, 3];\ndata.push(4);\nconsole.log(data);\n```",
        "options": [
            {
                "description": "[1, 2, 3, 4]",
                "isAnswerKey": true
            },
            {
                "description": "[1, 2, 3]",
                "isAnswerKey": false
            },
            {
                "description": "[4, 1, 2, 3]",
                "isAnswerKey": false
            },
            {
                "description": "[1, 2, 3], [4]",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "620",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the result of the following code?\n\n```js\nlet a = 'Hello';\nlet b = a;\na = 'World';\nconsole.log(b);\n```",
        "options": [
            {
                "description": "'Hello'",
                "isAnswerKey": true
            },
            {
                "description": "'World'",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "621",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Write a function that returns the sum of two numbers. Which of the following implementations is correct?\n\n```js\nfunction sum(a, b) {\n  // code here\n}\n```",
        "options": [
            {
                "description": "return a + b;",
                "isAnswerKey": true
            },
            {
                "description": "return a - b;",
                "isAnswerKey": false
            },
            {
                "description": "return a * b;",
                "isAnswerKey": false
            },
            {
                "description": "return a / b;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "622",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following code snippets correctly reverses an array?\n\n```js\nlet arr = [1, 2, 3];\n// code here\n```",
        "options": [
            {
                "description": "arr.reverse();",
                "isAnswerKey": true
            },
            {
                "description": "arr.revert();",
                "isAnswerKey": false
            },
            {
                "description": "arr.invert();",
                "isAnswerKey": false
            },
            {
                "description": "arr.flip();",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "623",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following array, how would you access the value '3'?\n\n```js\nlet numbers = [1, 2, 3, 4];\n```",
        "options": [
            {
                "description": "numbers[2]",
                "isAnswerKey": true
            },
            {
                "description": "numbers[3]",
                "isAnswerKey": false
            },
            {
                "description": "numbers.get(2)",
                "isAnswerKey": false
            },
            {
                "description": "numbers(3)",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "624",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Consider the following code. What is the value of 'result'?\n\n```js\nlet result = 1;\nfunction calculate(num) {\n  return num + 5;\n}\nresult = calculate(5);\n```",
        "options": [
            {
                "description": "10",
                "isAnswerKey": true
            },
            {
                "description": "5",
                "isAnswerKey": false
            },
            {
                "description": "6",
                "isAnswerKey": false
            },
            {
                "description": "1",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "625",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the output of the following function when called with arguments 2 and 3?\n\n```js\nfunction multiply(x, y) {\n  return x * y;\n}\nconsole.log(multiply(2, 3));\n```",
        "options": [
            {
                "description": "6",
                "isAnswerKey": true
            },
            {
                "description": "5",
                "isAnswerKey": false
            },
            {
                "description": "10",
                "isAnswerKey": false
            },
            {
                "description": "8",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "626",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following code snippets correctly filters an array to remove all values below 3?\n\n```js\nlet arr = [1, 2, 3, 4];\n// code here\n```",
        "options": [
            {
                "description": "arr.filter(x => x >= 3);",
                "isAnswerKey": true
            },
            {
                "description": "arr.filter(x => x > 3);",
                "isAnswerKey": false
            },
            {
                "description": "arr.filter(x => x < 3);",
                "isAnswerKey": false
            },
            {
                "description": "arr.filter(x => x == 3);",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "627",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "How would you write a recursive function to calculate the factorial of a number in JavaScript?",
        "options": [
            {
                "description": "function factorial(n) { return n ? n * factorial(n - 1) : 1; }",
                "isAnswerKey": true
            },
            {
                "description": "function factorial(n) { return n * factorial(n + 1); }",
                "isAnswerKey": false
            },
            {
                "description": "function factorial(n) { return n - factorial(n - 1); }",
                "isAnswerKey": false
            },
            {
                "description": "function factorial(n) { return factorial(n - 1) * 1; }",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "628",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the correct way to write a function that returns the square of a number in JavaScript?",
        "options": [
            {
                "description": "function square(x) { return x * x; }",
                "isAnswerKey": true
            },
            {
                "description": "function square(x) { return x + x; }",
                "isAnswerKey": false
            },
            {
                "description": "function square(x) { return x / x; }",
                "isAnswerKey": false
            },
            {
                "description": "function square(x) { return x - x; }",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "629",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which method is used to add elements to the end of an array in JavaScript?",
        "options": [
            {
                "description": "push()",
                "isAnswerKey": true
            },
            {
                "description": "pop()",
                "isAnswerKey": false
            },
            {
                "description": "shift()",
                "isAnswerKey": false
            },
            {
                "description": "unshift()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "630",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "How would you implement a function to check if a string is empty or not?",
        "options": [
            {
                "description": "function isEmpty(str) { return str.length === 0; }",
                "isAnswerKey": true
            },
            {
                "description": "function isEmpty(str) { return str.length != 0; }",
                "isAnswerKey": false
            },
            {
                "description": "function isEmpty(str) { return str = '' }",
                "isAnswerKey": false
            },
            {
                "description": "function isEmpty(str) { return str == null; }",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "631",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the error in the following code?\n\n```js\nlet num = '5';\nconsole.log(num * 2);\n```",
        "options": [
            {
                "description": "No error, output is 10",
                "isAnswerKey": true
            },
            {
                "description": "TypeError: Cannot multiply string",
                "isAnswerKey": false
            },
            {
                "description": "SyntaxError",
                "isAnswerKey": false
            },
            {
                "description": "ReferenceError: num is not defined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "632",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the logical error in the following code:\n\n```js\nfunction isEven(num) {\n  return num % 2 === 0 ? 'Odd' : 'Even';\n}\n```",
        "options": [
            {
                "description": "The return values are swapped",
                "isAnswerKey": true
            },
            {
                "description": "The condition should be num % 2 !== 0",
                "isAnswerKey": false
            },
            {
                "description": "The function will throw an error",
                "isAnswerKey": false
            },
            {
                "description": "The function is correctly implemented",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "633",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What correction is needed to make the following code run without errors?\n\n```js\nlet result = add(5, 10);\nfunction add(a, b) {\n  return a + b;\n}\n```",
        "options": [
            {
                "description": "Move the function declaration above the variable assignment",
                "isAnswerKey": true
            },
            {
                "description": "Add semicolons at the end of each line",
                "isAnswerKey": false
            },
            {
                "description": "Change 'let' to 'var'",
                "isAnswerKey": false
            },
            {
                "description": "Change the function to an arrow function",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "634",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What needs to be changed in the following code to correctly append an element to the DOM?\n\n```js\nlet div = document.createElement('div');\ndocument.body.appendChild(div);\n```",
        "options": [
            {
                "description": "No changes, the code is correct",
                "isAnswerKey": true
            },
            {
                "description": "Use append instead of appendChild",
                "isAnswerKey": false
            },
            {
                "description": "Create a text node instead of a div",
                "isAnswerKey": false
            },
            {
                "description": "Use document.documentElement instead of document.body",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "635",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Correct the following function to avoid the TypeError: Cannot read property 'length' of undefined.\n\n```js\nfunction getLength(str) {\n  return str.length;\n}\n```",
        "options": [
            {
                "description": "function getLength(str) { return str ? str.length : 0; }",
                "isAnswerKey": true
            },
            {
                "description": "function getLength(str) { return str.length; }",
                "isAnswerKey": false
            },
            {
                "description": "function getLength(str) { return str.length || 1; }",
                "isAnswerKey": false
            },
            {
                "description": "function getLength(str) { return str ? str.length : null; }",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "636",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is wrong with the following function that sums all number elements in an array?\n\n```js\nfunction sumArray(arr) {\n  return arr.reduce((a, b) => a + b);\n}\n```",
        "options": [
            {
                "description": "The initial value for reduce is missing, it should be arr.reduce((a, b) => a + b, 0);",
                "isAnswerKey": true
            },
            {
                "description": "Reduce should be replaced with map",
                "isAnswerKey": false
            },
            {
                "description": "The function cannot handle empty arrays",
                "isAnswerKey": false
            },
            {
                "description": "The function is correctly implemented",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "637",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which issue will be encountered in the following code?\n\n```js\nlet counter = 0;\nfunction increment() {\n  counter += 1;\n}\nincrement();\nconsole.log(counter);\n```",
        "options": [
            {
                "description": "No issue, the output will be 1",
                "isAnswerKey": true
            },
            {
                "description": "counter is not defined",
                "isAnswerKey": false
            },
            {
                "description": "increment is not a function",
                "isAnswerKey": false
            },
            {
                "description": "Syntax error in increment function",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "638",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What will the following code output and why?\n\n```js\nconsole.log(typeof NaN);\n```",
        "options": [
            {
                "description": "\"number\" because NaN is considered a numeric value",
                "isAnswerKey": true
            },
            {
                "description": "\"NaN\" because it is Not-a-Number",
                "isAnswerKey": false
            },
            {
                "description": "\"undefined\" because NaN is undefined",
                "isAnswerKey": false
            },
            {
                "description": "\"object\" due to a type coercion",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "639",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the mistake in the following code:\n\n```js\nlet x = 10;\nif (x = 5) {\n  console.log('x is 5');\n}\n```",
        "options": [
            {
                "description": "Assignment instead of comparison in if condition",
                "isAnswerKey": true
            },
            {
                "description": "x is not declared correctly",
                "isAnswerKey": false
            },
            {
                "description": "console.log syntax is incorrect",
                "isAnswerKey": false
            },
            {
                "description": "x is not defined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "640",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Why does the following code produce an error?\n\n```js\nlet result = square(5);\nvar square = function(n) { return n * n; };\n```",
        "options": [
            {
                "description": "square is not hoisted",
                "isAnswerKey": true
            },
            {
                "description": "square is not a function",
                "isAnswerKey": false
            },
            {
                "description": "square is not defined",
                "isAnswerKey": false
            },
            {
                "description": "Missing semicolon",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "641",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Predict the output of the following code:\n\n```js\nlet a = 3;\nlet b = '3';\nconsole.log(a + b);\n```",
        "options": [
            {
                "description": "\"33\"",
                "isAnswerKey": true
            },
            {
                "description": "\"6\"",
                "isAnswerKey": false
            },
            {
                "description": "\"9\"",
                "isAnswerKey": false
            },
            {
                "description": "\"Error\"",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "642",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the result of the following code and why?\n\n```js\nconsole.log(1 + '1' - 1);\n```",
        "options": [
            {
                "description": "10, because '1' is coerced to 11 and then 1 is subtracted",
                "isAnswerKey": true
            },
            {
                "description": "11, because '1' is concatenated to 1",
                "isAnswerKey": false
            },
            {
                "description": "1, because subtraction is done first",
                "isAnswerKey": false
            },
            {
                "description": "NaN, because of type mismatch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "643",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will the following code output?\n\n```js\nlet arr = [10, 20, 30];\nconsole.log(arr.map(x => x * 2)[1]);\n```",
        "options": [
            {
                "description": "40",
                "isAnswerKey": true
            },
            {
                "description": "20",
                "isAnswerKey": false
            },
            {
                "description": "60",
                "isAnswerKey": false
            },
            {
                "description": "30",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "644",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What does the following code output?\n\n```js\nlet obj = { a: 1, b: 2 };\nconsole.log(Object.keys(obj).length);\n```",
        "options": [
            {
                "description": "2",
                "isAnswerKey": true
            },
            {
                "description": "1",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "645",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be logged to the console by the following code?\n\n```js\nlet person = { name: 'Alice' };\nlet anotherPerson = person;\nperson.name = 'Bob';\nconsole.log(anotherPerson.name);\n```",
        "options": [
            {
                "description": "'Bob'",
                "isAnswerKey": true
            },
            {
                "description": "'Alice'",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "646",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will the following code output?\n\n```js\nlet a = '10';\nlet b = 20;\nconsole.log(a - b);\n```",
        "options": [
            {
                "description": "-10",
                "isAnswerKey": true
            },
            {
                "description": "10",
                "isAnswerKey": false
            },
            {
                "description": "30",
                "isAnswerKey": false
            },
            {
                "description": "NaN",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "647",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Predict the output of the following code:\n\n```js\nconsole.log(typeof function() {});\n```",
        "options": [
            {
                "description": "\"function\"",
                "isAnswerKey": true
            },
            {
                "description": "\"object\"",
                "isAnswerKey": false
            },
            {
                "description": "\"undefined\"",
                "isAnswerKey": false
            },
            {
                "description": "\"string\"",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "648",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will this code log to the console?\n\n```js\nlet x = 0;\nif (x) {\n  console.log('True');\n} else {\n  console.log('False');\n}\n```",
        "options": [
            {
                "description": "'False'",
                "isAnswerKey": true
            },
            {
                "description": "'True'",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "649",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```js\nlet str = 'abc';\nconsole.log(str.charAt(0));\n```",
        "options": [
            {
                "description": "'a'",
                "isAnswerKey": true
            },
            {
                "description": "'b'",
                "isAnswerKey": false
            },
            {
                "description": "'c'",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "650",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the result of the following code?\n\n```js\nlet x = 5;\nlet y = x++;\nconsole.log(y);\n```",
        "options": [
            {
                "description": "5",
                "isAnswerKey": true
            },
            {
                "description": "6",
                "isAnswerKey": false
            },
            {
                "description": "4",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "651",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is a valid way to declare a variable in JavaScript?",
        "options": [
            {
                "description": "var myVar = 10;",
                "isAnswerKey": true
            },
            {
                "description": "int myVar = 10;",
                "isAnswerKey": false
            },
            {
                "description": "myVar := 10;",
                "isAnswerKey": false
            },
            {
                "description": "let int = 10;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "652",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "How do you comment a single line in JavaScript?",
        "options": [
            {
                "description": "/* This is a comment */",
                "isAnswerKey": false
            },
            {
                "description": "// This is a comment",
                "isAnswerKey": true
            },
            {
                "description": "<!-- This is a comment -->",
                "isAnswerKey": false
            },
            {
                "description": "# This is a comment",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "653",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is NOT a JavaScript data type?",
        "options": [
            {
                "description": "Number",
                "isAnswerKey": false
            },
            {
                "description": "String",
                "isAnswerKey": false
            },
            {
                "description": "Character",
                "isAnswerKey": true
            },
            {
                "description": "Boolean",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "654",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What will 'typeof' operator return for an array?",
        "options": [
            {
                "description": "Array",
                "isAnswerKey": false
            },
            {
                "description": "Object",
                "isAnswerKey": true
            },
            {
                "description": "List",
                "isAnswerKey": false
            },
            {
                "description": "Undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "655",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the output of the following code snippet? console.log(typeof null);",
        "options": [
            {
                "description": "null",
                "isAnswerKey": false
            },
            {
                "description": "object",
                "isAnswerKey": true
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "string",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "656",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following methods can be used to select an element by its ID in JavaScript?",
        "options": [
            {
                "description": "document.getElementById()",
                "isAnswerKey": true
            },
            {
                "description": "document.getElementByClass()",
                "isAnswerKey": false
            },
            {
                "description": "document.querySelectorAll()",
                "isAnswerKey": false
            },
            {
                "description": "document.selectById()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "657",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the result of '2' + 2 in JavaScript?",
        "options": [
            {
                "description": "4",
                "isAnswerKey": false
            },
            {
                "description": "22",
                "isAnswerKey": true
            },
            {
                "description": "NaN",
                "isAnswerKey": false
            },
            {
                "description": "TypeError",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "658",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which symbol is used to denote a block of code in JavaScript?",
        "options": [
            {
                "description": "{}",
                "isAnswerKey": true
            },
            {
                "description": "[]",
                "isAnswerKey": false
            },
            {
                "description": "<>",
                "isAnswerKey": false
            },
            {
                "description": "()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "659",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which event occurs when the user clicks on an HTML element?",
        "options": [
            {
                "description": "onmouseclick",
                "isAnswerKey": false
            },
            {
                "description": "onclick",
                "isAnswerKey": true
            },
            {
                "description": "onmouseover",
                "isAnswerKey": false
            },
            {
                "description": "onchange",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "660",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "How do you declare a constant in JavaScript?",
        "options": [
            {
                "description": "const PI = 3.14;",
                "isAnswerKey": true
            },
            {
                "description": "let PI = 3.14;",
                "isAnswerKey": false
            },
            {
                "description": "int PI = 3.14;",
                "isAnswerKey": false
            },
            {
                "description": "var PI = 3.14;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "661",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the output of the following code? \n\n```js\nlet a = 10;\nif (a == '10') {\n  console.log('Equal');\n} else {\n  console.log('Not Equal');\n}\n```",
        "options": [
            {
                "description": "Equal",
                "isAnswerKey": true
            },
            {
                "description": "Not Equal",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "662",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the output of the following code snippet?\n\n```js\nlet x = 5;\nlet y = 10;\nconsole.log(x < y ? 'x is less' : 'y is less');\n```",
        "options": [
            {
                "description": "x is less",
                "isAnswerKey": true
            },
            {
                "description": "y is less",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "663",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be logged to the console in the following snippet?\n\n```js\nfor (var i = 0; i < 3; i++) {\n  setTimeout(() => console.log(i), 100);\n}\n```",
        "options": [
            {
                "description": "0 1 2",
                "isAnswerKey": false
            },
            {
                "description": "3 3 3",
                "isAnswerKey": true
            },
            {
                "description": "0 1 2 3",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "664",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following will correctly iterate over the properties of an object?\n\n```js\nconst obj = { a: 1, b: 2, c: 3 };\n```",
        "options": [
            {
                "description": "for (let key in obj)",
                "isAnswerKey": true
            },
            {
                "description": "for (let key of obj)",
                "isAnswerKey": false
            },
            {
                "description": "for (let key in Object.keys(obj))",
                "isAnswerKey": false
            },
            {
                "description": "for (let key of Object.keys(obj))",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "665",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the code below, which value will be logged?\n\n```js\nlet a = [1, 2, 3];\nlet b = a;\nb.push(4);\nconsole.log(a);\n```",
        "options": [
            {
                "description": "[1, 2, 3]",
                "isAnswerKey": false
            },
            {
                "description": "[1, 2, 3, 4]",
                "isAnswerKey": true
            },
            {
                "description": "[4, 1, 2, 3]",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "666",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```js\nfunction test() {\n  console.log(this);\n}\ntest();\n```",
        "options": [
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "Window object",
                "isAnswerKey": true
            },
            {
                "description": "test function",
                "isAnswerKey": false
            },
            {
                "description": "null",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "667",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which method is used to remove the last element from an array in JavaScript?",
        "options": [
            {
                "description": "shift()",
                "isAnswerKey": false
            },
            {
                "description": "pop()",
                "isAnswerKey": true
            },
            {
                "description": "remove()",
                "isAnswerKey": false
            },
            {
                "description": "delete()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "668",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the value of 'result' in the following code?\n\n```js\nlet result = 0 || 'default';\n```",
        "options": [
            {
                "description": "0",
                "isAnswerKey": false
            },
            {
                "description": "'default'",
                "isAnswerKey": true
            },
            {
                "description": "false",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "669",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the output of this code snippet?\n\n```js\nlet num = [1, 2, 3].map(x => x * 2);\nconsole.log(num);\n```",
        "options": [
            {
                "description": "[1, 2, 3]",
                "isAnswerKey": false
            },
            {
                "description": "[2, 4, 6]",
                "isAnswerKey": true
            },
            {
                "description": "[2, 3, 4]",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "670",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following will NOT trigger a JavaScript error?",
        "options": [
            {
                "description": "console.log(undefinedVariable);",
                "isAnswerKey": false
            },
            {
                "description": "let x = {key: 'value'}; delete x.key;",
                "isAnswerKey": true
            },
            {
                "description": "null.test();",
                "isAnswerKey": false
            },
            {
                "description": "throw new Error('Test error');",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "671",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Write a function to reverse a string in JavaScript. What is the correct implementation?\n\n```js\nfunction reverseString(str) {\n  // Code here\n}\n```",
        "options": [
            {
                "description": "return str.split('').reverse().join('');",
                "isAnswerKey": true
            },
            {
                "description": "return str.reverse().split('').join('');",
                "isAnswerKey": false
            },
            {
                "description": "return str.split().reverse().join('');",
                "isAnswerKey": false
            },
            {
                "description": "return str.split('').join().reverse();",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "672",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which function correctly filters out even numbers from an array?\n\n```js\nfunction filterEvenNumbers(arr) {\n  // Code here\n}\n```",
        "options": [
            {
                "description": "return arr.filter(num => num % 2 !== 0);",
                "isAnswerKey": false
            },
            {
                "description": "return arr.filter(num => num % 2 === 0);",
                "isAnswerKey": true
            },
            {
                "description": "return arr.map(num => num % 2 === 0);",
                "isAnswerKey": false
            },
            {
                "description": "return arr.forEach(num => num % 2 === 0);",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "673",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following code snippets will correctly sort an array of numbers in ascending order?\n\n```js\nlet numbers = [4, 2, 5, 1, 3];\n// Code here\n```",
        "options": [
            {
                "description": "numbers.sort((a, b) => a - b);",
                "isAnswerKey": true
            },
            {
                "description": "numbers.sort((a, b) => b - a);",
                "isAnswerKey": false
            },
            {
                "description": "numbers.sort(a, b => a < b);",
                "isAnswerKey": false
            },
            {
                "description": "numbers.sort(a => a);",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "674",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you merge two arrays in JavaScript?\n\n```js\nlet arr1 = [1, 2];\nlet arr2 = [3, 4];\n// Code here\n```",
        "options": [
            {
                "description": "let merged = arr1.concat(arr2);",
                "isAnswerKey": true
            },
            {
                "description": "let merged = arr1 + arr2;",
                "isAnswerKey": false
            },
            {
                "description": "let merged = arr1.merge(arr2);",
                "isAnswerKey": false
            },
            {
                "description": "let merged = { ...arr1, ...arr2 };",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "675",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which method can be used to convert an array to a string with a specified separator?\n\n```js\nlet arr = [1, 2, 3];\n// Code here\n```",
        "options": [
            {
                "description": "arr.join('-');",
                "isAnswerKey": true
            },
            {
                "description": "arr.concat('-');",
                "isAnswerKey": false
            },
            {
                "description": "arr.split('-');",
                "isAnswerKey": false
            },
            {
                "description": "arr.toString('-');",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "676",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the correct way to clone an array in JavaScript?\n\n```js\nlet original = [1, 2, 3];\n// Code here\n```",
        "options": [
            {
                "description": "let clone = original.slice();",
                "isAnswerKey": true
            },
            {
                "description": "let clone = original.copy();",
                "isAnswerKey": false
            },
            {
                "description": "let clone = original.map();",
                "isAnswerKey": false
            },
            {
                "description": "let clone = original.concat();",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "677",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which method will return a new array containing elements that meet a condition in JavaScript?",
        "options": [
            {
                "description": "filter",
                "isAnswerKey": true
            },
            {
                "description": "map",
                "isAnswerKey": false
            },
            {
                "description": "forEach",
                "isAnswerKey": false
            },
            {
                "description": "reduce",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "678",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How do you check if all elements in an array pass a test in JavaScript?\n\n```js\nlet arr = [1, 2, 3, 4];\n// Code here\n```",
        "options": [
            {
                "description": "arr.every(num => num > 0);",
                "isAnswerKey": true
            },
            {
                "description": "arr.some(num => num > 0);",
                "isAnswerKey": false
            },
            {
                "description": "arr.filter(num => num > 0);",
                "isAnswerKey": false
            },
            {
                "description": "arr.map(num => num > 0);",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "679",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which code snippet correctly implements a function to find the maximum value in an array?\n\n```js\nfunction findMax(arr) {\n  // Code here\n}\n```",
        "options": [
            {
                "description": "return Math.max(...arr);",
                "isAnswerKey": true
            },
            {
                "description": "return arr.max();",
                "isAnswerKey": false
            },
            {
                "description": "return arr.reduce((max, curr) => curr > max ? curr : max, 0);",
                "isAnswerKey": false
            },
            {
                "description": "return arr.map(num => Math.max(num));",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "680",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How do you find the index of an element in an array in JavaScript?\n\n```js\nlet arr = ['a', 'b', 'c'];\n// Code here\n```",
        "options": [
            {
                "description": "arr.indexOf('b');",
                "isAnswerKey": true
            },
            {
                "description": "arr.findIndex('b');",
                "isAnswerKey": false
            },
            {
                "description": "arr.search('b');",
                "isAnswerKey": false
            },
            {
                "description": "arr.locate('b');",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "681",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the bug in the following JavaScript code?\n\n```js\nfunction add(x, y) {\n  return x + y;\n}\nconsole.log(add(5));\n```",
        "options": [
            {
                "description": "The function only accepts one argument.",
                "isAnswerKey": false
            },
            {
                "description": "The function does not return a value if one argument is missing.",
                "isAnswerKey": true
            },
            {
                "description": "The function should be named 'sum'.",
                "isAnswerKey": false
            },
            {
                "description": "The function should use 'console.log' instead of 'return'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "682",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the issue in the following code snippet:\n\n```js\nlet a = 10;\nlet b = '10';\nif (a === b) {\n  console.log('Equal');\n} else {\n  console.log('Not Equal');\n}\n```",
        "options": [
            {
                "description": "The comparison should use '==' instead of '==='",
                "isAnswerKey": true
            },
            {
                "description": "The variables 'a' and 'b' should be assigned the same type.",
                "isAnswerKey": false
            },
            {
                "description": "The console.log() should use double quotes.",
                "isAnswerKey": false
            },
            {
                "description": "There is no issue in the given code snippet.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "683",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is a potential issue with the following function?\n\n```js\nfunction multiply(arr) {\n  arr.forEach((num, index) => {\n    arr[index] = num * 2;\n  });\n  return arr;\n}\n```",
        "options": [
            {
                "description": "The function modifies the original array.",
                "isAnswerKey": true
            },
            {
                "description": "The function does not return anything.",
                "isAnswerKey": false
            },
            {
                "description": "The function uses 'map' instead of 'forEach'.",
                "isAnswerKey": false
            },
            {
                "description": "The function should use 'let' instead of 'index'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "684",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the logical error in the following code?\n\n```js\nfunction isEven(num) {\n  return num % 2 == 0 ? 'Even' : 'Odd';\n}\nconsole.log(isEven(4));\n```",
        "options": [
            {
                "description": "The '== 0' should be '!== 0'.",
                "isAnswerKey": false
            },
            {
                "description": "The function incorrectly identifies even numbers.",
                "isAnswerKey": false
            },
            {
                "description": "The function should use '===' instead of '=='.",
                "isAnswerKey": true
            },
            {
                "description": "The function should return a boolean value.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "685",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the bug in this code snippet:\n\n```js\nlet user = {\n  name: 'Alice',\n  age: 25\n};\nconsole.log(user.name.toUpperCase);\n```",
        "options": [
            {
                "description": "'toUpperCase' should be called as a function.",
                "isAnswerKey": true
            },
            {
                "description": "'user' is a reserved word and cannot be used as a variable name.",
                "isAnswerKey": false
            },
            {
                "description": "'console.log' is misspelled.",
                "isAnswerKey": false
            },
            {
                "description": "There is no bug in the code.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "686",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the issue with the following function?\n\n```js\nfunction divide(a, b) {\n  return a / b;\n}\nconsole.log(divide(4, 0));\n```",
        "options": [
            {
                "description": "Division by zero should be handled.",
                "isAnswerKey": true
            },
            {
                "description": "The function should return an array.",
                "isAnswerKey": false
            },
            {
                "description": "The function should use 'console.log' instead of 'return'.",
                "isAnswerKey": false
            },
            {
                "description": "The function should be an arrow function.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "687",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the bug in this code snippet?\n\n```js\nlet person = {\n  name: 'Bob',\n  age: 30\n};\nconsole.log(person['name']);\n```",
        "options": [
            {
                "description": "The property access should use dot notation.",
                "isAnswerKey": false
            },
            {
                "description": "The object should be declared with 'const'.",
                "isAnswerKey": false
            },
            {
                "description": "The code does not have any bugs.",
                "isAnswerKey": true
            },
            {
                "description": "The 'console.log' should be inside a function.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "688",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the output of the following code and what is the mistake?\n\n```js\nfor (let i = 0; i < 5; i++); {\n  console.log(i);\n}\n```",
        "options": [
            {
                "description": "0 to 4, extra semicolon after 'for' causes a bug.",
                "isAnswerKey": false
            },
            {
                "description": "Syntax error due to semicolon.",
                "isAnswerKey": false
            },
            {
                "description": "5, because the loop body is independent due to semicolon.",
                "isAnswerKey": true
            },
            {
                "description": "0 to 5, because of incorrect loop condition.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "689",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Identify the problem in the following asynchronous code:\n\n```js\nsetTimeout(() => {\n  console.log('Hello');\n}, 0);\nconsole.log('World');\n```",
        "options": [
            {
                "description": "'World' will log before 'Hello' due to event loop.",
                "isAnswerKey": true
            },
            {
                "description": "'Hello' and 'World' will log at the same time.",
                "isAnswerKey": false
            },
            {
                "description": "'Hello' will log before 'World'.",
                "isAnswerKey": false
            },
            {
                "description": "The setTimeout won't execute due to zero delay.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "690",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the issue with the following promise chain?\n\n```js\nPromise.resolve(1)\n  .then(num => num + 1)\n  .then(num => console.log(num));\n```",
        "options": [
            {
                "description": "The promise does not handle errors.",
                "isAnswerKey": true
            },
            {
                "description": "There is no issue with the code.",
                "isAnswerKey": false
            },
            {
                "description": "The promise should use 'catch' before 'then'.",
                "isAnswerKey": false
            },
            {
                "description": "The promise should be chained with a 'finally'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "691",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output of the following code snippet?\n\n```js\nfunction greet() {\n  return 'Hello';\n}\ngreet.world = 'World';\nconsole.log(greet(), greet.world);\n```",
        "options": [
            {
                "description": "'Hello World'",
                "isAnswerKey": true
            },
            {
                "description": "'Hello undefined'",
                "isAnswerKey": false
            },
            {
                "description": "'undefined World'",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "692",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```js\nlet a = 1;\nfunction f() {\n  console.log(a);\n  let a = 2;\n}\nf();\n```",
        "options": [
            {
                "description": "ReferenceError",
                "isAnswerKey": true
            },
            {
                "description": "1",
                "isAnswerKey": false
            },
            {
                "description": "2",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "693",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the output of this code?\n\n```js\nconsole.log(typeof NaN);\n```",
        "options": [
            {
                "description": "'number'",
                "isAnswerKey": true
            },
            {
                "description": "'NaN'",
                "isAnswerKey": false
            },
            {
                "description": "'undefined'",
                "isAnswerKey": false
            },
            {
                "description": "'object'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "694",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output of the following code snippet?\n\n```js\nlet x = [1, 2, 3];\nlet y = x;\ny[0] = 0;\nconsole.log(x[0]);\n```",
        "options": [
            {
                "description": "0",
                "isAnswerKey": true
            },
            {
                "description": "1",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "695",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What does this code output?\n\n```js\nconsole.log('5' - 3);\n```",
        "options": [
            {
                "description": "2",
                "isAnswerKey": true
            },
            {
                "description": "'2'",
                "isAnswerKey": false
            },
            {
                "description": "NaN",
                "isAnswerKey": false
            },
            {
                "description": "'5-3'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "696",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output of this code?\n\n```js\n(function() {\n  console.log(typeof this);\n})();\n```",
        "options": [
            {
                "description": "'object'",
                "isAnswerKey": false
            },
            {
                "description": "'undefined'",
                "isAnswerKey": false
            },
            {
                "description": "'function'",
                "isAnswerKey": false
            },
            {
                "description": "'object', referring to Window in non-strict mode.",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "697",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the output of the following code?\n\n```js\nlet a = 5;\na = a++ + ++a;\nconsole.log(a);\n```",
        "options": [
            {
                "description": "12",
                "isAnswerKey": true
            },
            {
                "description": "11",
                "isAnswerKey": false
            },
            {
                "description": "10",
                "isAnswerKey": false
            },
            {
                "description": "6",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "698",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be output of this code?\n\n```js\nlet x = 0;\nif (x) {\n  console.log('True');\n} else {\n  console.log('False');\n}\n```",
        "options": [
            {
                "description": "False",
                "isAnswerKey": true
            },
            {
                "description": "True",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "null",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "699",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the output of this code snippet?\n\n```js\nlet a = '1';\nlet b = 1;\nconsole.log(a == b);\nconsole.log(a === b);\n```",
        "options": [
            {
                "description": "true false",
                "isAnswerKey": true
            },
            {
                "description": "false true",
                "isAnswerKey": false
            },
            {
                "description": "true true",
                "isAnswerKey": false
            },
            {
                "description": "false false",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "700",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the result of the following code?\n\n```js\nlet result = false || 'JavaScript';\nconsole.log(result);\n```",
        "options": [
            {
                "description": "'JavaScript'",
                "isAnswerKey": true
            },
            {
                "description": "false",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "701",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following is a correct way to declare a function in JavaScript?",
        "options": [
            {
                "description": "function myFunc() {}",
                "isAnswerKey": true
            },
            {
                "description": "declare myFunc() {}",
                "isAnswerKey": false
            },
            {
                "description": "def myFunc() {}",
                "isAnswerKey": false
            },
            {
                "description": "function: myFunc() {}",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "702",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the correct syntax for referring to an external script called 'app.js'?",
        "options": [
            {
                "description": "<script href='app.js'></script>",
                "isAnswerKey": false
            },
            {
                "description": "<script src='app.js'></script>",
                "isAnswerKey": true
            },
            {
                "description": "<script ref='app.js'></script>",
                "isAnswerKey": false
            },
            {
                "description": "<script name='app.js'></script>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "703",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "How do you create a variable with the numeric value 5?",
        "options": [
            {
                "description": "var num = 5;",
                "isAnswerKey": true
            },
            {
                "description": "num = int 5;",
                "isAnswerKey": false
            },
            {
                "description": "int num = 5;",
                "isAnswerKey": false
            },
            {
                "description": "dim num = 5;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "704",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which operator is used to assign a value to a variable?",
        "options": [
            {
                "description": "x",
                "isAnswerKey": false
            },
            {
                "description": "*",
                "isAnswerKey": false
            },
            {
                "description": "-",
                "isAnswerKey": false
            },
            {
                "description": "=",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "705",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the correct way to write a JavaScript array?",
        "options": [
            {
                "description": "var colors = 'red', 'green', 'blue'",
                "isAnswerKey": false
            },
            {
                "description": "var colors = ['red', 'green', 'blue']",
                "isAnswerKey": true
            },
            {
                "description": "var colors = (1:'red', 2:'green', 3:'blue')",
                "isAnswerKey": false
            },
            {
                "description": "var colors = 'red' + 'green' + 'blue'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "706",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "How do you round the number 7.25 to the nearest integer?",
        "options": [
            {
                "description": "Math.round(7.25)",
                "isAnswerKey": true
            },
            {
                "description": "round(7.25)",
                "isAnswerKey": false
            },
            {
                "description": "Math.rnd(7.25)",
                "isAnswerKey": false
            },
            {
                "description": "rnd(7.25)",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "707",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which event occurs when the user clicks on an HTML element?",
        "options": [
            {
                "description": "onmouseover",
                "isAnswerKey": false
            },
            {
                "description": "onchange",
                "isAnswerKey": false
            },
            {
                "description": "onmouseclick",
                "isAnswerKey": false
            },
            {
                "description": "onclick",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "708",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "How do you declare a JavaScript variable?",
        "options": [
            {
                "description": "var myVariable;",
                "isAnswerKey": true
            },
            {
                "description": "v myVariable;",
                "isAnswerKey": false
            },
            {
                "description": "variable myVariable;",
                "isAnswerKey": false
            },
            {
                "description": "declare myVariable;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "709",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following methods can be used to remove the last element from an array in JavaScript?",
        "options": [
            {
                "description": "array.pop()",
                "isAnswerKey": true
            },
            {
                "description": "array.remove()",
                "isAnswerKey": false
            },
            {
                "description": "array.clear()",
                "isAnswerKey": false
            },
            {
                "description": "array.delete()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "710",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "How can you add a comment in JavaScript?",
        "options": [
            {
                "description": "# This is a comment",
                "isAnswerKey": false
            },
            {
                "description": "// This is a comment",
                "isAnswerKey": true
            },
            {
                "description": "<!-- This is a comment -->",
                "isAnswerKey": false
            },
            {
                "description": "** This is a comment **",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "711",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will the following code output?\n\n```javascript\nconsole.log(0.1 + 0.2 === 0.3);\n```",
        "options": [
            {
                "description": "true",
                "isAnswerKey": false
            },
            {
                "description": "false",
                "isAnswerKey": true
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "NaN",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "712",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will the following code output?\n\n```javascript\nlet x = '5';\nlet y = 5;\nconsole.log(x == y);\n```",
        "options": [
            {
                "description": "true",
                "isAnswerKey": true
            },
            {
                "description": "false",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "NaN",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "713",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Evaluate the output of the following code:\n\n```javascript\nlet x = 0;\nfor (let i = 0; i < 5; i++) {\n  x += i;\n}\nconsole.log(x);\n```",
        "options": [
            {
                "description": "0",
                "isAnswerKey": false
            },
            {
                "description": "10",
                "isAnswerKey": true
            },
            {
                "description": "5",
                "isAnswerKey": false
            },
            {
                "description": "15",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "714",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will the following code output?\n\n```javascript\nconsole.log(typeof null);\n```",
        "options": [
            {
                "description": "'object'",
                "isAnswerKey": true
            },
            {
                "description": "'null'",
                "isAnswerKey": false
            },
            {
                "description": "'undefined'",
                "isAnswerKey": false
            },
            {
                "description": "'number'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "715",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the output of the following JavaScript code?\n\n```javascript\nfunction test() {\n  var a = b = 3;\n}\ntest();\nconsole.log(typeof a);\n```",
        "options": [
            {
                "description": "'number'",
                "isAnswerKey": false
            },
            {
                "description": "'undefined'",
                "isAnswerKey": true
            },
            {
                "description": "'object'",
                "isAnswerKey": false
            },
            {
                "description": "'boolean'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "716",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Consider the following code snippet:\n\n```javascript\nlet arr = [1, 2, 3];\narr.length = 0;\nconsole.log(arr);\n```\nWhat will be logged to the console?",
        "options": [
            {
                "description": "[1, 2, 3]",
                "isAnswerKey": false
            },
            {
                "description": "[]",
                "isAnswerKey": true
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "null",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "717",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will the following function return?\n\n```javascript\nfunction foo() {\n  return;\n  {\n    bar: 'baz'\n  };\n}\nconsole.log(foo());\n```",
        "options": [
            {
                "description": "undefined",
                "isAnswerKey": true
            },
            {
                "description": "{ bar: 'baz' }",
                "isAnswerKey": false
            },
            {
                "description": "null",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "718",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the result of the following code?\n\n```javascript\nconsole.log(1 + '1');\n```",
        "options": [
            {
                "description": "'11'",
                "isAnswerKey": true
            },
            {
                "description": "2",
                "isAnswerKey": false
            },
            {
                "description": "'2'",
                "isAnswerKey": false
            },
            {
                "description": "11",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "719",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will this code log to the console?\n\n```javascript\nlet a = [1, 2, 3];\nlet b = a;\nb.push(4);\nconsole.log(a);\n```",
        "options": [
            {
                "description": "[1, 2, 3, 4]",
                "isAnswerKey": true
            },
            {
                "description": "[1, 2, 3]",
                "isAnswerKey": false
            },
            {
                "description": "[1, 2, 3, 4, 4]",
                "isAnswerKey": false
            },
            {
                "description": "[4]",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "720",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```javascript\nconst person = { name: 'John' };\nperson.age = 25;\nconsole.log(person);\n```",
        "options": [
            {
                "description": "{ name: 'John', age: 25 }",
                "isAnswerKey": true
            },
            {
                "description": "{ name: 'John' }",
                "isAnswerKey": false
            },
            {
                "description": "{ age: 25 }",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "721",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following functions is used to serialize an object into a JSON string?",
        "options": [
            {
                "description": "JSON.parse()",
                "isAnswerKey": false
            },
            {
                "description": "JSON.stringify()",
                "isAnswerKey": true
            },
            {
                "description": "JSON.encode()",
                "isAnswerKey": false
            },
            {
                "description": "JSON.convert()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "722",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Consider the following code snippet:\n\n```javascript\nfunction greet(name) {\n  return `Hello, ${name}!`;\n}\n```\nHow can you call this function to display 'Hello, John!' in the console?",
        "options": [
            {
                "description": "greet('John');",
                "isAnswerKey": false
            },
            {
                "description": "console.log(greet('John'));",
                "isAnswerKey": true
            },
            {
                "description": "console.log(greet(John));",
                "isAnswerKey": false
            },
            {
                "description": "greet(John);",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "723",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following JavaScript array, how can you find the index of 'banana'?\n\n```javascript\nlet fruits = ['apple', 'banana', 'cherry'];\n```",
        "options": [
            {
                "description": "fruits.indexOf('banana')",
                "isAnswerKey": true
            },
            {
                "description": "fruits.find('banana')",
                "isAnswerKey": false
            },
            {
                "description": "fruits.search('banana')",
                "isAnswerKey": false
            },
            {
                "description": "fruits.where('banana')",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "724",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the output of the following code?\n\n```javascript\nlet x = '5';\nlet y = 6;\nlet result = x + y;\nconsole.log(result);\n```",
        "options": [
            {
                "description": "11",
                "isAnswerKey": false
            },
            {
                "description": "'56'",
                "isAnswerKey": true
            },
            {
                "description": "NaN",
                "isAnswerKey": false
            },
            {
                "description": "'11'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "725",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "How do you remove the first element from an array named 'myArray'?",
        "options": [
            {
                "description": "myArray.shift()",
                "isAnswerKey": true
            },
            {
                "description": "myArray.pop()",
                "isAnswerKey": false
            },
            {
                "description": "myArray.delete(0)",
                "isAnswerKey": false
            },
            {
                "description": "myArray.remove(0)",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "726",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will the following code output?\n\n```javascript\nlet a = [1, 2, 3];\na.length = 2;\nconsole.log(a);\n```",
        "options": [
            {
                "description": "[1, 2, 3]",
                "isAnswerKey": false
            },
            {
                "description": "[1, 2]",
                "isAnswerKey": true
            },
            {
                "description": "[2, 3]",
                "isAnswerKey": false
            },
            {
                "description": "[1, 3]",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "727",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following methods will sort an array in place?",
        "options": [
            {
                "description": "array.sort()",
                "isAnswerKey": true
            },
            {
                "description": "array.order()",
                "isAnswerKey": false
            },
            {
                "description": "array.arrange()",
                "isAnswerKey": false
            },
            {
                "description": "array.sequence()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "728",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will be the result of the following code?\n\n```javascript\nconst numbers = [1, 2, 3];\nnumbers[10] = 11;\nconsole.log(numbers.length);\n```",
        "options": [
            {
                "description": "3",
                "isAnswerKey": false
            },
            {
                "description": "11",
                "isAnswerKey": false
            },
            {
                "description": "10",
                "isAnswerKey": false
            },
            {
                "description": "11",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "729",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you detect the client's browser name?",
        "options": [
            {
                "description": "navigator.appName",
                "isAnswerKey": true
            },
            {
                "description": "browser.name",
                "isAnswerKey": false
            },
            {
                "description": "client.browser",
                "isAnswerKey": false
            },
            {
                "description": "window.browserName",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "730",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will be the output of the following code?\n\n```javascript\nconst nums = [1, 2, 3];\nconst doubled = nums.map(num => num * 2);\nconsole.log(doubled);\n```",
        "options": [
            {
                "description": "[2, 4, 6]",
                "isAnswerKey": true
            },
            {
                "description": "[1, 2, 3]",
                "isAnswerKey": false
            },
            {
                "description": "[3, 6, 9]",
                "isAnswerKey": false
            },
            {
                "description": "[4, 8, 12]",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "731",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Given the following code snippet, which statement is true?\n\n```javascript\nlet x = [1, 2, 3];\nlet y = [...x];\ny.push(4);\n```\n",
        "options": [
            {
                "description": "x and y are identical arrays.",
                "isAnswerKey": false
            },
            {
                "description": "The array x remains unchanged.",
                "isAnswerKey": true
            },
            {
                "description": "The array y is a reference to x.",
                "isAnswerKey": false
            },
            {
                "description": "Both arrays x and y will have the same elements.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "732",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which of the following statements will correctly clone an object in JavaScript?",
        "options": [
            {
                "description": "let clone = Object.assign({}, original);",
                "isAnswerKey": true
            },
            {
                "description": "let clone = original.clone();",
                "isAnswerKey": false
            },
            {
                "description": "let clone = original;",
                "isAnswerKey": false
            },
            {
                "description": "let clone = copy(original);",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "733",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Consider the following code:\n\n```javascript\nfunction add(a, b) {\n  return a + b;\n}\nadd.call(null, 5, 10);\n```\nWhat does the call() method do in this context?",
        "options": [
            {
                "description": "Invokes the function add with 'null' as 'this'.",
                "isAnswerKey": true
            },
            {
                "description": "Sets 'this' to 'null' and does not invoke the function.",
                "isAnswerKey": false
            },
            {
                "description": "Returns a reference to the function add.",
                "isAnswerKey": false
            },
            {
                "description": "Binds the function add to 'null'.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "734",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the output of this code?\n\n```javascript\nlet x = 1;\nfunction func() {\n  x = 2;\n  return;\n  function x() {}\n}\nfunc();\nconsole.log(x);\n```",
        "options": [
            {
                "description": "1",
                "isAnswerKey": false
            },
            {
                "description": "2",
                "isAnswerKey": true
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "735",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What will the following code output?\n\n```javascript\nlet a = 3;\nlet b = new Number(3);\nconsole.log(a == b);\nconsole.log(a === b);\n```",
        "options": [
            {
                "description": "true, false",
                "isAnswerKey": true
            },
            {
                "description": "false, true",
                "isAnswerKey": false
            },
            {
                "description": "true, true",
                "isAnswerKey": false
            },
            {
                "description": "false, false",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "736",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you ensure that a variable declared with 'let' inside a block is accessible only within that block?",
        "options": [
            {
                "description": "Declare the variable inside a `{}` block.",
                "isAnswerKey": true
            },
            {
                "description": "Use `var` instead of `let`.",
                "isAnswerKey": false
            },
            {
                "description": "Declare the variable inside a function.",
                "isAnswerKey": false
            },
            {
                "description": "Use `const` instead of `let`.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "737",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which of these is a way to create an immediately invoked function expression (IIFE) in JavaScript?",
        "options": [
            {
                "description": "(function() {})();",
                "isAnswerKey": true
            },
            {
                "description": "function() {}();",
                "isAnswerKey": false
            },
            {
                "description": "{ function() {} }()",
                "isAnswerKey": false
            },
            {
                "description": "function() {}{}",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "738",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which of the following options will correctly set the prototype of object obj to proto?",
        "options": [
            {
                "description": "Object.setPrototypeOf(obj, proto);",
                "isAnswerKey": true
            },
            {
                "description": "obj.prototype = proto;",
                "isAnswerKey": false
            },
            {
                "description": "obj.setPrototype(proto);",
                "isAnswerKey": false
            },
            {
                "description": "obj.__proto__ = proto;",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "739",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which of the following can be used to handle errors in asynchronous JavaScript code?",
        "options": [
            {
                "description": "try/catch block",
                "isAnswerKey": false
            },
            {
                "description": "async/await with try/catch",
                "isAnswerKey": true
            },
            {
                "description": "try/finally block",
                "isAnswerKey": false
            },
            {
                "description": "await/catch block",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "740",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the output of the following code?\n\n```javascript\nlet foo = 'bar';\n(function() {\n  console.log(foo);\n  var foo = 'baz';\n  console.log(foo);\n})();\n```",
        "options": [
            {
                "description": "undefined, baz",
                "isAnswerKey": true
            },
            {
                "description": "bar, baz",
                "isAnswerKey": false
            },
            {
                "description": "baz, baz",
                "isAnswerKey": false
            },
            {
                "description": "Error",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "741",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "In the context of JavaScript, what is 'hoisting'?",
        "options": [
            {
                "description": "Lifting variables and function declarations to the top of their containing scope.",
                "isAnswerKey": true
            },
            {
                "description": "Moving all variable assignments to the top of their respective block.",
                "isAnswerKey": false
            },
            {
                "description": "Reordering function calls within the code.",
                "isAnswerKey": false
            },
            {
                "description": "Prioritizing execution of asynchronous code.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "742",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What does the 'use strict' directive do in JavaScript?",
        "options": [
            {
                "description": "Enables strict mode, which catches common coding mistakes.",
                "isAnswerKey": true
            },
            {
                "description": "Allows usage of ES6+ features in older browsers.",
                "isAnswerKey": false
            },
            {
                "description": "Prevents variable hoisting.",
                "isAnswerKey": false
            },
            {
                "description": "Enables asynchronous code execution.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "743",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will the following code output?\n\n```javascript\nconsole.log(typeof NaN);\n```",
        "options": [
            {
                "description": "'number'",
                "isAnswerKey": true
            },
            {
                "description": "'NaN'",
                "isAnswerKey": false
            },
            {
                "description": "'undefined'",
                "isAnswerKey": false
            },
            {
                "description": "'object'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "744",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the purpose of the JavaScript method 'bind'?",
        "options": [
            {
                "description": "Creates a new function with a specified 'this' value.",
                "isAnswerKey": true
            },
            {
                "description": "Immediately invokes a function with a specified 'this' value.",
                "isAnswerKey": false
            },
            {
                "description": "Links two functions to share the same context.",
                "isAnswerKey": false
            },
            {
                "description": "Copies one object to another.",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "745",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which of the following is a way to create a new object in JavaScript?",
        "options": [
            {
                "description": "let obj = new Object();",
                "isAnswerKey": true
            },
            {
                "description": "let obj = Object.create();",
                "isAnswerKey": false
            },
            {
                "description": "let obj = Object();",
                "isAnswerKey": false
            },
            {
                "description": "let obj = create Object();",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "746",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the result of the following code?\n\n```javascript\nconsole.log(!!2);\n```",
        "options": [
            {
                "description": "true",
                "isAnswerKey": true
            },
            {
                "description": "false",
                "isAnswerKey": false
            },
            {
                "description": "2",
                "isAnswerKey": false
            },
            {
                "description": "NaN",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "747",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which of the following is NOT a JavaScript data type?",
        "options": [
            {
                "description": "float",
                "isAnswerKey": true
            },
            {
                "description": "number",
                "isAnswerKey": false
            },
            {
                "description": "string",
                "isAnswerKey": false
            },
            {
                "description": "boolean",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "748",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will the following code output?\n\n```javascript\nconsole.log('5' - 3);\n```",
        "options": [
            {
                "description": "2",
                "isAnswerKey": true
            },
            {
                "description": "'53'",
                "isAnswerKey": false
            },
            {
                "description": "'2'",
                "isAnswerKey": false
            },
            {
                "description": "NaN",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "749",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the result of the following code?\n\n```javascript\nconsole.log([] + []);\n```",
        "options": [
            {
                "description": "''",
                "isAnswerKey": true
            },
            {
                "description": "[]",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "TypeError",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "750",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which method would you use to convert an object to a JSON string?",
        "options": [
            {
                "description": "JSON.stringify()",
                "isAnswerKey": true
            },
            {
                "description": "JSON.parse()",
                "isAnswerKey": false
            },
            {
                "description": "JSON.convertToString()",
                "isAnswerKey": false
            },
            {
                "description": "Object.toJSONString()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "751",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following patterns is most suitable for handling cross-cutting concerns like logging and error handling in a JavaScript application?",
        "options": [
            {
                "description": "Module Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Aspect-Oriented Programming",
                "isAnswerKey": true
            },
            {
                "description": "Observer Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Singleton Pattern",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "752",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In a Node.js application, which pattern would you use to avoid callback hell while handling asynchronous operations?",
        "options": [
            {
                "description": "Singleton Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Promise Pattern",
                "isAnswerKey": true
            },
            {
                "description": "Factory Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Prototype Pattern",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "753",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which architectural pattern can be used to create a loosely coupled system where components can be replaced easily without affecting others?",
        "options": [
            {
                "description": "Microservices",
                "isAnswerKey": false
            },
            {
                "description": "Event-Driven Architecture",
                "isAnswerKey": true
            },
            {
                "description": "Monolithic Architecture",
                "isAnswerKey": false
            },
            {
                "description": "Layered Architecture",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "754",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which pattern allows you to define a family of algorithms, encapsulate each one, and make them interchangeable?",
        "options": [
            {
                "description": "Strategy Pattern",
                "isAnswerKey": true
            },
            {
                "description": "Builder Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Adapter Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Mediator Pattern",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "755",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the main advantage of using the Proxy design pattern in JavaScript?",
        "options": [
            {
                "description": "To create a simplified interface for complex systems",
                "isAnswerKey": false
            },
            {
                "description": "To control access and add additional functionalities to an object",
                "isAnswerKey": true
            },
            {
                "description": "To ensure that only one instance of a class is created",
                "isAnswerKey": false
            },
            {
                "description": "To provide a way to access the elements of an aggregate object sequentially",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "756",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which pattern is best for implementing undo functionality in JavaScript applications?",
        "options": [
            {
                "description": "Command Pattern",
                "isAnswerKey": true
            },
            {
                "description": "Flyweight Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Template Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Iterator Pattern",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "757",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "When building a JavaScript application that requires different formats of the same class, which design pattern should be used?",
        "options": [
            {
                "description": "Decorator Pattern",
                "isAnswerKey": true
            },
            {
                "description": "Visitor Pattern",
                "isAnswerKey": false
            },
            {
                "description": "State Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Builder Pattern",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "758",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which pattern is used to decouple the sender of a request from its receiver by giving multiple objects a chance to handle the request?",
        "options": [
            {
                "description": "Chain of Responsibility Pattern",
                "isAnswerKey": true
            },
            {
                "description": "Observer Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Facade Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Composite Pattern",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "759",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which design pattern provides a way to access the elements of an aggregate object without exposing its underlying representation?",
        "options": [
            {
                "description": "Iterator Pattern",
                "isAnswerKey": true
            },
            {
                "description": "Prototype Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Bridge Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Abstract Factory Pattern",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "760",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which pattern is used when you need to add new functionality to existing object instances without altering their structure?",
        "options": [
            {
                "description": "Decorator Pattern",
                "isAnswerKey": true
            },
            {
                "description": "Facade Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Adapter Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Proxy Pattern",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "761",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the following JavaScript code, what will be the output?\n\n```javascript\nconst a = [1, 2, 3, 4];\nconst b = a.map(num => {\n  if (num % 2 === 0) return num * 2;\n});\nconsole.log(b);\n```\n",
        "options": [
            {
                "description": "[undefined, 4, undefined, 8]",
                "isAnswerKey": true
            },
            {
                "description": "[2, 4, 6, 8]",
                "isAnswerKey": false
            },
            {
                "description": "[1, 2, 3, 4]",
                "isAnswerKey": false
            },
            {
                "description": "[undefined, undefined, undefined, undefined]",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "762",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be logged to the console when the following code is executed?\n\n```javascript\nlet x = 10;\nfunction outer() {\n  let x = 20;\n  function inner() {\n    x++;\n    let x = 30;\n    console.log(x);\n  }\n  inner();\n}\nouter();\n```\n",
        "options": [
            {
                "description": "ReferenceError",
                "isAnswerKey": true
            },
            {
                "description": "30",
                "isAnswerKey": false
            },
            {
                "description": "20",
                "isAnswerKey": false
            },
            {
                "description": "11",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "763",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Consider the following code snippet. What is the output?\n\n```javascript\nfunction foo() {\n    return\n    {\n        message: 'Hello World'\n    };\n}\nconsole.log(foo());\n```\n",
        "options": [
            {
                "description": "undefined",
                "isAnswerKey": true
            },
            {
                "description": "{ message: 'Hello World' }",
                "isAnswerKey": false
            },
            {
                "description": "null",
                "isAnswerKey": false
            },
            {
                "description": "SyntaxError",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "764",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "How will you handle a potential memory leak in a large-scale Node.js application?",
        "options": [
            {
                "description": "Use process.memoryUsage() to monitor memory usage and identify leaks",
                "isAnswerKey": true
            },
            {
                "description": "Increase the available memory via command-line options",
                "isAnswerKey": false
            },
            {
                "description": "Add more garbage collectors",
                "isAnswerKey": false
            },
            {
                "description": "Use synchronous methods for cleaner code",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "765",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following scenarios can lead to a memory leak in JavaScript?",
        "options": [
            {
                "description": "Unintentional global variables",
                "isAnswerKey": true
            },
            {
                "description": "Proper use of closures",
                "isAnswerKey": false
            },
            {
                "description": "Using const and let appropriately",
                "isAnswerKey": false
            },
            {
                "description": "Using strict mode",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "766",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will be the output of the following code snippet?\n\n```javascript\nconst numbers = [1, 2, 3, 4, 5];\nconst [a, b, ...rest] = numbers;\nconsole.log(rest);\n```\n",
        "options": [
            {
                "description": "[3, 4, 5]",
                "isAnswerKey": true
            },
            {
                "description": "[1, 2, 3]",
                "isAnswerKey": false
            },
            {
                "description": "[4, 5]",
                "isAnswerKey": false
            },
            {
                "description": "[2, 3, 4, 5]",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "767",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "How can you prevent a function from being called multiple times in rapid succession?",
        "options": [
            {
                "description": "Using a debounce function",
                "isAnswerKey": true
            },
            {
                "description": "Using a throttling function",
                "isAnswerKey": false
            },
            {
                "description": "Using a memoization function",
                "isAnswerKey": false
            },
            {
                "description": "Using a recursive function",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "768",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following methods can result in a JavaScript memory leak?",
        "options": [
            {
                "description": "Circular references",
                "isAnswerKey": true
            },
            {
                "description": "Local variables",
                "isAnswerKey": false
            },
            {
                "description": "Pure functions",
                "isAnswerKey": false
            },
            {
                "description": "Arrow functions",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "769",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Consider the following code. What will be the output?\n\n```javascript\nconsole.log(0.1 + 0.2 === 0.3);\n```\n",
        "options": [
            {
                "description": "false",
                "isAnswerKey": true
            },
            {
                "description": "true",
                "isAnswerKey": false
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "NaN",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "770",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the primary benefit of using the module pattern in JavaScript?",
        "options": [
            {
                "description": "To encapsulate private data and expose public APIs",
                "isAnswerKey": true
            },
            {
                "description": "To create global variables",
                "isAnswerKey": false
            },
            {
                "description": "To increase the execution speed of scripts",
                "isAnswerKey": false
            },
            {
                "description": "To implement inheritance",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "771",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following code snippet, how would you refactor it to improve performance?\n\n```javascript\nconst arr = [1, 2, 3, 4, 5];\nfor (let i = 0; i < arr.length; i++) {\n  console.log(arr[i]);\n}\n```\n",
        "options": [
            {
                "description": "Store arr.length in a variable before the loop",
                "isAnswerKey": true
            },
            {
                "description": "Use a while loop instead",
                "isAnswerKey": false
            },
            {
                "description": "Use a for-each loop",
                "isAnswerKey": false
            },
            {
                "description": "Use a do-while loop",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "772",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following JavaScript patterns can be used for dependency injection?",
        "options": [
            {
                "description": "Inversion of Control",
                "isAnswerKey": true
            },
            {
                "description": "Singleton",
                "isAnswerKey": false
            },
            {
                "description": "Prototype",
                "isAnswerKey": false
            },
            {
                "description": "Factory",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "773",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is an effective way to prevent external code from modifying the properties of an object in JavaScript?",
        "options": [
            {
                "description": "Using Object.freeze()",
                "isAnswerKey": true
            },
            {
                "description": "Using Object.seal()",
                "isAnswerKey": false
            },
            {
                "description": "Using let instead of var",
                "isAnswerKey": false
            },
            {
                "description": "Using const for variable declaration",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "774",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which method would you use to improve the performance of a JavaScript function that is called repeatedly with the same arguments?",
        "options": [
            {
                "description": "Memoization",
                "isAnswerKey": true
            },
            {
                "description": "Debouncing",
                "isAnswerKey": false
            },
            {
                "description": "Throttling",
                "isAnswerKey": false
            },
            {
                "description": "Closure",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "775",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "In a Node.js application, how can you efficiently read a large file without blocking the event loop?",
        "options": [
            {
                "description": "Using a Readable Stream",
                "isAnswerKey": true
            },
            {
                "description": "Using fs.readFileSync()",
                "isAnswerKey": false
            },
            {
                "description": "Using fs.writeFile()",
                "isAnswerKey": false
            },
            {
                "description": "Using fs.appendFile()",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "776",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following strategies helps in optimizing the loading time of a large JavaScript application?",
        "options": [
            {
                "description": "Code splitting",
                "isAnswerKey": true
            },
            {
                "description": "Using synchronous AJAX calls",
                "isAnswerKey": false
            },
            {
                "description": "Minimizing the use of closures",
                "isAnswerKey": false
            },
            {
                "description": "Using larger image assets for better resolution",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "776",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following approaches is best suited for managing application state in a large-scale JavaScript application?",
        "options": [
            {
                "description": "Redux",
                "isAnswerKey": true
            },
            {
                "description": "Session storage",
                "isAnswerKey": false
            },
            {
                "description": "Local storage",
                "isAnswerKey": false
            },
            {
                "description": "Global variables",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "777",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the main advantage of using the Revealing Module Pattern in JavaScript?",
        "options": [
            {
                "description": "To encapsulate functionality and reveal only chosen methods and properties",
                "isAnswerKey": true
            },
            {
                "description": "To implement inheritance",
                "isAnswerKey": false
            },
            {
                "description": "To manage complex conditions",
                "isAnswerKey": false
            },
            {
                "description": "To create asynchronous code",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "778",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which of the following is the best choice for handling large datasets in JavaScript to improve performance?",
        "options": [
            {
                "description": "Use of Web Workers",
                "isAnswerKey": true
            },
            {
                "description": "Use of synchronous XMLHttpRequest",
                "isAnswerKey": false
            },
            {
                "description": "Use of global variables",
                "isAnswerKey": false
            },
            {
                "description": "Use of setInterval",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "780",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Consider the following asynchronous JavaScript code. What will be the output?\n\n```javascript\nasync function fetchData() {\n  try {\n    let response = await fetch('https://api.example.com/data');\n    let data = await response.json();\n    console.log(data);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n}\nfetch('https://api.example.com/invalid-url').then(response => response.json())\n.catch(error => console.error('Error in fetch:', error));\nfetch('https://api.example.com/data').then(response => response.json())\n.then(data => console.log('Data:', data));\n",
        "options": [
            {
                "description": "Logs the data from 'https://api.example.com/data'",
                "isAnswerKey": true
            },
            {
                "description": "Throws a network error",
                "isAnswerKey": false
            },
            {
                "description": "Logs 'undefined'",
                "isAnswerKey": false
            },
            {
                "description": "Logs 'Error in fetch:'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "781",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you optimize a function that is recursively calling itself multiple times with the same arguments in JavaScript?",
        "options": [
            {
                "description": "Implement memoization to cache results of function calls",
                "isAnswerKey": true
            },
            {
                "description": "Increase the call stack size",
                "isAnswerKey": false
            },
            {
                "description": "Use synchronous calls inside the function",
                "isAnswerKey": false
            },
            {
                "description": "Use a for loop instead of recursion",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "782",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Given the following code, what will be logged to the console?\n\n```javascript\nfor (var i = 0; i < 3; i++) {\n  setTimeout(function() {\n    console.log(i);\n  }, 1000);\n}\n```\n",
        "options": [
            {
                "description": "3, 3, 3",
                "isAnswerKey": true
            },
            {
                "description": "0, 1, 2",
                "isAnswerKey": false
            },
            {
                "description": "0, 0, 0",
                "isAnswerKey": false
            },
            {
                "description": "1, 2, 3",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "783",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you prevent memory leaks when adding event listeners in JavaScript?",
        "options": [
            {
                "description": "Remove event listeners when they are no longer needed",
                "isAnswerKey": true
            },
            {
                "description": "Use asynchronous functions for event handling",
                "isAnswerKey": false
            },
            {
                "description": "Only add event listeners to global objects",
                "isAnswerKey": false
            },
            {
                "description": "Use var instead of let and const",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "784",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which of the following is NOT a reason for a memory leak in a Node.js application?",
        "options": [
            {
                "description": "Using fs.readFileSync for large files",
                "isAnswerKey": true
            },
            {
                "description": "Accidentally creating global variables",
                "isAnswerKey": false
            },
            {
                "description": "Not unbinding event listeners",
                "isAnswerKey": false
            },
            {
                "description": "Keeping references to DOM elements",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "785",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you avoid the problem of 'callback hell' in asynchronous JavaScript code?",
        "options": [
            {
                "description": "By using Promises or async/await",
                "isAnswerKey": true
            },
            {
                "description": "By using synchronous code",
                "isAnswerKey": false
            },
            {
                "description": "By using more nested callbacks",
                "isAnswerKey": false
            },
            {
                "description": "By reducing the number of asynchronous operations",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "786",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "You need to reduce the number of HTTP requests made by a web application but still ensure that the data is fresh. Which technique would you use?",
        "options": [
            {
                "description": "Implement server-side caching with cache headers",
                "isAnswerKey": true
            },
            {
                "description": "Increase the timeout for HTTP requests",
                "isAnswerKey": false
            },
            {
                "description": "Reduce the number of data points being requested",
                "isAnswerKey": false
            },
            {
                "description": "Disable JavaScript",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "787",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the potential problem with using a singleton pattern in a large JavaScript application?",
        "options": [
            {
                "description": "It introduces global state which can lead to hard-to-track bugs",
                "isAnswerKey": true
            },
            {
                "description": "It makes the application too modular",
                "isAnswerKey": false
            },
            {
                "description": "It improves the performance of the application",
                "isAnswerKey": false
            },
            {
                "description": "It reduces the lines of code significantly",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "788",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which of the following options is most effective for preventing memory leaks when using event listeners?",
        "options": [
            {
                "description": "Use weak references for event handlers when possible",
                "isAnswerKey": true
            },
            {
                "description": "Use global event listeners",
                "isAnswerKey": false
            },
            {
                "description": "Increase the garbage collection frequency",
                "isAnswerKey": false
            },
            {
                "description": "Use arrow functions for all event listeners",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "789",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In a JavaScript application, which of the following techniques would you use to reduce the bundle size for production?",
        "options": [
            {
                "description": "Tree shaking",
                "isAnswerKey": true
            },
            {
                "description": "Using global variables",
                "isAnswerKey": false
            },
            {
                "description": "Increasing the memory limit",
                "isAnswerKey": false
            },
            {
                "description": "Using synchronous code",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "790",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which of the following actions would you take to debug a memory leak in a web application using JavaScript?",
        "options": [
            {
                "description": "Analyze heap snapshots to identify objects that are not being garbage collected",
                "isAnswerKey": true
            },
            {
                "description": "Increase the allocated memory in the browser",
                "isAnswerKey": false
            },
            {
                "description": "Reduce the number of function calls",
                "isAnswerKey": false
            },
            {
                "description": "Use more global variables for shared data",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "791",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In a large-scale JavaScript application, which approach would you take to handle deeply nested asynchronous callbacks?",
        "options": [
            {
                "description": "Convert callbacks to promises and use async/await",
                "isAnswerKey": true
            },
            {
                "description": "Use synchronous XMLHttpRequest",
                "isAnswerKey": false
            },
            {
                "description": "Nest more callbacks",
                "isAnswerKey": false
            },
            {
                "description": "Use global variables to manage state",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "792",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you optimize a JavaScript web application to improve its initial load time?",
        "options": [
            {
                "description": "Minify JavaScript and CSS files",
                "isAnswerKey": true
            },
            {
                "description": "Increase the size of images",
                "isAnswerKey": false
            },
            {
                "description": "Use synchronous HTTP requests",
                "isAnswerKey": false
            },
            {
                "description": "Disable browser caching",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "793",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Consider the following code snippet:\n\n```javascript\nconst fetchData = async (url) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\nfetchData('https://api.example.com/data')\n  .then(data => console.log(data));\n```\nWhat will be the output if the URL is invalid?",
        "options": [
            {
                "description": "Error: <error message>",
                "isAnswerKey": true
            },
            {
                "description": "undefined",
                "isAnswerKey": false
            },
            {
                "description": "No output",
                "isAnswerKey": false
            },
            {
                "description": "FetchError: request failed",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "794",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "You notice a significant performance drop in a JavaScript application due to constant re-rendering of components. What strategy should you apply to mitigate this issue?",
        "options": [
            {
                "description": "Implement shouldComponentUpdate in React components",
                "isAnswerKey": true
            },
            {
                "description": "Increase the server timeout",
                "isAnswerKey": false
            },
            {
                "description": "Use more global variables",
                "isAnswerKey": false
            },
            {
                "description": "Use var instead of let and const",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "795",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "You have a JavaScript function that processes a large dataset and is causing performance issues. What is the most effective way to optimize this function?",
        "options": [
            {
                "description": "Refactor the function to use a more efficient algorithm",
                "isAnswerKey": true
            },
            {
                "description": "Add more comments to explain the code",
                "isAnswerKey": false
            },
            {
                "description": "Increase the server's memory",
                "isAnswerKey": false
            },
            {
                "description": "Use global variables for temporary data",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "796",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which of the following practices is most effective for improving the scalability of a JavaScript application?",
        "options": [
            {
                "description": "Using microservices architecture",
                "isAnswerKey": true
            },
            {
                "description": "Using global variables for state management",
                "isAnswerKey": false
            },
            {
                "description": "Relying on synchronous operations",
                "isAnswerKey": false
            },
            {
                "description": "Using large monolithic codebases",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "797",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "You are tasked with designing a highly configurable system in JavaScript. Which pattern would you choose to allow easy configuration and extension of your system?",
        "options": [
            {
                "description": "Plugin Architecture",
                "isAnswerKey": true
            },
            {
                "description": "Observer Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Singleton Pattern",
                "isAnswerKey": false
            },
            {
                "description": "Decorator Pattern",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "798",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which of the following is a benefit of using the Publish-Subscribe pattern in JavaScript?",
        "options": [
            {
                "description": "Decouples the sender and receiver of messages",
                "isAnswerKey": true
            },
            {
                "description": "Reduces the number of HTTP requests",
                "isAnswerKey": false
            },
            {
                "description": "Ensures data consistency",
                "isAnswerKey": false
            },
            {
                "description": "Improves memory management",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "799",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "In a large JavaScript application, how can you enforce consistent coding styles across multiple teams?",
        "options": [
            {
                "description": "Using linting tools like ESLint with shared configurations",
                "isAnswerKey": true
            },
            {
                "description": "Allow each team to set their own coding standards",
                "isAnswerKey": false
            },
            {
                "description": "Encourage but not enforce a coding style guide",
                "isAnswerKey": false
            },
            {
                "description": "Using inline comments to indicate coding standards",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "800",
        "skill": "javascript",
        "category": "programming language",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the best practice for handling unhandled promise rejections in a Node.js application?",
        "options": [
            {
                "description": "Listen for the 'unhandledRejection' event and log the error",
                "isAnswerKey": true
            },
            {
                "description": "Ignore the error",
                "isAnswerKey": false
            },
            {
                "description": "Use synchronous code instead",
                "isAnswerKey": false
            },
            {
                "description": "Return undefined to avoid errors",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "801",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the default branch name in a new Git repository?",
        "options": [
            {
                "description": "master",
                "isAnswerKey": false
            },
            {
                "description": "main",
                "isAnswerKey": true
            },
            {
                "description": "development",
                "isAnswerKey": false
            },
            {
                "description": "release",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "802",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which command initializes a new Git repository?",
        "options": [
            {
                "description": "git start",
                "isAnswerKey": false
            },
            {
                "description": "git init",
                "isAnswerKey": true
            },
            {
                "description": "git new",
                "isAnswerKey": false
            },
            {
                "description": "git create",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "803",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which command stages all changes for the next commit?",
        "options": [
            {
                "description": "git add .",
                "isAnswerKey": true
            },
            {
                "description": "git commit -a",
                "isAnswerKey": false
            },
            {
                "description": "git push",
                "isAnswerKey": false
            },
            {
                "description": "git stage",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "804",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What does the command 'git status' do?",
        "options": [
            {
                "description": "Shows the commit history",
                "isAnswerKey": false
            },
            {
                "description": "Displays the current branch name",
                "isAnswerKey": false
            },
            {
                "description": "Shows the working tree status",
                "isAnswerKey": true
            },
            {
                "description": "Deletes the current branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "805",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which file is used to ignore files in Git?",
        "options": [
            {
                "description": ".gitignore",
                "isAnswerKey": true
            },
            {
                "description": ".gitconfig",
                "isAnswerKey": false
            },
            {
                "description": ".gitkeep",
                "isAnswerKey": false
            },
            {
                "description": "ignore.txt",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "806",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which command is used to view the commit history?",
        "options": [
            {
                "description": "git history",
                "isAnswerKey": false
            },
            {
                "description": "git log",
                "isAnswerKey": true
            },
            {
                "description": "git view",
                "isAnswerKey": false
            },
            {
                "description": "git list",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "807",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the purpose of a commit message?",
        "options": [
            {
                "description": "To backup the repository",
                "isAnswerKey": false
            },
            {
                "description": "To describe the changes",
                "isAnswerKey": true
            },
            {
                "description": "To delete branches",
                "isAnswerKey": false
            },
            {
                "description": "To fetch changes from the server",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "808",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which command is used to create a new branch?",
        "options": [
            {
                "description": "git branch new",
                "isAnswerKey": false
            },
            {
                "description": "git checkout new",
                "isAnswerKey": false
            },
            {
                "description": "git branch <name>",
                "isAnswerKey": true
            },
            {
                "description": "git switch <name>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "809",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "What command is used to switch branches in Git?",
        "options": [
            {
                "description": "git move <branch>",
                "isAnswerKey": false
            },
            {
                "description": "git switch <branch>",
                "isAnswerKey": true
            },
            {
                "description": "git change <branch>",
                "isAnswerKey": false
            },
            {
                "description": "git jump <branch>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "810",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 1,
        "type": "multiple_choice",
        "question": "How do you delete a branch in Git?",
        "options": [
            {
                "description": "git remove <branch>",
                "isAnswerKey": false
            },
            {
                "description": "git delete <branch>",
                "isAnswerKey": false
            },
            {
                "description": "git branch -d <branch>",
                "isAnswerKey": true
            },
            {
                "description": "git erase <branch>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "811",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the following Git command, what does it do? `git checkout -b feature`",
        "options": [
            {
                "description": "Deletes the 'feature' branch",
                "isAnswerKey": false
            },
            {
                "description": "Creates and switches to the 'feature' branch",
                "isAnswerKey": true
            },
            {
                "description": "Lists all branches with 'feature'",
                "isAnswerKey": false
            },
            {
                "description": "Renames the current branch to 'feature'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "812",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the result of running `git reset --hard HEAD~1`?",
        "options": [
            {
                "description": "It creates a new commit",
                "isAnswerKey": false
            },
            {
                "description": "It rewinds the current branch by one commit and resets the working directory",
                "isAnswerKey": true
            },
            {
                "description": "It merges the last two commits",
                "isAnswerKey": false
            },
            {
                "description": "It updates the commit message of the last commit",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "813",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Consider the following sequence of commands:\n```bash\ngit init\necho 'Hello World' > file.txt\ngit add file.txt\ngit commit -m 'First commit'\n```\nWhat is the state of 'file.txt' in the repository?",
        "options": [
            {
                "description": "Untracked",
                "isAnswerKey": false
            },
            {
                "description": "Staged",
                "isAnswerKey": false
            },
            {
                "description": "Committed",
                "isAnswerKey": true
            },
            {
                "description": "Ignored",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "814",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the `.git` directory?",
        "options": [
            {
                "description": "It contains user settings for GitHub",
                "isAnswerKey": false
            },
            {
                "description": "It stores the repository's history and configuration",
                "isAnswerKey": true
            },
            {
                "description": "It lists all contributors to the repository",
                "isAnswerKey": false
            },
            {
                "description": "It holds the README file",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "815",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "If you run `git commit` without the `-m` option, what happens?",
        "options": [
            {
                "description": "Git throws an error",
                "isAnswerKey": false
            },
            {
                "description": "Git opens a text editor to write a commit message",
                "isAnswerKey": true
            },
            {
                "description": "Git automatically generates a commit message",
                "isAnswerKey": false
            },
            {
                "description": "Git stages changes without committing",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "816",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which command retrieves changes from a remote repository without merging?",
        "options": [
            {
                "description": "git merge",
                "isAnswerKey": false
            },
            {
                "description": "git fetch",
                "isAnswerKey": true
            },
            {
                "description": "git pull",
                "isAnswerKey": false
            },
            {
                "description": "git clone",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "817",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What does `git diff` show?",
        "options": [
            {
                "description": "The list of untracked files",
                "isAnswerKey": false
            },
            {
                "description": "The differences between the working directory and the index",
                "isAnswerKey": true
            },
            {
                "description": "The commit history",
                "isAnswerKey": false
            },
            {
                "description": "The current branch name",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "818",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What will happen if you run `git pull origin main`?",
        "options": [
            {
                "description": "It fetches and merges changes from the 'main' branch in the origin repository",
                "isAnswerKey": true
            },
            {
                "description": "It deletes the 'main' branch from the origin repository",
                "isAnswerKey": false
            },
            {
                "description": "It only fetches changes from the origin repository",
                "isAnswerKey": false
            },
            {
                "description": "It pushes your local 'main' branch to the origin",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "819",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which command allows you to add a remote repository?",
        "options": [
            {
                "description": "git remote add <name> <url>",
                "isAnswerKey": true
            },
            {
                "description": "git add remote <url>",
                "isAnswerKey": false
            },
            {
                "description": "git link <name> <url>",
                "isAnswerKey": false
            },
            {
                "description": "git push remote <url>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "820",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 2,
        "type": "multiple_choice",
        "question": "What does the command `git clone <url>` do?",
        "options": [
            {
                "description": "Creates a new Git repository",
                "isAnswerKey": false
            },
            {
                "description": "Downloads a repository from a remote URL",
                "isAnswerKey": true
            },
            {
                "description": "Links a local repository to a remote URL",
                "isAnswerKey": false
            },
            {
                "description": "Synchronizes two local repositories",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "821",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Consider the following script:\n```bash\n#!/bin/bash\ngit init\nmkdir src\ncd src\necho 'print(\"Hello\")' > hello.py\ngit add hello.py\ncd ..\ngit commit -m 'Add hello.py'\n```\nWhich of the following is true after this script is executed?",
        "options": [
            {
                "description": "The repository contains no commits",
                "isAnswerKey": false
            },
            {
                "description": "The repository has one commit including 'hello.py'",
                "isAnswerKey": false
            },
            {
                "description": "The repository has one commit without 'hello.py'",
                "isAnswerKey": true
            },
            {
                "description": "The directory structure is invalid",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "822",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following code:\n```bash\ngit branch feature\n\ngit checkout feature\n\necho 'New feature' > feature.txt\n\ngit add feature.txt\n\ngit commit -m 'Add feature.txt'\n\n```\nWhat is the status of 'feature.txt' on the 'main' branch?",
        "options": [
            {
                "description": "Untracked",
                "isAnswerKey": true
            },
            {
                "description": "Staged",
                "isAnswerKey": false
            },
            {
                "description": "Committed",
                "isAnswerKey": false
            },
            {
                "description": "Ignored",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "823",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "You have two branches 'main' and 'feature'. What does the following command do?\n```bash\ngit merge feature\n```",
        "options": [
            {
                "description": "Deletes the 'feature' branch",
                "isAnswerKey": false
            },
            {
                "description": "Merges 'feature' into the current branch",
                "isAnswerKey": true
            },
            {
                "description": "Creates a new branch named 'feature'",
                "isAnswerKey": false
            },
            {
                "description": "Pushes 'feature' to the remote repository",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "824",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the purpose of the following command?\n```bash\ngit stash\n```",
        "options": [
            {
                "description": "Saves changes temporarily without committing",
                "isAnswerKey": true
            },
            {
                "description": "Deletes all unstaged changes",
                "isAnswerKey": false
            },
            {
                "description": "Commits all staged changes",
                "isAnswerKey": false
            },
            {
                "description": "Switches to the last commit",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "825",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Consider the following command:\n```bash\ngit rebase main\n```\nWhat is its effect when executed on a 'feature' branch?",
        "options": [
            {
                "description": "It merges 'main' into 'feature', retaining linear history",
                "isAnswerKey": true
            },
            {
                "description": "It creates a new branch from 'main'",
                "isAnswerKey": false
            },
            {
                "description": "It deletes the 'main' branch",
                "isAnswerKey": false
            },
            {
                "description": "It renames 'feature' to 'main'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "826",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "When should you use `git cherry-pick`?",
        "options": [
            {
                "description": "To merge two branches",
                "isAnswerKey": false
            },
            {
                "description": "To apply a specific commit to another branch",
                "isAnswerKey": true
            },
            {
                "description": "To delete a commit",
                "isAnswerKey": false
            },
            {
                "description": "To create a new branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "827",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following command:\n```bash\ngit config --global user.name 'John Doe'\n```\nWhat is the effect of this command?",
        "options": [
            {
                "description": "It changes the commit author name for the current repository",
                "isAnswerKey": false
            },
            {
                "description": "It sets the commit author name globally for all repositories",
                "isAnswerKey": true
            },
            {
                "description": "It removes the global Git configuration",
                "isAnswerKey": false
            },
            {
                "description": "It sets the username for remote access",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "828",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What does the following command do?\n```bash\ngit tag v1.0\n```",
        "options": [
            {
                "description": "Creates an annotated tag named 'v1.0'",
                "isAnswerKey": false
            },
            {
                "description": "Creates a lightweight tag named 'v1.0'",
                "isAnswerKey": true
            },
            {
                "description": "Deletes the tag 'v1.0'",
                "isAnswerKey": false
            },
            {
                "description": "Pushes the tag 'v1.0' to the remote",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "829",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "What does `git remote -v` display?",
        "options": [
            {
                "description": "The list of branches",
                "isAnswerKey": false
            },
            {
                "description": "The list of remote repositories with URLs",
                "isAnswerKey": true
            },
            {
                "description": "The current branch name",
                "isAnswerKey": false
            },
            {
                "description": "The commit history",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "830",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 3,
        "type": "multiple_choice",
        "question": "Consider the following command:\n```bash\ngit rm file.txt\n```\nWhat happens when this command is executed?",
        "options": [
            {
                "description": "It deletes 'file.txt' from the working directory only",
                "isAnswerKey": false
            },
            {
                "description": "It deletes 'file.txt' from the working directory and the index",
                "isAnswerKey": true
            },
            {
                "description": "It stages 'file.txt' for deletion",
                "isAnswerKey": false
            },
            {
                "description": "It restores 'file.txt' to the last committed state",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "831",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Consider the following script:\n```bash\ngit checkout main\ngit pull origin main\ngit checkout feature\ngit rebase main\n```\nWhat is the main purpose of these commands?",
        "options": [
            {
                "description": "To merge 'feature' into 'main'",
                "isAnswerKey": false
            },
            {
                "description": "To integrate the latest changes from 'main' into 'feature'",
                "isAnswerKey": true
            },
            {
                "description": "To delete the 'feature' branch",
                "isAnswerKey": false
            },
            {
                "description": "To create a new branch based on 'main'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "832",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Given the following Git command:\n```bash\ngit reflog\n```\nWhat information does this command provide?",
        "options": [
            {
                "description": "The list of all branches",
                "isAnswerKey": false
            },
            {
                "description": "The commit history for the current branch",
                "isAnswerKey": false
            },
            {
                "description": "A record of all changes made to the HEAD reference",
                "isAnswerKey": true
            },
            {
                "description": "The list of all remote repositories",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "833",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What does the following command do?\n```bash\ngit cherry-pick <commit_hash>\n```\n",
        "options": [
            {
                "description": "Deletes the specified commit",
                "isAnswerKey": false
            },
            {
                "description": "Applies changes from the specified commit to the current branch",
                "isAnswerKey": true
            },
            {
                "description": "Reverts the specified commit",
                "isAnswerKey": false
            },
            {
                "description": "Renames the specified commit",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "834",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Consider the following code snippet:\n```bash\ngit commit --amend -m 'Updated commit message'\n```\nWhat is the primary use of this command?",
        "options": [
            {
                "description": "To delete the last commit",
                "isAnswerKey": false
            },
            {
                "description": "To modify the last commit message",
                "isAnswerKey": true
            },
            {
                "description": "To create a new branch",
                "isAnswerKey": false
            },
            {
                "description": "To merge branches",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "835",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What will happen if you run `git reset --soft HEAD~1`?",
        "options": [
            {
                "description": "It deletes the last commit and resets the working directory",
                "isAnswerKey": false
            },
            {
                "description": "It rewinds the last commit but keeps changes staged",
                "isAnswerKey": true
            },
            {
                "description": "It merges the last two commits",
                "isAnswerKey": false
            },
            {
                "description": "It updates the commit message of the last commit",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "836",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which command is used to compare the working directory with the last commit?",
        "options": [
            {
                "description": "git compare",
                "isAnswerKey": false
            },
            {
                "description": "git diff HEAD",
                "isAnswerKey": true
            },
            {
                "description": "git show diff",
                "isAnswerKey": false
            },
            {
                "description": "git log",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "837",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Consider the following series of commands:\n```bash\ngit stash\necho 'Temporary change' > temp.txt\ngit stash pop\n```\nWhat happens to the changes after these commands are executed?",
        "options": [
            {
                "description": "All changes are lost",
                "isAnswerKey": false
            },
            {
                "description": "Stashed changes are applied and 'temp.txt' is kept",
                "isAnswerKey": true
            },
            {
                "description": "'temp.txt' is deleted",
                "isAnswerKey": false
            },
            {
                "description": "Only 'temp.txt' is stashed",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "838",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the effect of running the following commands?\n```bash\ngit checkout main\ngit merge --no-ff feature\n```",
        "options": [
            {
                "description": "It fast-forwards the 'main' branch to 'feature'",
                "isAnswerKey": false
            },
            {
                "description": "It creates a merge commit even if a fast-forward is possible",
                "isAnswerKey": true
            },
            {
                "description": "It deletes the 'feature' branch",
                "isAnswerKey": false
            },
            {
                "description": "It discards all changes in the 'feature' branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "839",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the main purpose of the following command?\n```bash\ngit bisect start\n```",
        "options": [
            {
                "description": "To start a new branch",
                "isAnswerKey": false
            },
            {
                "description": "To find the commit that introduced a bug",
                "isAnswerKey": true
            },
            {
                "description": "To list all commits",
                "isAnswerKey": false
            },
            {
                "description": "To reset to a previous commit",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "840",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which command is used to view detailed information about a specific commit?",
        "options": [
            {
                "description": "git show <commit>",
                "isAnswerKey": true
            },
            {
                "description": "git log <commit>",
                "isAnswerKey": false
            },
            {
                "description": "git diff <commit>",
                "isAnswerKey": false
            },
            {
                "description": "git inspect <commit>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "841",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Given the following command:\n```bash\ngit log --oneline\n```\nWhat information does this command provide?",
        "options": [
            {
                "description": "Full commit details",
                "isAnswerKey": false
            },
            {
                "description": "A condensed view of the commit history",
                "isAnswerKey": true
            },
            {
                "description": "List of untracked files",
                "isAnswerKey": false
            },
            {
                "description": "Detailed status of the working directory",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "842",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What would be the output of the following command?\n```bash\ngit rev-parse --short HEAD\n```",
        "options": [
            {
                "description": "The full commit message",
                "isAnswerKey": false
            },
            {
                "description": "The abbreviated commit hash",
                "isAnswerKey": true
            },
            {
                "description": "The commit author",
                "isAnswerKey": false
            },
            {
                "description": "The list of branches",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "843",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Consider the following command:\n```bash\ngit reset HEAD~2\n```\nWhat is the effect of this command?",
        "options": [
            {
                "description": "It deletes the last two commits",
                "isAnswerKey": false
            },
            {
                "description": "It unstages the last two commits but keeps the changes",
                "isAnswerKey": true
            },
            {
                "description": "It merges the last two commits",
                "isAnswerKey": false
            },
            {
                "description": "It reverts the last two commits",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "844",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Given the following command:\n```bash\ngit rebase -i HEAD~3\n```\nWhat does this command allow you to do?",
        "options": [
            {
                "description": "Interactively merge the last three commits",
                "isAnswerKey": false
            },
            {
                "description": "Interactively edit the last three commits",
                "isAnswerKey": true
            },
            {
                "description": "Delete the last three commits",
                "isAnswerKey": false
            },
            {
                "description": "Push the last three commits to the remote repository",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "845",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the effect of the following command?\n```bash\ngit tag -a v1.0 -m 'Version 1.0'\n```",
        "options": [
            {
                "description": "Creates an annotated tag named 'v1.0'",
                "isAnswerKey": true
            },
            {
                "description": "Deletes the tag 'v1.0'",
                "isAnswerKey": false
            },
            {
                "description": "Pushes the tag 'v1.0' to the remote",
                "isAnswerKey": false
            },
            {
                "description": "Creates a lightweight tag named 'v1.0'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "846",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the purpose of the command `git bisect good <commit>`?",
        "options": [
            {
                "description": "Marks the specified commit as faulty",
                "isAnswerKey": false
            },
            {
                "description": "Marks the specified commit as a known good state",
                "isAnswerKey": true
            },
            {
                "description": "Deletes the good commit",
                "isAnswerKey": false
            },
            {
                "description": "Reverts the specified commit",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "847",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Consider the following command:\n```bash\ngit describe --tags\n```\nWhat information does this provide?",
        "options": [
            {
                "description": "The last tag reachable from the current commit",
                "isAnswerKey": true
            },
            {
                "description": "The list of all tags",
                "isAnswerKey": false
            },
            {
                "description": "The commit history",
                "isAnswerKey": false
            },
            {
                "description": "The current branch name",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "848",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What does the following command do?\n```bash\ngit blame file.txt\n```",
        "options": [
            {
                "description": "Deletes the specified file",
                "isAnswerKey": false
            },
            {
                "description": "Shows what revision and author last modified each line of a file",
                "isAnswerKey": true
            },
            {
                "description": "Shows the commit history of a file",
                "isAnswerKey": false
            },
            {
                "description": "Displays the differences in a file",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "849",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the result of executing the following command?\n```bash\ngit push origin :feature\n```",
        "options": [
            {
                "description": "Pushes the 'feature' branch to the remote",
                "isAnswerKey": false
            },
            {
                "description": "Deletes the 'feature' branch from the remote",
                "isAnswerKey": true
            },
            {
                "description": "Creates a new branch named 'feature' on the remote",
                "isAnswerKey": false
            },
            {
                "description": "Merges 'feature' into the remote 'main' branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "850",
        "skill": "github",
        "category": "version control",
        "seniority": "fresher",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which of the following commands will list all branches both locally and remotely?",
        "options": [
            {
                "description": "git branch -r",
                "isAnswerKey": false
            },
            {
                "description": "git branch -a",
                "isAnswerKey": true
            },
            {
                "description": "git branch -l",
                "isAnswerKey": false
            },
            {
                "description": "git branch --all",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "851",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which command is used to initialize a new Git repository in your current directory?",
        "options": [
            {
                "description": "git start",
                "isAnswerKey": false
            },
            {
                "description": "git init",
                "isAnswerKey": true
            },
            {
                "description": "git create",
                "isAnswerKey": false
            },
            {
                "description": "git new",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "852",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What command lists all the branches in your repository?",
        "options": [
            {
                "description": "git branch",
                "isAnswerKey": true
            },
            {
                "description": "git list",
                "isAnswerKey": false
            },
            {
                "description": "git show-branches",
                "isAnswerKey": false
            },
            {
                "description": "git branches",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "853",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which command is used to stage changes for commit?",
        "options": [
            {
                "description": "git commit",
                "isAnswerKey": false
            },
            {
                "description": "git add",
                "isAnswerKey": true
            },
            {
                "description": "git stage",
                "isAnswerKey": false
            },
            {
                "description": "git amend",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "854",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which Git command is used to view the commit history?",
        "options": [
            {
                "description": "git log",
                "isAnswerKey": true
            },
            {
                "description": "git history",
                "isAnswerKey": false
            },
            {
                "description": "git show",
                "isAnswerKey": false
            },
            {
                "description": "git view",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "855",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What command creates a new branch called 'feature'?",
        "options": [
            {
                "description": "git branch new feature",
                "isAnswerKey": false
            },
            {
                "description": "git new branch feature",
                "isAnswerKey": false
            },
            {
                "description": "git branch feature",
                "isAnswerKey": true
            },
            {
                "description": "git create branch feature",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "856",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "How do you remove a file from the staging area?",
        "options": [
            {
                "description": "git remove",
                "isAnswerKey": false
            },
            {
                "description": "git reset",
                "isAnswerKey": true
            },
            {
                "description": "git delete",
                "isAnswerKey": false
            },
            {
                "description": "git unstage",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "857",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which command is used to merge a branch into the current branch?",
        "options": [
            {
                "description": "git integrate",
                "isAnswerKey": false
            },
            {
                "description": "git combine",
                "isAnswerKey": false
            },
            {
                "description": "git merge",
                "isAnswerKey": true
            },
            {
                "description": "git pull",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "858",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What does the 'git clone' command do?",
        "options": [
            {
                "description": "Creates a new repository",
                "isAnswerKey": false
            },
            {
                "description": "Copies a repository into a new directory",
                "isAnswerKey": true
            },
            {
                "description": "Deletes an existing repository",
                "isAnswerKey": false
            },
            {
                "description": "Merges two repositories",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "859",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "How can you check the status of your working directory in Git?",
        "options": [
            {
                "description": "git check",
                "isAnswerKey": false
            },
            {
                "description": "git status",
                "isAnswerKey": true
            },
            {
                "description": "git info",
                "isAnswerKey": false
            },
            {
                "description": "git verify",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "860",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which of the following commands updates your local repository with the latest changes from the remote repository?",
        "options": [
            {
                "description": "git fetch",
                "isAnswerKey": false
            },
            {
                "description": "git pull",
                "isAnswerKey": true
            },
            {
                "description": "git update",
                "isAnswerKey": false
            },
            {
                "description": "git sync",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "861",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the command `git log --oneline`, what is the output format?",
        "options": [
            {
                "description": "Detailed commit history with full messages",
                "isAnswerKey": false
            },
            {
                "description": "A single line per commit showing the commit hash and message",
                "isAnswerKey": true
            },
            {
                "description": "Only commit hashes",
                "isAnswerKey": false
            },
            {
                "description": "Only commit messages",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "862",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which command changes the branch you are currently working on?",
        "options": [
            {
                "description": "git branch switch",
                "isAnswerKey": false
            },
            {
                "description": "git change-branch",
                "isAnswerKey": false
            },
            {
                "description": "git checkout",
                "isAnswerKey": true
            },
            {
                "description": "git move",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "863",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "How can you view detailed information about a specific commit?",
        "options": [
            {
                "description": "git show <commit-hash>",
                "isAnswerKey": true
            },
            {
                "description": "git detail <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git info <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git log <commit-hash>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "864",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which command shows the differences between the working directory and the staging area?",
        "options": [
            {
                "description": "git compare",
                "isAnswerKey": false
            },
            {
                "description": "git diff",
                "isAnswerKey": true
            },
            {
                "description": "git status",
                "isAnswerKey": false
            },
            {
                "description": "git changes",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "865",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the `.gitignore` file?",
        "options": [
            {
                "description": "To ignore commit messages",
                "isAnswerKey": false
            },
            {
                "description": "To specify files and directories that should not be tracked by Git",
                "isAnswerKey": true
            },
            {
                "description": "To list all branches to be ignored",
                "isAnswerKey": false
            },
            {
                "description": "To ignore remote repositories",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "866",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which of the following commands will undo the last commit, keeping the changes in the staging area?",
        "options": [
            {
                "description": "git reset --hard HEAD~1",
                "isAnswerKey": false
            },
            {
                "description": "git revert HEAD",
                "isAnswerKey": false
            },
            {
                "description": "git reset --soft HEAD~1",
                "isAnswerKey": true
            },
            {
                "description": "git commit --amend",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "867",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which command is used to delete a branch named 'feature' locally?",
        "options": [
            {
                "description": "git delete branch feature",
                "isAnswerKey": false
            },
            {
                "description": "git branch -d feature",
                "isAnswerKey": true
            },
            {
                "description": "git remove branch feature",
                "isAnswerKey": false
            },
            {
                "description": "git branch delete feature",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "868",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What happens when you run `git push origin master`?",
        "options": [
            {
                "description": "Pushes the local master branch changes to the default remote branch",
                "isAnswerKey": false
            },
            {
                "description": "Pushes the local master branch changes to the master branch of the remote named origin",
                "isAnswerKey": true
            },
            {
                "description": "Fetches changes from the master branch of the remote named origin",
                "isAnswerKey": false
            },
            {
                "description": "Deletes the master branch on the remote named origin",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "869",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which command is used to rename a branch in Git?",
        "options": [
            {
                "description": "git branch --rename old-name new-name",
                "isAnswerKey": false
            },
            {
                "description": "git rename-branch old-name new-name",
                "isAnswerKey": false
            },
            {
                "description": "git branch -m new-name",
                "isAnswerKey": true
            },
            {
                "description": "git rename old-name new-name",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "870",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the result of running `git fetch`?",
        "options": [
            {
                "description": "It updates and merges the remote changes into your local branch",
                "isAnswerKey": false
            },
            {
                "description": "It downloads objects and refs from another repository without merging",
                "isAnswerKey": true
            },
            {
                "description": "It deletes all local changes and synchronizes with the remote repository",
                "isAnswerKey": false
            },
            {
                "description": "It creates a new branch from the fetched data",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "871",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following code snippet, what will be the output?\n\n```bash\n$ git init\n$ echo 'Hello' > file.txt\n$ git add file.txt\n$ git commit -m 'Initial commit'\n$ echo 'World' > file.txt\n$ git checkout -- file.txt\n$ cat file.txt\n```\n",
        "options": [
            {
                "description": "Hello",
                "isAnswerKey": true
            },
            {
                "description": "World",
                "isAnswerKey": false
            },
            {
                "description": "HelloWorld",
                "isAnswerKey": false
            },
            {
                "description": "Error: file.txt does not exist",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "872",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What does the following command do in Git?\n\n```bash\ngit config --global alias.co checkout\n```\n",
        "options": [
            {
                "description": "Sets the default branch to 'co'",
                "isAnswerKey": false
            },
            {
                "description": "Creates an alias for the 'git checkout' command",
                "isAnswerKey": true
            },
            {
                "description": "Configures Git to use 'co' as a commit message prefix",
                "isAnswerKey": false
            },
            {
                "description": "Deletes the 'checkout' alias",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "873",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What does the following command sequence do?\n\n```bash\n$ git checkout feature\n$ git rebase master\n```\n",
        "options": [
            {
                "description": "Merges master into the feature branch",
                "isAnswerKey": false
            },
            {
                "description": "Reapplies commits from the feature branch onto the master branch",
                "isAnswerKey": false
            },
            {
                "description": "Reapplies commits from the master branch onto the feature branch",
                "isAnswerKey": true
            },
            {
                "description": "Deletes the master branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "874",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will the following Git command do?\n\n```bash\ngit reset --hard HEAD~1\n```\n",
        "options": [
            {
                "description": "Removes the last commit and retains local changes",
                "isAnswerKey": false
            },
            {
                "description": "Removes the last commit and discards all local changes",
                "isAnswerKey": true
            },
            {
                "description": "Creates a new commit with the same changes",
                "isAnswerKey": false
            },
            {
                "description": "Pushes the last commit to the remote repository",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "875",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Given the following command sequence, what will be the content of `file.txt` after execution?\n\n```bash\n$ echo 'Version 1' > file.txt\n$ git add file.txt\n$ git commit -m 'Version 1'\n$ echo 'Version 2' > file.txt\n$ git stash\n$ echo 'Version 3' > file.txt\n$ git stash pop\n$ cat file.txt\n```\n",
        "options": [
            {
                "description": "Version 1",
                "isAnswerKey": false
            },
            {
                "description": "Version 2",
                "isAnswerKey": true
            },
            {
                "description": "Version 3",
                "isAnswerKey": false
            },
            {
                "description": "Version 1\nVersion 2",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "876",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What does the following Git command do?\n\n```bash\ngit cherry-pick abc123\n```\n",
        "options": [
            {
                "description": "Deletes the commit with hash abc123",
                "isAnswerKey": false
            },
            {
                "description": "Applies changes from commit abc123 onto the current branch",
                "isAnswerKey": true
            },
            {
                "description": "Creates a new branch named abc123",
                "isAnswerKey": false
            },
            {
                "description": "Reverts the changes made by commit abc123",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "877",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What will be the result of the following command sequence?\n\n```bash\n$ git add .\n$ git commit -m 'Changes'\n$ git reset HEAD~1\n$ git status\n```\n",
        "options": [
            {
                "description": "All changes are committed and the working directory is clean",
                "isAnswerKey": false
            },
            {
                "description": "All changes are staged for commit",
                "isAnswerKey": false
            },
            {
                "description": "All changes are unstaged and in the working directory",
                "isAnswerKey": true
            },
            {
                "description": "The last commit is reverted",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "878",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "When you run `git stash apply`, what happens to your working directory?",
        "options": [
            {
                "description": "Changes are removed permanently",
                "isAnswerKey": false
            },
            {
                "description": "Stashed changes are reapplied to the working directory",
                "isAnswerKey": true
            },
            {
                "description": "All files are updated to the latest commit",
                "isAnswerKey": false
            },
            {
                "description": "A new branch is created from the stashed changes",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "879",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the purpose of the `git bisect` command?",
        "options": [
            {
                "description": "To merge two branches",
                "isAnswerKey": false
            },
            {
                "description": "To find the commit that introduced a bug",
                "isAnswerKey": true
            },
            {
                "description": "To create a new branch",
                "isAnswerKey": false
            },
            {
                "description": "To delete a branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "880",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the purpose of the following command?\n\n```bash\ngit fetch origin\n```\n",
        "options": [
            {
                "description": "To create a new branch called origin",
                "isAnswerKey": false
            },
            {
                "description": "To merge all branches from the remote into the current branch",
                "isAnswerKey": false
            },
            {
                "description": "To update local refs to match the remote without merging changes",
                "isAnswerKey": true
            },
            {
                "description": "To remove the origin branch from the local repository",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "881",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the main purpose of the command `git cherry-pick`?",
        "options": [
            {
                "description": "To merge changes from a branch without affecting commit history",
                "isAnswerKey": true
            },
            {
                "description": "To delete a feature branch",
                "isAnswerKey": false
            },
            {
                "description": "To create a new branch",
                "isAnswerKey": false
            },
            {
                "description": "To pull changes from a remote branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "882",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the purpose of the following Git command?\n\n```bash\ngit reflog\n```\n",
        "options": [
            {
                "description": "To view the commit logs",
                "isAnswerKey": false
            },
            {
                "description": "To show the reference logs, which track updates to the tip of branches",
                "isAnswerKey": true
            },
            {
                "description": "To reset the last commit",
                "isAnswerKey": false
            },
            {
                "description": "To delete the reflog",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "883",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In the following situation, what will be the output of `git status`?\n\n1. You modify a file named `app.js` and `styles.css`.\n2. You run `git add app.js`.\n3. You remove a file named `temp.txt`.\n\n```bash\n$ git status\n```\n",
        "options": [
            {
                "description": "Changes to be committed: app.js\nChanges not staged for commit: styles.css\nUntracked files: temp",
                "isAnswerKey": true
            },
            {
                "description": "Changes not staged for commit: app.js, styles.css\nUntracked files: temp",
                "isAnswerKey": false
            },
            {
                "description": "Untracked files: temp\nChanges to be committed: app.js, styles.css",
                "isAnswerKey": false
            },
            {
                "description": "Changes to be committed: app.js\nChanges not staged for commit: styles.css",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "884",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the result of executing the following command sequence?\n\n```bash\n$ git add .\n$ git commit -m 'Update'\n$ git reset HEAD~1\n$ git status\n```\n",
        "options": [
            {
                "description": "All changes are staged for commit",
                "isAnswerKey": false
            },
            {
                "description": "Working directory matches the last commit",
                "isAnswerKey": false
            },
            {
                "description": "Changes are in the staging area",
                "isAnswerKey": false
            },
            {
                "description": "Changes are unstaged",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "885",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What will happen if you run the following command?\n\n```bash\ngit rm --cached file.txt\n```\n",
        "options": [
            {
                "description": "Deletes file.txt from the working directory",
                "isAnswerKey": false
            },
            {
                "description": "Unstages file.txt but keeps it in the working directory",
                "isAnswerKey": true
            },
            {
                "description": "Commits the file and removes it from the staging area",
                "isAnswerKey": false
            },
            {
                "description": "Permanently deletes the file from the repository",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "886",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which of the following will cause a Git merge conflict?",
        "options": [
            {
                "description": "Merging two branches with no overlapping changes",
                "isAnswerKey": false
            },
            {
                "description": "Merging a branch where the same file is modified in different locations",
                "isAnswerKey": false
            },
            {
                "description": "Merging two branches with changes to the same line in the same file",
                "isAnswerKey": true
            },
            {
                "description": "Merging a branch with a fast-forward option",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "887",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "After running `git merge`, you encounter a conflict in `app.js`. What is the best practice to resolve it?",
        "options": [
            {
                "description": "Delete the conflict marker lines and choose the desired content",
                "isAnswerKey": false
            },
            {
                "description": "Run `git merge --continue` to automatically resolve",
                "isAnswerKey": false
            },
            {
                "description": "Use a merge tool to resolve conflicts, then stage and commit the changes",
                "isAnswerKey": true
            },
            {
                "description": "Run `git reset --hard` to cancel the merge",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "888",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What does the `git reflog` command do?",
        "options": [
            {
                "description": "Deletes obsolete references",
                "isAnswerKey": false
            },
            {
                "description": "Shows a history of all references",
                "isAnswerKey": true
            },
            {
                "description": "Lists all branches",
                "isAnswerKey": false
            },
            {
                "description": "Initializes a new log file",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "889",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the effect of the `git rebase --abort` command?",
        "options": [
            {
                "description": "Resets the entire repository to the first commit",
                "isAnswerKey": false
            },
            {
                "description": "Aborts the rebase process and returns to the original state",
                "isAnswerKey": true
            },
            {
                "description": "Deletes the current branch",
                "isAnswerKey": false
            },
            {
                "description": "Commits all changes and finishes the rebase",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "890",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "In the following situation, what will be the content of `file.txt` after resolving the merge conflict?\n\nFile `master` branch:\n```\nLine 1\nLine 2\nLine 3\n```\n\nFeature branch modification:\n\n```bash\n$ echo 'Line 1' > file.txt\n$ echo 'New Line' >> file.txt\n$ echo 'Line 3' >> file.txt\n$ git add .\n$ git commit -m 'Feature changes'\n```\nNow, merging `feature` into `master` results in conflict at line 2.\n",
        "options": [
            {
                "description": "Line 1\nLine 2\nLine 3",
                "isAnswerKey": false
            },
            {
                "description": "Line 1\nFeature changes\nLine 3",
                "isAnswerKey": true
            },
            {
                "description": "Line 1\nLine 2\nLine 3\nLine 2",
                "isAnswerKey": false
            },
            {
                "description": "Line 1\nLine 2",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "891",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the purpose of the `git rebase -i HEAD~3` command?",
        "options": [
            {
                "description": "To merge the last 3 commits into one",
                "isAnswerKey": false
            },
            {
                "description": "To interactively rebase the last 3 commits",
                "isAnswerKey": true
            },
            {
                "description": "To permanently delete the last 3 commits",
                "isAnswerKey": false
            },
            {
                "description": "To create a branch with the last 3 commits",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "892",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "In the following command sequence, what will be the final content of `file.txt`?\n\n```bash\n$ echo 'Start' > file.txt\n$ git add file.txt\n$ git commit -m 'Start'\n$ echo 'Middle' >> file.txt\n$ git add file.txt\n$ git commit -m 'Middle'\n$ echo 'End' >> file.txt\n$ git add file.txt\n$ git commit -m 'End'\n$ git reset --hard HEAD~1\n$ git log --oneline\n```\n",
        "options": [
            {
                "description": "Start\nMiddle",
                "isAnswerKey": false
            },
            {
                "description": "Start",
                "isAnswerKey": true
            },
            {
                "description": "End",
                "isAnswerKey": false
            },
            {
                "description": "Middle",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "893",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the effect of the following command sequence in Git?\n\n```bash\n$ git reset --hard HEAD~2\n$ git merge --abort\n```",
        "options": [
            {
                "description": "Reverts the last two commits and aborts the merge",
                "isAnswerKey": true
            },
            {
                "description": "Resets the last two commits but does not abort the merge",
                "isAnswerKey": false
            },
            {
                "description": "Only resets the last commit",
                "isAnswerKey": false
            },
            {
                "description": "Performs a soft reset and continues the merge",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "894",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the result of running this Git command sequence?\n\n```bash\n$ git checkout -b feature\n$ echo 'Line 1' > file.txt\n$ git add file.txt\n$ git commit -m 'Added line 1'\n$ echo 'Line 2' >> file.txt\n$ git commit -am 'Add line 2'\n$ git checkout master\n$ git merge feature\n$ cat file.txt\n```\n",
        "options": [
            {
                "description": "The file.txt is empty",
                "isAnswerKey": false
            },
            {
                "description": "Line 1\nLine 2",
                "isAnswerKey": false
            },
            {
                "description": "Line 1",
                "isAnswerKey": true
            },
            {
                "description": "Line 1\nLine 2\nLine 1",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "895",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Given the following command `git log --graph --oneline`, what is the primary purpose of using this command?",
        "options": [
            {
                "description": "To show a detailed view of the commit history",
                "isAnswerKey": false
            },
            {
                "description": "To display a summary of commits in a graphical format",
                "isAnswerKey": true
            },
            {
                "description": "To undo the last commit",
                "isAnswerKey": false
            },
            {
                "description": "To create a new branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "896",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What will be the effect of executing the following commands?\n\n```bash\n$ git checkout master\n$ git merge --squash feature\n$ git commit -m 'Merging feature'\n```\n",
        "options": [
            {
                "description": "Creates a new commit that combines all changes from the feature branch",
                "isAnswerKey": true
            },
            {
                "description": "Reverts all changes made in the 'feature' branch",
                "isAnswerKey": false
            },
            {
                "description": "Deletes the feature branch",
                "isAnswerKey": false
            },
            {
                "description": "Creates a new branch named 'feature'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "897",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What does the following command do?\n\n```bash\ngit reflog\n```\n",
        "options": [
            {
                "description": "Lists all branches",
                "isAnswerKey": false
            },
            {
                "description": "Shows reference logs of all refs in the repository",
                "isAnswerKey": true
            },
            {
                "description": "Resets the last commit",
                "isAnswerKey": false
            },
            {
                "description": "Deletes all reflogs",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "898",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the purpose of the `git clean` command?",
        "options": [
            {
                "description": "Deletes untracked files from the working directory",
                "isAnswerKey": true
            },
            {
                "description": "Resets the repository to its initial state",
                "isAnswerKey": false
            },
            {
                "description": "Removes ignored files from the repository",
                "isAnswerKey": false
            },
            {
                "description": "Clears the commit history",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "899",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the result of the following git command?\n\n```bash\ngit stash apply --index\n```\n",
        "options": [
            {
                "description": "Applies the stashed changes and clears the stash",
                "isAnswerKey": false
            },
            {
                "description": "Applies the stashed changes and removes them from the stash list",
                "isAnswerKey": false
            },
            {
                "description": "Applies the latest stash and keeps the changes in the stash",
                "isAnswerKey": true
            },
            {
                "description": "Only reverts the last commit",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "900",
        "skill": "github",
        "category": "version control",
        "seniority": "junior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which command is used to apply the latest stashed changes and delete the stash?",
        "options": [
            {
                "description": "git stash list",
                "isAnswerKey": false
            },
            {
                "description": "git apply",
                "isAnswerKey": false
            },
            {
                "description": "git stash pop",
                "isAnswerKey": true
            },
            {
                "description": "git stash apply",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "901",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which command is used to initialize a new Git repository in a directory?",
        "options": [
            {
                "description": "git start",
                "isAnswerKey": false
            },
            {
                "description": "git init",
                "isAnswerKey": true
            },
            {
                "description": "git create",
                "isAnswerKey": false
            },
            {
                "description": "git new",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "902",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the command to add all changes in the current directory to the staging area?",
        "options": [
            {
                "description": "git add .",
                "isAnswerKey": true
            },
            {
                "description": "git commit -a",
                "isAnswerKey": false
            },
            {
                "description": "git push --all",
                "isAnswerKey": false
            },
            {
                "description": "git stage .",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "903",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "How do you clone a repository from GitHub using HTTPS?",
        "options": [
            {
                "description": "git clone ssh://github.com/user/repo.git",
                "isAnswerKey": false
            },
            {
                "description": "git clone https://github.com/user/repo.git",
                "isAnswerKey": true
            },
            {
                "description": "git clone user@github.com:user/repo.git",
                "isAnswerKey": false
            },
            {
                "description": "git clone ftp://github.com/user/repo.git",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "904",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which command lists all branches in your repository?",
        "options": [
            {
                "description": "git branch --list",
                "isAnswerKey": false
            },
            {
                "description": "git branch -a",
                "isAnswerKey": false
            },
            {
                "description": "git list branches",
                "isAnswerKey": false
            },
            {
                "description": "git branch",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "905",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "What command do you use to view the commit history in Git?",
        "options": [
            {
                "description": "git history",
                "isAnswerKey": false
            },
            {
                "description": "git log",
                "isAnswerKey": true
            },
            {
                "description": "git commits",
                "isAnswerKey": false
            },
            {
                "description": "git show-log",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "906",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the command to create a new branch in Git?",
        "options": [
            {
                "description": "git create branch <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git new branch <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git branch <branch-name>",
                "isAnswerKey": true
            },
            {
                "description": "git start branch <branch-name>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "907",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which Git command is used to merge another branch into your active branch?",
        "options": [
            {
                "description": "git merge <branch-name>",
                "isAnswerKey": true
            },
            {
                "description": "git integrate <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git join <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git update <branch-name>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "908",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "If you want to discard changes in your working directory, what command should you use?",
        "options": [
            {
                "description": "git checkout -- <file>",
                "isAnswerKey": true
            },
            {
                "description": "git reset --hard <file>",
                "isAnswerKey": false
            },
            {
                "description": "git clean <file>",
                "isAnswerKey": false
            },
            {
                "description": "git discard <file>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "909",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "How do you fetch updates from the remote repository without merging?",
        "options": [
            {
                "description": "git pull --no-merge",
                "isAnswerKey": false
            },
            {
                "description": "git fetch",
                "isAnswerKey": true
            },
            {
                "description": "git update",
                "isAnswerKey": false
            },
            {
                "description": "git sync",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "910",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 1,
        "type": "multiple_choice",
        "question": "What command do you use to remove a file from the staging area?",
        "options": [
            {
                "description": "git remove <file>",
                "isAnswerKey": false
            },
            {
                "description": "git unstage <file>",
                "isAnswerKey": false
            },
            {
                "description": "git reset <file>",
                "isAnswerKey": true
            },
            {
                "description": "git discard <file>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "911",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "You have made several commits in your local repository. How can you push these changes to a remote repository?",
        "options": [
            {
                "description": "git upload",
                "isAnswerKey": false
            },
            {
                "description": "git push",
                "isAnswerKey": true
            },
            {
                "description": "git commit",
                "isAnswerKey": false
            },
            {
                "description": "git sync",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "912",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which command allows you to rename a branch in Git?",
        "options": [
            {
                "description": "git rename-branch <new-name>",
                "isAnswerKey": false
            },
            {
                "description": "git branch -m <new-name>",
                "isAnswerKey": true
            },
            {
                "description": "git move-branch <new-name>",
                "isAnswerKey": false
            },
            {
                "description": "git switch-branch <new-name>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "913",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "You want to reset your current branch to a specific commit. Which command should you use?",
        "options": [
            {
                "description": "git reset --hard <commit>",
                "isAnswerKey": true
            },
            {
                "description": "git checkout <commit>",
                "isAnswerKey": false
            },
            {
                "description": "git revert <commit>",
                "isAnswerKey": false
            },
            {
                "description": "git rebase <commit>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "914",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the .gitignore file in a Git repository?",
        "options": [
            {
                "description": "To ignore files when pulling from remote",
                "isAnswerKey": false
            },
            {
                "description": "To specify files and directories to exclude from version control",
                "isAnswerKey": true
            },
            {
                "description": "To lock files from being edited",
                "isAnswerKey": false
            },
            {
                "description": "To prevent files from being deleted",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "915",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "In Git, what does the command 'git pull' do?",
        "options": [
            {
                "description": "Fetches from and integrates with another repository or a local branch",
                "isAnswerKey": true
            },
            {
                "description": "Uploads local repository content to a remote repository",
                "isAnswerKey": false
            },
            {
                "description": "Removes all local changes",
                "isAnswerKey": false
            },
            {
                "description": "Lists all remote branches",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "916",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the result of using the command 'git fetch'?",
        "options": [
            {
                "description": "It merges changes from the remote to the local branch",
                "isAnswerKey": false
            },
            {
                "description": "It downloads objects and refs from another repository",
                "isAnswerKey": true
            },
            {
                "description": "It uploads all files to the remote",
                "isAnswerKey": false
            },
            {
                "description": "It deletes all stale branches",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "917",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "How can you list all tags in a Git repository?",
        "options": [
            {
                "description": "git tag -a",
                "isAnswerKey": false
            },
            {
                "description": "git list-tags",
                "isAnswerKey": false
            },
            {
                "description": "git show tags",
                "isAnswerKey": false
            },
            {
                "description": "git tag",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "918",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the effect of 'git stash pop'?",
        "options": [
            {
                "description": "It saves changes to a new branch",
                "isAnswerKey": false
            },
            {
                "description": "It applies stashed changes and removes them from the stash list",
                "isAnswerKey": true
            },
            {
                "description": "It deletes all stashed changes",
                "isAnswerKey": false
            },
            {
                "description": "It lists all stashed changes",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "919",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the purpose of the 'git rebase' command?",
        "options": [
            {
                "description": "To combine multiple branches into one",
                "isAnswerKey": false
            },
            {
                "description": "To interactively edit commit messages",
                "isAnswerKey": false
            },
            {
                "description": "To move or combine commits from one branch onto another",
                "isAnswerKey": true
            },
            {
                "description": "To find and fix merge conflicts",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "920",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 2,
        "type": "multiple_choice",
        "question": "How do you create a new tag in a Git repository?",
        "options": [
            {
                "description": "git new tag <tag-name>",
                "isAnswerKey": false
            },
            {
                "description": "git create tag <tag-name>",
                "isAnswerKey": false
            },
            {
                "description": "git tag <tag-name>",
                "isAnswerKey": true
            },
            {
                "description": "git add tag <tag-name>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "921",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "You find that a commit message is incorrect. How can you change the last commit message?",
        "options": [
            {
                "description": "git edit --amend",
                "isAnswerKey": false
            },
            {
                "description": "git commit --amend",
                "isAnswerKey": true
            },
            {
                "description": "git modify <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git change-message <commit-hash>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "922",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "In a Git project, you have the following branches: master, feature-a, and feature-b. What command will you use to delete the branch 'feature-a'?",
        "options": [
            {
                "description": "git branch -d feature-a",
                "isAnswerKey": true
            },
            {
                "description": "git branch --remove feature-a",
                "isAnswerKey": false
            },
            {
                "description": "git delete branch feature-a",
                "isAnswerKey": false
            },
            {
                "description": "git rm branch feature-a",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "923",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "You need to see the difference between your working directory and the last commit. Which command should you use?",
        "options": [
            {
                "description": "git diff HEAD",
                "isAnswerKey": true
            },
            {
                "description": "git compare HEAD",
                "isAnswerKey": false
            },
            {
                "description": "git diff --cached",
                "isAnswerKey": false
            },
            {
                "description": "git show diff",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "924",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which command can you use to revert a commit by creating a new commit?",
        "options": [
            {
                "description": "git undo <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git revert <commit-hash>",
                "isAnswerKey": true
            },
            {
                "description": "git rollback <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git reset --soft <commit-hash>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "925",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "To review the commit history with changes in files, which command will you use?",
        "options": [
            {
                "description": "git log --oneline",
                "isAnswerKey": false
            },
            {
                "description": "git log -p",
                "isAnswerKey": true
            },
            {
                "description": "git log --graph",
                "isAnswerKey": false
            },
            {
                "description": "git log --stat",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "926",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What command would you use to stage all changes in a directory except for the changes in a specific file?",
        "options": [
            {
                "description": "git add --all",
                "isAnswerKey": false
            },
            {
                "description": "git add . && git reset <file>",
                "isAnswerKey": true
            },
            {
                "description": "git stage --exclude <file>",
                "isAnswerKey": false
            },
            {
                "description": "git add --except <file>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "927",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "Which command is used to stage previous changes and make them part of the current commit?",
        "options": [
            {
                "description": "git commit --reuse-message",
                "isAnswerKey": false
            },
            {
                "description": "git commit --squash",
                "isAnswerKey": false
            },
            {
                "description": "git commit --amend",
                "isAnswerKey": true
            },
            {
                "description": "git commit --fixup",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "928",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the effect of 'git checkout <branch-name>'?",
        "options": [
            {
                "description": "It deletes the branch",
                "isAnswerKey": false
            },
            {
                "description": "It changes the HEAD to the specified branch",
                "isAnswerKey": true
            },
            {
                "description": "It merges the branch into the current branch",
                "isAnswerKey": false
            },
            {
                "description": "It renames the branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "929",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you view the changes staged for the next commit?",
        "options": [
            {
                "description": "git diff",
                "isAnswerKey": false
            },
            {
                "description": "git diff --cached",
                "isAnswerKey": true
            },
            {
                "description": "git diff HEAD",
                "isAnswerKey": false
            },
            {
                "description": "git diff --staged",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "930",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 3,
        "type": "multiple_choice",
        "question": "How do you remove a file from the working directory and the staging area?",
        "options": [
            {
                "description": "git delete <file>",
                "isAnswerKey": false
            },
            {
                "description": "git rm <file>",
                "isAnswerKey": true
            },
            {
                "description": "git remove <file>",
                "isAnswerKey": false
            },
            {
                "description": "git clean <file>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "931",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "You have a branch with uncommitted changes and want to switch to another branch to fix a bug. What should you do?",
        "options": [
            {
                "description": "git stash && git checkout <branch-name>",
                "isAnswerKey": true
            },
            {
                "description": "git reset && git checkout <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git commit -a && git checkout <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git discard && git checkout <branch-name>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "932",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you reapply a commit that was undone using 'git revert'?",
        "options": [
            {
                "description": "git redo <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git cherry-pick <commit-hash>",
                "isAnswerKey": true
            },
            {
                "description": "git apply <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git merge <commit-hash>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "933",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "You need to relocate a commit to a different branch. Which command will you use?",
        "options": [
            {
                "description": "git move <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git rebase <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git cherry-pick <commit-hash>",
                "isAnswerKey": true
            },
            {
                "description": "git reset <commit-hash>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "934",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "You want to combine multiple commits into a single commit. How can you accomplish this?",
        "options": [
            {
                "description": "git combine",
                "isAnswerKey": false
            },
            {
                "description": "git squash",
                "isAnswerKey": false
            },
            {
                "description": "git rebase -i",
                "isAnswerKey": true
            },
            {
                "description": "git compress",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "935",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which command would you use to compare the changes between two branches?",
        "options": [
            {
                "description": "git compare branch1 branch2",
                "isAnswerKey": false
            },
            {
                "description": "git diff branch1..branch2",
                "isAnswerKey": true
            },
            {
                "description": "git log branch1 branch2",
                "isAnswerKey": false
            },
            {
                "description": "git show differences branch1 branch2",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "936",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What command would you use to apply changes from a specific commit to your current HEAD?",
        "options": [
            {
                "description": "git apply <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git cherry-pick <commit-hash>",
                "isAnswerKey": true
            },
            {
                "description": "git merge <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git add <commit-hash>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "937",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "You need to discard all changes in your working directory. What is the safest way to do this?",
        "options": [
            {
                "description": "git reset --hard HEAD",
                "isAnswerKey": false
            },
            {
                "description": "git checkout .",
                "isAnswerKey": true
            },
            {
                "description": "git remove --all",
                "isAnswerKey": false
            },
            {
                "description": "git clean -f",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "938",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which Git command can be used to find and fix merge conflicts interactively?",
        "options": [
            {
                "description": "git merge --interactive",
                "isAnswerKey": false
            },
            {
                "description": "git rebase -i",
                "isAnswerKey": true
            },
            {
                "description": "git resolve",
                "isAnswerKey": false
            },
            {
                "description": "git conflict",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "939",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you view detailed information about a specific commit?",
        "options": [
            {
                "description": "git show <commit-hash>",
                "isAnswerKey": true
            },
            {
                "description": "git info <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git detail <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git log --details <commit-hash>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "940",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the best command to use when you need to remove all untracked files in your working directory?",
        "options": [
            {
                "description": "git clean -fd",
                "isAnswerKey": true
            },
            {
                "description": "git reset --untracked",
                "isAnswerKey": false
            },
            {
                "description": "git delete --untracked",
                "isAnswerKey": false
            },
            {
                "description": "git remove --all",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "941",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "You need to move a commit from one branch to another without redoing the work. What command should you use?",
        "options": [
            {
                "description": "git cherry-pick",
                "isAnswerKey": true
            },
            {
                "description": "git move-commit",
                "isAnswerKey": false
            },
            {
                "description": "git transfer-commit",
                "isAnswerKey": false
            },
            {
                "description": "git checkout commit",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "942",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "You need to fix a commit deep in your history without affecting the commit hash. Which method will you use?",
        "options": [
            {
                "description": "git rebase --interactive",
                "isAnswerKey": false
            },
            {
                "description": "git rebase --root",
                "isAnswerKey": false
            },
            {
                "description": "git amend-deep",
                "isAnswerKey": false
            },
            {
                "description": "git filter-branch",
                "isAnswerKey": true
            }
        ]
    },
    {
        "id": "943",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which command would you use to apply a series of patches from one branch to another?",
        "options": [
            {
                "description": "git apply-patches",
                "isAnswerKey": false
            },
            {
                "description": "git cherry-pick",
                "isAnswerKey": false
            },
            {
                "description": "git am",
                "isAnswerKey": true
            },
            {
                "description": "git patch-apply",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "944",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "How do you permanently delete a branch and all its commits from a remote repository?",
        "options": [
            {
                "description": "git branch --delete <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git push origin --delete <branch-name>",
                "isAnswerKey": true
            },
            {
                "description": "git remove branch <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git branch -d <branch-name>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "945",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "You want to squash all commits into one after a rebase. What option do you use to edit the rebase commit list?",
        "options": [
            {
                "description": "edit",
                "isAnswerKey": false
            },
            {
                "description": "squash",
                "isAnswerKey": true
            },
            {
                "description": "fixup",
                "isAnswerKey": false
            },
            {
                "description": "combine",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "946",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you ensure that all future merges will be fast-forward only?",
        "options": [
            {
                "description": "git config merge.ff only",
                "isAnswerKey": true
            },
            {
                "description": "git merge --ff-only",
                "isAnswerKey": false
            },
            {
                "description": "git merge --no-ff",
                "isAnswerKey": false
            },
            {
                "description": "git config ff-only true",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "947",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which command is used to fix a previous commit without changing the commit message?",
        "options": [
            {
                "description": "git commit --amend --no-edit",
                "isAnswerKey": true
            },
            {
                "description": "git commit --fix --no-edit",
                "isAnswerKey": false
            },
            {
                "description": "git amend --no-edit",
                "isAnswerKey": false
            },
            {
                "description": "git change --no-edit",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "948",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "When working with multiple remotes, how do you push changes to a specific remote?",
        "options": [
            {
                "description": "git push origin <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git push <remote-name> <branch-name>",
                "isAnswerKey": true
            },
            {
                "description": "git push remote <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git push --remote <branch-name>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "949",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "You want to navigate to a specific commit in the history and create a new branch from there. What command sequence would you use?",
        "options": [
            {
                "description": "git checkout -b <branch-name> <commit-hash>",
                "isAnswerKey": true
            },
            {
                "description": "git branch <branch-name> <commit-hash> && git checkout <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git checkout --detach <commit-hash> && git branch <branch-name>",
                "isAnswerKey": false
            },
            {
                "description": "git branch from <commit-hash> <branch-name>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "950",
        "skill": "github",
        "category": "version control",
        "seniority": "middle",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the effect of 'git reset --hard origin/master'?",
        "options": [
            {
                "description": "It updates the local master branch to match the remote master branch",
                "isAnswerKey": true
            },
            {
                "description": "It discards all changes in the working directory",
                "isAnswerKey": false
            },
            {
                "description": "It merges changes from the remote master into the local branch",
                "isAnswerKey": false
            },
            {
                "description": "It deletes all local branches except master",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "951",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which Git command is used to remove a file from the working directory and the Git index?",
        "options": [
            {
                "description": "git rm",
                "isAnswerKey": true
            },
            {
                "description": "git delete",
                "isAnswerKey": false
            },
            {
                "description": "git remove",
                "isAnswerKey": false
            },
            {
                "description": "git erase",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "952",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the purpose of the 'git stash' command?",
        "options": [
            {
                "description": "To save changes temporarily without committing them",
                "isAnswerKey": true
            },
            {
                "description": "To permanently delete uncommitted changes",
                "isAnswerKey": false
            },
            {
                "description": "To apply changes from one branch to another",
                "isAnswerKey": false
            },
            {
                "description": "To create a new branch with stashed changes",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "953",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In Git, what is the function of 'git rebase'?",
        "options": [
            {
                "description": "To integrate changes from another branch",
                "isAnswerKey": true
            },
            {
                "description": "To delete a branch permanently",
                "isAnswerKey": false
            },
            {
                "description": "To reset the current HEAD to a previous commit",
                "isAnswerKey": false
            },
            {
                "description": "To merge two branches into one",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "954",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What does the 'git clone' command do?",
        "options": [
            {
                "description": "It creates a copy of an existing repository",
                "isAnswerKey": true
            },
            {
                "description": "It initializes a new Git repository",
                "isAnswerKey": false
            },
            {
                "description": "It updates the local repository with changes from the remote",
                "isAnswerKey": false
            },
            {
                "description": "It adds a new file to the staging area",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "955",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which command is used to view the commit history in Git?",
        "options": [
            {
                "description": "git log",
                "isAnswerKey": true
            },
            {
                "description": "git history",
                "isAnswerKey": false
            },
            {
                "description": "git show",
                "isAnswerKey": false
            },
            {
                "description": "git commits",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "956",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What does 'git fetch' do in a Git repository?",
        "options": [
            {
                "description": "It downloads objects and refs from another repository",
                "isAnswerKey": true
            },
            {
                "description": "It merges changes from the remote repository",
                "isAnswerKey": false
            },
            {
                "description": "It pushes changes to the remote repository",
                "isAnswerKey": false
            },
            {
                "description": "It commits changes to the local repository",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "957",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "Which command would you use to discard changes in the working directory?",
        "options": [
            {
                "description": "git checkout -- <file>",
                "isAnswerKey": true
            },
            {
                "description": "git revert <file>",
                "isAnswerKey": false
            },
            {
                "description": "git discard <file>",
                "isAnswerKey": false
            },
            {
                "description": "git reset <file>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "958",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the main purpose of the 'git branch' command?",
        "options": [
            {
                "description": "To list, create, or delete branches",
                "isAnswerKey": true
            },
            {
                "description": "To merge two branches",
                "isAnswerKey": false
            },
            {
                "description": "To switch between branches",
                "isAnswerKey": false
            },
            {
                "description": "To rename a branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "959",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "In Git, what is a 'HEAD'?",
        "options": [
            {
                "description": "A reference to the last commit in the current checkout",
                "isAnswerKey": true
            },
            {
                "description": "The main branch of a repository",
                "isAnswerKey": false
            },
            {
                "description": "A file containing configuration information",
                "isAnswerKey": false
            },
            {
                "description": "A tag for marking important commits",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "960",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 1,
        "type": "multiple_choice",
        "question": "What is the outcome of running 'git merge' command?",
        "options": [
            {
                "description": "It integrates changes from the specified branch into the current branch",
                "isAnswerKey": true
            },
            {
                "description": "It creates a new branch with merged changes",
                "isAnswerKey": false
            },
            {
                "description": "It reverts the last commit on the current branch",
                "isAnswerKey": false
            },
            {
                "description": "It deletes the specified branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "961",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "You have a Git repository with a feature branch that has diverged from the main branch. Which command would you use to bring the feature branch up to date without creating a merge commit?",
        "options": [
            {
                "description": "git rebase main",
                "isAnswerKey": true
            },
            {
                "description": "git merge main",
                "isAnswerKey": false
            },
            {
                "description": "git pull --no-commit",
                "isAnswerKey": false
            },
            {
                "description": "git cherry-pick main",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "962",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Given the following Git command: 'git log --oneline --graph --decorate --all', what is the purpose of '--graph'?",
        "options": [
            {
                "description": "To display a text-based graph of the commit history",
                "isAnswerKey": true
            },
            {
                "description": "To show the contents of the commits in a graphical format",
                "isAnswerKey": false
            },
            {
                "description": "To visualize the merge conflicts in the branch",
                "isAnswerKey": false
            },
            {
                "description": "To export the commit history as a graph file",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "963",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "You notice a mistake in the last commit message. Which Git command allows you to edit the last commit message?",
        "options": [
            {
                "description": "git commit --amend",
                "isAnswerKey": true
            },
            {
                "description": "git edit-commit-message",
                "isAnswerKey": false
            },
            {
                "description": "git change-message",
                "isAnswerKey": false
            },
            {
                "description": "git update-message",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "964",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "How can you view the changes made in a specific commit in Git?",
        "options": [
            {
                "description": "git show <commit-hash>",
                "isAnswerKey": true
            },
            {
                "description": "git diff <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git log <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git commit-view <commit-hash>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "965",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which command is used to apply stashed changes to the current working directory in Git?",
        "options": [
            {
                "description": "git stash apply",
                "isAnswerKey": true
            },
            {
                "description": "git stash pop",
                "isAnswerKey": false
            },
            {
                "description": "git stash merge",
                "isAnswerKey": false
            },
            {
                "description": "git stash restore",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "966",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "In Git, what happens if you run 'git push --force'?",
        "options": [
            {
                "description": "It overwrites the remote branch with your local branch, possibly losing changes",
                "isAnswerKey": true
            },
            {
                "description": "It forces a merge of your local branch with the remote branch",
                "isAnswerKey": false
            },
            {
                "description": "It pushes all local branches to the remote repository",
                "isAnswerKey": false
            },
            {
                "description": "It synchronizes the local repository with the remote",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "967",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the effect of running 'git reset --hard HEAD~1'?",
        "options": [
            {
                "description": "It resets the current branch to the previous commit and discards all changes",
                "isAnswerKey": true
            },
            {
                "description": "It creates a new commit with the current changes",
                "isAnswerKey": false
            },
            {
                "description": "It moves the current branch pointer to the first commit",
                "isAnswerKey": false
            },
            {
                "description": "It deletes the last commit from the repository",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "968",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "Which Git command would you use to continue a merge after resolving conflicts?",
        "options": [
            {
                "description": "git commit",
                "isAnswerKey": true
            },
            {
                "description": "git merge continue",
                "isAnswerKey": false
            },
            {
                "description": "git resolve",
                "isAnswerKey": false
            },
            {
                "description": "git merge-complete",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "969",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "What is the primary difference between 'git pull' and 'git fetch'?",
        "options": [
            {
                "description": "'git pull' downloads and merges changes, while 'git fetch' only downloads changes",
                "isAnswerKey": true
            },
            {
                "description": "'git pull' only updates the working directory, 'git fetch' updates the index",
                "isAnswerKey": false
            },
            {
                "description": "'git pull' is used for remote repositories, 'git fetch' for local",
                "isAnswerKey": false
            },
            {
                "description": "'git fetch' commits changes directly, 'git pull' does not",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "970",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 2,
        "type": "multiple_choice",
        "question": "You want to compare two branches in Git to see the differences in their commits. Which command would you use?",
        "options": [
            {
                "description": "git diff branch1..branch2",
                "isAnswerKey": true
            },
            {
                "description": "git compare branch1 branch2",
                "isAnswerKey": false
            },
            {
                "description": "git branch-diff branch1 branch2",
                "isAnswerKey": false
            },
            {
                "description": "git log --diff branch1 branch2",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "971",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "Consider the following Git command: 'git stash save \"WIP: new feature\"'. What does this command do?",
        "options": [
            {
                "description": "It saves the current changes to a new stash with a custom message",
                "isAnswerKey": true
            },
            {
                "description": "It applies the last saved stash with a message",
                "isAnswerKey": false
            },
            {
                "description": "It removes the last stash entry and adds a new one",
                "isAnswerKey": false
            },
            {
                "description": "It commits the current changes to a temporary branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "972",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "You need to split a large commit into two smaller ones. Which sequence of commands should you use in Git?",
        "options": [
            {
                "description": "git reset HEAD~1; git add -p; git commit",
                "isAnswerKey": true
            },
            {
                "description": "git cherry-pick HEAD~1; git rebase -i",
                "isAnswerKey": false
            },
            {
                "description": "git branch split; git commit --split",
                "isAnswerKey": false
            },
            {
                "description": "git commit --amend --split",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "973",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "In a Git repository, you want to squash the last three commits into a single commit. What is the correct approach?",
        "options": [
            {
                "description": "git rebase -i HEAD~3",
                "isAnswerKey": true
            },
            {
                "description": "git merge --squash HEAD~3",
                "isAnswerKey": false
            },
            {
                "description": "git commit --squash HEAD~3",
                "isAnswerKey": false
            },
            {
                "description": "git reset --squash HEAD~3",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "974",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "You want to remove a remote branch 'feature-xyz'. Which command should you use?",
        "options": [
            {
                "description": "git push origin --delete feature-xyz",
                "isAnswerKey": true
            },
            {
                "description": "git branch -d origin/feature-xyz",
                "isAnswerKey": false
            },
            {
                "description": "git remote rm feature-xyz",
                "isAnswerKey": false
            },
            {
                "description": "git delete origin feature-xyz",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "975",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "To ensure your commits are verified by GPG, which configuration setting must be enabled in Git?",
        "options": [
            {
                "description": "git config commit.gpgSign true",
                "isAnswerKey": true
            },
            {
                "description": "git config gpg.autoVerify true",
                "isAnswerKey": false
            },
            {
                "description": "git config gpg.verifyCommit true",
                "isAnswerKey": false
            },
            {
                "description": "git config verify.gpgSign true",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "976",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "You have a detached HEAD in your Git repository. Which command should you run to attach it back to the main branch?",
        "options": [
            {
                "description": "git checkout main",
                "isAnswerKey": true
            },
            {
                "description": "git merge main",
                "isAnswerKey": false
            },
            {
                "description": "git rebase main",
                "isAnswerKey": false
            },
            {
                "description": "git attach main",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "977",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "How can you view the list of all stashes created in your Git repository?",
        "options": [
            {
                "description": "git stash list",
                "isAnswerKey": true
            },
            {
                "description": "git show stash",
                "isAnswerKey": false
            },
            {
                "description": "git stash --list",
                "isAnswerKey": false
            },
            {
                "description": "git stash view",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "978",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "You need to rename a branch in your Git repository from 'old-branch' to 'new-branch'. Which command would you use?",
        "options": [
            {
                "description": "git branch -m old-branch new-branch",
                "isAnswerKey": true
            },
            {
                "description": "git rename-branch old-branch new-branch",
                "isAnswerKey": false
            },
            {
                "description": "git branch rename old-branch new-branch",
                "isAnswerKey": false
            },
            {
                "description": "git branch --rename old-branch new-branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "979",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "In Git, how can you view all remote repositories linked to your local repository?",
        "options": [
            {
                "description": "git remote -v",
                "isAnswerKey": true
            },
            {
                "description": "git remote show",
                "isAnswerKey": false
            },
            {
                "description": "git remote list",
                "isAnswerKey": false
            },
            {
                "description": "git remotes",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "980",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 3,
        "type": "multiple_choice",
        "question": "What is the effect of running 'git cherry-pick <commit-hash>'?",
        "options": [
            {
                "description": "It applies the changes from the specified commit to the current branch",
                "isAnswerKey": true
            },
            {
                "description": "It deletes the specified commit from the branch",
                "isAnswerKey": false
            },
            {
                "description": "It moves the specified commit to a new branch",
                "isAnswerKey": false
            },
            {
                "description": "It merges changes from the specified commit to the main branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "981",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "You encounter a merge conflict in Git. After resolving it, you want to ensure everything is correct before committing. Which command should you run to verify the changes?",
        "options": [
            {
                "description": "git diff --cached",
                "isAnswerKey": true
            },
            {
                "description": "git status --verify",
                "isAnswerKey": false
            },
            {
                "description": "git check-conflicts",
                "isAnswerKey": false
            },
            {
                "description": "git resolve --verify",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "982",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "You want to sign your commits with a GPG key in Git. Which configuration setting should be used?",
        "options": [
            {
                "description": "git config --global user.signingkey <key-id>",
                "isAnswerKey": true
            },
            {
                "description": "git config --global commit.signingKey <key-id>",
                "isAnswerKey": false
            },
            {
                "description": "git config --global gpg.key <key-id>",
                "isAnswerKey": false
            },
            {
                "description": "git config --global signing.key <key-id>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "983",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "To view the difference between the working directory and the last commit, which Git command would you use?",
        "options": [
            {
                "description": "git diff HEAD",
                "isAnswerKey": true
            },
            {
                "description": "git diff --staged",
                "isAnswerKey": false
            },
            {
                "description": "git diff --committed",
                "isAnswerKey": false
            },
            {
                "description": "git log --diff",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "984",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you revert a specific commit in the middle of your commit history?",
        "options": [
            {
                "description": "git revert <commit-hash>",
                "isAnswerKey": true
            },
            {
                "description": "git reset <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git rollback <commit-hash>",
                "isAnswerKey": false
            },
            {
                "description": "git undo <commit-hash>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "985",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "Which Git command is used to stage changes for the next commit?",
        "options": [
            {
                "description": "git add",
                "isAnswerKey": true
            },
            {
                "description": "git stage",
                "isAnswerKey": false
            },
            {
                "description": "git commit --staged",
                "isAnswerKey": false
            },
            {
                "description": "git save",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "986",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the command to temporarily apply stashed changes and then drop them from the stash list?",
        "options": [
            {
                "description": "git stash pop",
                "isAnswerKey": true
            },
            {
                "description": "git stash apply",
                "isAnswerKey": false
            },
            {
                "description": "git stash drop",
                "isAnswerKey": false
            },
            {
                "description": "git stash clear",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "987",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "When you want to undo a commit while preserving the changes in the working directory, which command should you use?",
        "options": [
            {
                "description": "git reset HEAD~1",
                "isAnswerKey": true
            },
            {
                "description": "git revert HEAD~1",
                "isAnswerKey": false
            },
            {
                "description": "git checkout HEAD~1",
                "isAnswerKey": false
            },
            {
                "description": "git undo HEAD~1",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "988",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "You want to see the changes between two specific commits. Which Git command should you use?",
        "options": [
            {
                "description": "git diff <commit1> <commit2>",
                "isAnswerKey": true
            },
            {
                "description": "git log <commit1> <commit2>",
                "isAnswerKey": false
            },
            {
                "description": "git show <commit1> <commit2>",
                "isAnswerKey": false
            },
            {
                "description": "git compare <commit1> <commit2>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "989",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "How can you view the commit history of a specific file in Git?",
        "options": [
            {
                "description": "git log -- <file>",
                "isAnswerKey": true
            },
            {
                "description": "git history <file>",
                "isAnswerKey": false
            },
            {
                "description": "git show <file>",
                "isAnswerKey": false
            },
            {
                "description": "git file-log <file>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "990",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 4,
        "type": "multiple_choice",
        "question": "What is the result of running 'git checkout -b new-branch'?",
        "options": [
            {
                "description": "Creates and switches to a new branch named 'new-branch'",
                "isAnswerKey": true
            },
            {
                "description": "Deletes the branch named 'new-branch'",
                "isAnswerKey": false
            },
            {
                "description": "Renames the current branch to 'new-branch'",
                "isAnswerKey": false
            },
            {
                "description": "Switches to the branch 'new-branch'",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "991",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "In Git, if you want to resolve a conflict by choosing all changes from the incoming branch, which command can you use?",
        "options": [
            {
                "description": "git checkout --theirs <file>",
                "isAnswerKey": true
            },
            {
                "description": "git accept-incoming <file>",
                "isAnswerKey": false
            },
            {
                "description": "git resolve-theirs <file>",
                "isAnswerKey": false
            },
            {
                "description": "git merge-accept <file>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "992",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "How can you find out which files have changed between two commits?",
        "options": [
            {
                "description": "git diff --name-only <commit1> <commit2>",
                "isAnswerKey": true
            },
            {
                "description": "git log --changes <commit1> <commit2>",
                "isAnswerKey": false
            },
            {
                "description": "git show --files <commit1> <commit2>",
                "isAnswerKey": false
            },
            {
                "description": "git status <commit1> <commit2>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "993",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "To prevent a file from being tracked in Git while keeping it in the working directory, which command should you use?",
        "options": [
            {
                "description": "git rm --cached <file>",
                "isAnswerKey": true
            },
            {
                "description": "git ignore <file>",
                "isAnswerKey": false
            },
            {
                "description": "git untrack <file>",
                "isAnswerKey": false
            },
            {
                "description": "git exclude <file>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "994",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "In Git, how do you list all commits that are reachable from a specific branch but not from the current branch?",
        "options": [
            {
                "description": "git log current-branch..specific-branch",
                "isAnswerKey": true
            },
            {
                "description": "git diff current-branch specific-branch",
                "isAnswerKey": false
            },
            {
                "description": "git compare current-branch specific-branch",
                "isAnswerKey": false
            },
            {
                "description": "git show current-branch specific-branch",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "995",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "You need to see a summary of all branches and their last commit messages in Git. Which command would you use?",
        "options": [
            {
                "description": "git branch -v",
                "isAnswerKey": true
            },
            {
                "description": "git log --branches",
                "isAnswerKey": false
            },
            {
                "description": "git show-branches",
                "isAnswerKey": false
            },
            {
                "description": "git branch-summary",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "996",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "Which Git command allows you to see the history of changes for a specific line in a file?",
        "options": [
            {
                "description": "git blame <file>",
                "isAnswerKey": true
            },
            {
                "description": "git track <file>",
                "isAnswerKey": false
            },
            {
                "description": "git history <file>",
                "isAnswerKey": false
            },
            {
                "description": "git annotate <file>",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "997",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "What is the effect of executing 'git bisect start' in a Git repository?",
        "options": [
            {
                "description": "It starts a binary search to find a commit that introduced a bug",
                "isAnswerKey": true
            },
            {
                "description": "It begins the process of bisecting a file to remove conflicts",
                "isAnswerKey": false
            },
            {
                "description": "It splits the repository into two separate branches",
                "isAnswerKey": false
            },
            {
                "description": "It initializes a bisect operation to merge branches",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "998",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "When a Git merge results in a conflict, which file contains the conflict markers?",
        "options": [
            {
                "description": "The conflicted file itself",
                "isAnswerKey": true
            },
            {
                "description": "MERGE_MSG",
                "isAnswerKey": false
            },
            {
                "description": "CONFLICT_LOG",
                "isAnswerKey": false
            },
            {
                "description": "CONFLICT_MARKERS",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "999",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "In Git, how can you configure a repository to automatically rebase when pulling?",
        "options": [
            {
                "description": "git config pull.rebase true",
                "isAnswerKey": true
            },
            {
                "description": "git config rebase.auto true",
                "isAnswerKey": false
            },
            {
                "description": "git config auto.rebase true",
                "isAnswerKey": false
            },
            {
                "description": "git config pull.autoRebase true",
                "isAnswerKey": false
            }
        ]
    },
    {
        "id": "1000",
        "skill": "github",
        "category": "version control",
        "seniority": "senior",
        "level": 5,
        "type": "multiple_choice",
        "question": "If a Git branch is tracking a remote branch, which command updates the remote tracking branch reference?",
        "options": [
            {
                "description": "git fetch",
                "isAnswerKey": true
            },
            {
                "description": "git pull",
                "isAnswerKey": false
            },
            {
                "description": "git update",
                "isAnswerKey": false
            },
            {
                "description": "git sync",
                "isAnswerKey": false
            }
        ]
    }
]